# coding: utf-8

"""
    Intercom API

    The intercom API reference.  # noqa: E501

    The version of the OpenAPI document: 2.7
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from intercom_python_api import schemas  # noqa: F401


class DataExportCsv(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    A CSV output file
    """


    class MetaOapg:
        
        class properties:
            user_id = schemas.StrSchema
            user_external_id = schemas.StrSchema
            company_id = schemas.StrSchema
            email = schemas.StrSchema
            name = schemas.StrSchema
            ruleset_id = schemas.StrSchema
            content_id = schemas.StrSchema
            content_type = schemas.StrSchema
            content_title = schemas.StrSchema
            ruleset_version_id = schemas.StrSchema
            receipt_id = schemas.StrSchema
            received_at = schemas.IntSchema
            series_id = schemas.StrSchema
            series_title = schemas.StrSchema
            node_id = schemas.StrSchema
            first_reply = schemas.IntSchema
            first_completion = schemas.IntSchema
            first_series_completion = schemas.IntSchema
            first_series_disengagement = schemas.IntSchema
            first_series_exit = schemas.IntSchema
            first_goal_success = schemas.IntSchema
            first_open = schemas.IntSchema
            first_click = schemas.IntSchema
            first_dismisall = schemas.IntSchema
            first_unsubscribe = schemas.IntSchema
            first_hard_bounce = schemas.IntSchema
            __annotations__ = {
                "user_id": user_id,
                "user_external_id": user_external_id,
                "company_id": company_id,
                "email": email,
                "name": name,
                "ruleset_id": ruleset_id,
                "content_id": content_id,
                "content_type": content_type,
                "content_title": content_title,
                "ruleset_version_id": ruleset_version_id,
                "receipt_id": receipt_id,
                "received_at": received_at,
                "series_id": series_id,
                "series_title": series_title,
                "node_id": node_id,
                "first_reply": first_reply,
                "first_completion": first_completion,
                "first_series_completion": first_series_completion,
                "first_series_disengagement": first_series_disengagement,
                "first_series_exit": first_series_exit,
                "first_goal_success": first_goal_success,
                "first_open": first_open,
                "first_click": first_click,
                "first_dismisall": first_dismisall,
                "first_unsubscribe": first_unsubscribe,
                "first_hard_bounce": first_hard_bounce,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["user_id"]) -> MetaOapg.properties.user_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["user_external_id"]) -> MetaOapg.properties.user_external_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["company_id"]) -> MetaOapg.properties.company_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["email"]) -> MetaOapg.properties.email: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["name"]) -> MetaOapg.properties.name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ruleset_id"]) -> MetaOapg.properties.ruleset_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["content_id"]) -> MetaOapg.properties.content_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["content_type"]) -> MetaOapg.properties.content_type: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["content_title"]) -> MetaOapg.properties.content_title: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ruleset_version_id"]) -> MetaOapg.properties.ruleset_version_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["receipt_id"]) -> MetaOapg.properties.receipt_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["received_at"]) -> MetaOapg.properties.received_at: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["series_id"]) -> MetaOapg.properties.series_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["series_title"]) -> MetaOapg.properties.series_title: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["node_id"]) -> MetaOapg.properties.node_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["first_reply"]) -> MetaOapg.properties.first_reply: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["first_completion"]) -> MetaOapg.properties.first_completion: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["first_series_completion"]) -> MetaOapg.properties.first_series_completion: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["first_series_disengagement"]) -> MetaOapg.properties.first_series_disengagement: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["first_series_exit"]) -> MetaOapg.properties.first_series_exit: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["first_goal_success"]) -> MetaOapg.properties.first_goal_success: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["first_open"]) -> MetaOapg.properties.first_open: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["first_click"]) -> MetaOapg.properties.first_click: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["first_dismisall"]) -> MetaOapg.properties.first_dismisall: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["first_unsubscribe"]) -> MetaOapg.properties.first_unsubscribe: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["first_hard_bounce"]) -> MetaOapg.properties.first_hard_bounce: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["user_id", "user_external_id", "company_id", "email", "name", "ruleset_id", "content_id", "content_type", "content_title", "ruleset_version_id", "receipt_id", "received_at", "series_id", "series_title", "node_id", "first_reply", "first_completion", "first_series_completion", "first_series_disengagement", "first_series_exit", "first_goal_success", "first_open", "first_click", "first_dismisall", "first_unsubscribe", "first_hard_bounce", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["user_id"]) -> typing.Union[MetaOapg.properties.user_id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["user_external_id"]) -> typing.Union[MetaOapg.properties.user_external_id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["company_id"]) -> typing.Union[MetaOapg.properties.company_id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["email"]) -> typing.Union[MetaOapg.properties.email, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["name"]) -> typing.Union[MetaOapg.properties.name, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ruleset_id"]) -> typing.Union[MetaOapg.properties.ruleset_id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["content_id"]) -> typing.Union[MetaOapg.properties.content_id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["content_type"]) -> typing.Union[MetaOapg.properties.content_type, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["content_title"]) -> typing.Union[MetaOapg.properties.content_title, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ruleset_version_id"]) -> typing.Union[MetaOapg.properties.ruleset_version_id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["receipt_id"]) -> typing.Union[MetaOapg.properties.receipt_id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["received_at"]) -> typing.Union[MetaOapg.properties.received_at, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["series_id"]) -> typing.Union[MetaOapg.properties.series_id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["series_title"]) -> typing.Union[MetaOapg.properties.series_title, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["node_id"]) -> typing.Union[MetaOapg.properties.node_id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["first_reply"]) -> typing.Union[MetaOapg.properties.first_reply, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["first_completion"]) -> typing.Union[MetaOapg.properties.first_completion, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["first_series_completion"]) -> typing.Union[MetaOapg.properties.first_series_completion, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["first_series_disengagement"]) -> typing.Union[MetaOapg.properties.first_series_disengagement, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["first_series_exit"]) -> typing.Union[MetaOapg.properties.first_series_exit, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["first_goal_success"]) -> typing.Union[MetaOapg.properties.first_goal_success, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["first_open"]) -> typing.Union[MetaOapg.properties.first_open, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["first_click"]) -> typing.Union[MetaOapg.properties.first_click, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["first_dismisall"]) -> typing.Union[MetaOapg.properties.first_dismisall, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["first_unsubscribe"]) -> typing.Union[MetaOapg.properties.first_unsubscribe, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["first_hard_bounce"]) -> typing.Union[MetaOapg.properties.first_hard_bounce, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["user_id", "user_external_id", "company_id", "email", "name", "ruleset_id", "content_id", "content_type", "content_title", "ruleset_version_id", "receipt_id", "received_at", "series_id", "series_title", "node_id", "first_reply", "first_completion", "first_series_completion", "first_series_disengagement", "first_series_exit", "first_goal_success", "first_open", "first_click", "first_dismisall", "first_unsubscribe", "first_hard_bounce", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        user_id: typing.Union[MetaOapg.properties.user_id, str, schemas.Unset] = schemas.unset,
        user_external_id: typing.Union[MetaOapg.properties.user_external_id, str, schemas.Unset] = schemas.unset,
        company_id: typing.Union[MetaOapg.properties.company_id, str, schemas.Unset] = schemas.unset,
        email: typing.Union[MetaOapg.properties.email, str, schemas.Unset] = schemas.unset,
        name: typing.Union[MetaOapg.properties.name, str, schemas.Unset] = schemas.unset,
        ruleset_id: typing.Union[MetaOapg.properties.ruleset_id, str, schemas.Unset] = schemas.unset,
        content_id: typing.Union[MetaOapg.properties.content_id, str, schemas.Unset] = schemas.unset,
        content_type: typing.Union[MetaOapg.properties.content_type, str, schemas.Unset] = schemas.unset,
        content_title: typing.Union[MetaOapg.properties.content_title, str, schemas.Unset] = schemas.unset,
        ruleset_version_id: typing.Union[MetaOapg.properties.ruleset_version_id, str, schemas.Unset] = schemas.unset,
        receipt_id: typing.Union[MetaOapg.properties.receipt_id, str, schemas.Unset] = schemas.unset,
        received_at: typing.Union[MetaOapg.properties.received_at, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        series_id: typing.Union[MetaOapg.properties.series_id, str, schemas.Unset] = schemas.unset,
        series_title: typing.Union[MetaOapg.properties.series_title, str, schemas.Unset] = schemas.unset,
        node_id: typing.Union[MetaOapg.properties.node_id, str, schemas.Unset] = schemas.unset,
        first_reply: typing.Union[MetaOapg.properties.first_reply, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        first_completion: typing.Union[MetaOapg.properties.first_completion, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        first_series_completion: typing.Union[MetaOapg.properties.first_series_completion, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        first_series_disengagement: typing.Union[MetaOapg.properties.first_series_disengagement, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        first_series_exit: typing.Union[MetaOapg.properties.first_series_exit, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        first_goal_success: typing.Union[MetaOapg.properties.first_goal_success, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        first_open: typing.Union[MetaOapg.properties.first_open, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        first_click: typing.Union[MetaOapg.properties.first_click, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        first_dismisall: typing.Union[MetaOapg.properties.first_dismisall, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        first_unsubscribe: typing.Union[MetaOapg.properties.first_unsubscribe, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        first_hard_bounce: typing.Union[MetaOapg.properties.first_hard_bounce, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'DataExportCsv':
        return super().__new__(
            cls,
            *_args,
            user_id=user_id,
            user_external_id=user_external_id,
            company_id=company_id,
            email=email,
            name=name,
            ruleset_id=ruleset_id,
            content_id=content_id,
            content_type=content_type,
            content_title=content_title,
            ruleset_version_id=ruleset_version_id,
            receipt_id=receipt_id,
            received_at=received_at,
            series_id=series_id,
            series_title=series_title,
            node_id=node_id,
            first_reply=first_reply,
            first_completion=first_completion,
            first_series_completion=first_series_completion,
            first_series_disengagement=first_series_disengagement,
            first_series_exit=first_series_exit,
            first_goal_success=first_goal_success,
            first_open=first_open,
            first_click=first_click,
            first_dismisall=first_dismisall,
            first_unsubscribe=first_unsubscribe,
            first_hard_bounce=first_hard_bounce,
            _configuration=_configuration,
            **kwargs,
        )

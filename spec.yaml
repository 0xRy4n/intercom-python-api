components:
  schemas:
    activity_log:
      description: Activities performed by admins.
      nullable: true
      properties:
        activity_description:
          description: A sentence or two describing the activity.
          example: Admin updated the app's name to "My App".
          type: string
        activity_type:
          enum:
          - admin_assignment_limit_change
          - admin_away_mode_change
          - admin_deletion
          - admin_deprovisioned
          - admin_impersonation_end
          - admin_impersonation_start
          - admin_invite_change
          - admin_invite_creation
          - admin_invite_deletion
          - admin_login_failure
          - admin_login_success
          - admin_logout
          - admin_password_reset_request
          - admin_password_reset_success
          - admin_permission_change
          - admin_provisioned
          - admin_two_factor_auth_change
          - admin_unauthorized_sign_in_method
          - app_admin_join
          - app_authentication_method_change
          - app_data_deletion
          - app_data_export
          - app_google_sso_domain_change
          - app_identity_verification_change
          - app_name_change
          - app_outbound_address_change
          - app_package_installation
          - app_package_token_regeneration
          - app_package_uninstallation
          - app_team_creation
          - app_team_deletion
          - app_team_membership_modification
          - app_timezone_change
          - app_webhook_creation
          - app_webhook_deletion
          - articles_in_messenger_enabled_change
          - bulk_delete
          - bulk_export
          - campaign_deletion
          - campaign_state_change
          - conversation_part_deletion
          - conversation_topic_change
          - conversation_topic_creation
          - conversation_topic_deletion
          - help_center_settings_change
          - inbound_conversations_change
          - inbox_access_change
          - message_deletion
          - message_state_change
          - messenger_look_and_feel_change
          - messenger_search_required_change
          - messenger_spaces_change
          - office_hours_change
          - role_change
          - role_creation
          - role_deletion
          - ruleset_activation_title_preview
          - ruleset_creation
          - ruleset_deletion
          - search_browse_enabled_change
          - search_browse_required_change
          - seat_change
          - seat_revoke
          - security_settings_change
          - temporary_expectation_change
          - upfront_email_collection_change
          - welcome_message_change
          example: app_name_change
          type: string
        created_at:
          description: The time the activity was created.
          example: 1671028894
          format: date-time
          type: integer
        id:
          description: The id representing the activity.
          example: '6'
          type: string
        metadata:
          type: object
        performed_by:
          description: An object representing the admin who performed the activity.
          properties:
            email:
              description: The email of the admin.
              example: john@example.com
              type: string
            id:
              description: The id representing the admin.
              example: '1295'
              type: string
            ip:
              description: The IP address of the admin.
              example: 198.51.100.255
              type: string
            type:
              description: String representing the object's type. Always has the value
                `admin`.
              example: admin
              type: string
          type: object
      title: Activity Log
      type: object
    activity_log_list:
      description: A paginated list of activity logs.
      properties:
        activity_logs:
          description: An array of activity logs
          items:
            $ref: '#/components/schemas/activity_log'
          type: array
        pages:
          $ref: '#/components/schemas/cursor_pages'
        type:
          description: String representing the object's type. Always has the value
            `activity_log.list`.
          example: activity_log.list
          type: string
      title: Paginated Response
      type: object
    addressable_list:
      description: A list used to access other resources from a parent model.
      nullable: false
      properties:
        id:
          description: The id of the addressable object
          example: '123'
          type: string
        type:
          description: The addressable object type
          example: note
          format: uri
          type: string
        url:
          description: Url to get more company resources for this contact
          example: /contacts/5ba682d23d7cf92bef87bfd4/notes
          format: uri
          type: string
      title: Addressable List
      type: object
    admin:
      description: Admins are teammate accounts that have access to a workspace.
      nullable: true
      properties:
        avatar:
          description: Image for the associated team or teammate
          example: https://picsum.photos/200/300
          format: uri
          nullable: true
          type: string
        away_mode_enabled:
          description: Identifies if this admin is currently set in away mode.
          example: false
          type: boolean
        away_mode_reassign:
          description: Identifies if this admin is set to automatically reassign new
            conversations to the apps default inbox.
          example: false
          type: boolean
        email:
          description: The email of the admin.
          example: wash@serenity.io
          type: string
        has_inbox_seat:
          description: Identifies if this admin has a paid inbox seat to restrict/allow
            features that require them.
          example: true
          type: boolean
        id:
          description: The id representing the admin.
          example: '1295'
          type: string
        job_title:
          description: The job title of the admin.
          example: Philosopher
          type: string
        name:
          description: The name of the admin.
          example: Hoban Washburne
          type: string
        team_ids:
          description: This object represents the avatar associated with the admin.
          example:
          - 814865
          items:
            type: integer
          type: array
        team_priority_level:
          $ref: '#/components/schemas/team_priority_level'
        type:
          description: String representing the object's type. Always has the value
            `admin`.
          example: admin
          type: string
      title: Admin
      type: object
    admin_list:
      description: A list of admins associated with a given workspace.
      properties:
        admins:
          description: A list of admins associated with a given workspace.
          items:
            $ref: '#/components/schemas/admin'
          type: array
        type:
          description: String representing the object's type. Always has the value
            `admin.list`.
          example: admin.list
          type: string
      title: Admins
      type: object
    admin_priority_level:
      description: Admin priority levels for the team
      nullable: true
      properties:
        primary_admin_ids:
          description: The primary admin ids for the team
          example:
          - 493881
          items:
            type: integer
          nullable: true
          type: array
        secondary_admin_ids:
          description: The secondary admin ids for the team
          example:
          - 814865
          items:
            type: integer
          nullable: true
          type: array
      title: Admin Priority Level
      type: object
    admin_reply_conversation_request:
      description: Payload of the request to reply on behalf of an admin
      properties:
        admin_id:
          description: The id of the admin who is authoring the comment.
          example: '3156780'
          type: string
        attachment_urls:
          description: A list of image URLs that will be added as attachments. You
            can include up to 5 URLs.
          items:
            format: uri
            type: string
          maxItems: 5
          type: array
        body:
          description: The text body of the reply.\nNotes accept some HTML formatting.\nMust
            be present for comment and note message types.
          example: Hello there!
          type: string
        message_type:
          enum:
          - comment
          - note
          type: string
        type:
          enum:
          - admin
          example: admin
          type: string
      required:
      - message_type
      - type
      - admin_id
      title: Admin Reply
      type: object
    admin_with_app:
      description: Admins are the teammate accounts that have access to a workspace
      nullable: true
      properties:
        app:
          $ref: '#/components/schemas/app'
          description: App that the admin belongs to.
          nullable: true
        avatar:
          description: This object represents the avatar associated with the admin.
          properties:
            image_url:
              description: This object represents the avatar associated with the admin.
              example: https://example.com/avatar.png
              format: uri
              nullable: true
              type: string
            type:
              default: avatar
              description: This is a string that identifies the type of the object.
                It will always have the value `avatar`.
              example: avatar
              type: string
          type: object
        away_mode_enabled:
          description: Identifies if this admin is currently set in away mode.
          example: false
          type: boolean
        away_mode_reassign:
          description: Identifies if this admin is set to automatically reassign new
            conversations to the apps default inbox.
          example: false
          type: boolean
        email:
          description: The email of the admin.
          example: wash@serenity.io
          type: string
        email_verified:
          description: Identifies if this admin's email is verified.
          example: true
          nullable: true
          type: boolean
        has_inbox_seat:
          description: Identifies if this admin has a paid inbox seat to restrict/allow
            features that require them.
          example: true
          type: boolean
        id:
          description: The id representing the admin.
          example: '1295'
          type: string
        job_title:
          description: The job title of the admin.
          example: Philosopher
          type: string
        name:
          description: The name of the admin.
          example: Hoban Washburne
          type: string
        team_ids:
          description: This is a list of ids of the teams that this admin is part
            of.
          example:
          - 814865
          items:
            type: integer
          type: array
        type:
          description: String representing the object's type. Always has the value
            `admin`.
          example: admin
          type: string
      title: Admin
      type: object
    app:
      description: App is a workspace on Intercom
      nullable: true
      properties:
        created_at:
          description: When the app was created.
          example: 1671465577
          type: integer
        id_code:
          description: The id of the app.
          example: xyz789
          type: string
        identity_verification:
          description: Whether or not the app uses identity verification.
          example: false
          type: boolean
        name:
          description: The name of the app.
          example: ACME
          type: string
        region:
          description: The Intercom region the app is located in.
          example: US
          type: string
        timezone:
          description: The timezone of the region where the app is located.
          example: America/Los_Angeles
          type: string
        type:
          default: app
          description: ''
          example: app
          type: string
      title: App
      type: object
    article:
      description: The Articles API is a central place to gather all information and
        take actions on your articles. Articles can live within collections and sections,
        or alternatively they can stand alone.
      properties:
        author_id:
          description: The id of the author of the article. For multilingual articles,
            this will be the id of the author of the default language's content. Must
            be a teammate on the help center's workspace.
          example: '5017691'
          type: integer
        body:
          description: The body of the article in HTML. For multilingual articles,
            this will be the body of the default language's content.
          example: Default language body in html
          nullable: true
          type: string
        created_at:
          description: The time when the article was created. For multilingual articles,
            this will be the timestamp of creation of the default language's content.
          example: 1672928359
          format: date-time
          type: integer
        default_locale:
          description: The default locale of the help center. This field is only returned
            for multilingual help centers.
          example: en
          type: string
        description:
          description: The description of the article. For multilingual articles,
            this will be the description of the default language's content.
          example: Default language description
          nullable: true
          type: string
        id:
          description: The unique identifier for the article which is given by Intercom.
          example: '6871119'
          type: string
        parent_id:
          description: The id of the article's parent collection or section. An article
            without this field stands alone.
          example: '125685'
          nullable: true
          type: integer
        parent_type:
          description: The type of parent, which can either be a `collection` or `section`.
          example: collection
          nullable: true
          type: string
        state:
          default: draft
          description: Whether the article is `published` or is a `draft`. For multilingual
            articles, this will be the state of the default language's content.
          enum:
          - published
          - draft
          example: published
          type: string
        statistics:
          $ref: '#/components/schemas/article_statistics'
          nullable: true
        title:
          description: The title of the article. For multilingual articles, this will
            be the title of the default language's content.
          example: Default language title
          type: string
        translated_content:
          $ref: '#/components/schemas/article_translated_content'
          nullable: true
        type:
          default: article
          description: The type of object - `article`.
          enum:
          - article
          example: article
          type: string
        updated_at:
          description: The time when the article was last updated. For multilingual
            articles, this will be the timestamp of last update of the default language's
            content.
          example: 1672928610
          format: date-time
          type: integer
        url:
          description: The URL of the article. For multilingual articles, this will
            be the URL of the default language's content.
          example: http://intercom.test/help/en/articles/3-default-language
          nullable: true
          type: string
        workspace_id:
          description: The id of the workspace which the article belongs to.
          example: hfi1bx4l
          type: string
      title: Article
      type: object
    article_content:
      description: The Content of an Article.
      nullable: true
      properties:
        author_id:
          description: The ID of the author of the article.
          example: '5017691'
          type: integer
        body:
          description: The body of the article.
          example: This is the body of the article.
          type: string
        created_at:
          description: The time when the article was created.
          example: 1663597223
          format: date-time
          type: integer
        description:
          description: The description of the article.
          example: This article will show you how to create a new article.
          type: string
        state:
          description: Whether the article is `published` or is a `draft` .
          enum:
          - published
          - draft
          example: draft
          type: string
        title:
          description: The title of the article.
          example: How to create a new article
          type: string
        type:
          description: The type of object - `article_content` .
          enum:
          - null
          - article_content
          example: article_content
          type: string
        updated_at:
          description: The time when the article was last updated.
          example: 1663597260
          format: date-time
          type: integer
        url:
          description: The URL of the article.
          example: http://intercom.test/help/en/articles/3-default-language
          type: string
      title: Article Content
      type: object
    article_list:
      description: This will return a list of articles for the App.
      properties:
        data:
          description: An array of Article objects
          items:
            $ref: '#/components/schemas/article'
          type: array
        pages:
          $ref: '#/components/schemas/cursor_pages'
        total_count:
          description: A count of the total number of articles.
          example: 1
          type: integer
        type:
          description: The type of the object - `list`.
          enum:
          - list
          example: list
          type: string
      title: Articles
      type: object
    article_statistics:
      description: The statistics of an article.
      nullable: true
      properties:
        conversions:
          description: The number of conversations started from the article.
          example: 0
          type: integer
        happy_reaction_precentage:
          description: The percentage of happy reactions the article has received
            against other types of reaction.
          example: 40
          type: integer
        netural_reaction_precentage:
          description: The percentage of neutral reactions the article has received
            against other types of reaction.
          example: 40
          type: integer
        reactions:
          description: The number of total reactions the article has received.
          example: 10
          type: integer
        sad_reaction_precentage:
          description: The percentage of sad reactions the article has received against
            other types of reaction.
          example: 20
          type: integer
        type:
          default: article_statistics
          description: The type of object - `article_statistics`.
          enum:
          - article_statistics
          example: article_statistics
          type: string
        views:
          description: The number of total views the article has received.
          example: 10
          type: integer
      title: Article Statistics
      type: object
    article_translated_content:
      description: The Translated Content of an Article. The keys are the locale codes
        and the values are the translated content of the article.
      nullable: true
      properties:
        ar:
          $ref: '#/components/schemas/article_content'
          description: The content of the article in Arabic
        bg:
          $ref: '#/components/schemas/article_content'
          description: The content of the article in Bulgarian
        bs:
          $ref: '#/components/schemas/article_content'
          description: The content of the article in Bosnian
        ca:
          $ref: '#/components/schemas/article_content'
          description: The content of the article in Catalan
        cs:
          $ref: '#/components/schemas/article_content'
          description: The content of the article in Czech
        da:
          $ref: '#/components/schemas/article_content'
          description: The content of the article in Danish
        de:
          $ref: '#/components/schemas/article_content'
          description: The content of the article in German
        el:
          $ref: '#/components/schemas/article_content'
          description: The content of the article in Greek
        en:
          $ref: '#/components/schemas/article_content'
          description: The content of the article in English
        es:
          $ref: '#/components/schemas/article_content'
          description: The content of the article in Spanish
        et:
          $ref: '#/components/schemas/article_content'
          description: The content of the article in Estonian
        fi:
          $ref: '#/components/schemas/article_content'
          description: The content of the article in Finnish
        fr:
          $ref: '#/components/schemas/article_content'
          description: The content of the article in French
        he:
          $ref: '#/components/schemas/article_content'
          description: The content of the article in Hebrew
        hr:
          $ref: '#/components/schemas/article_content'
          description: The content of the article in Croatian
        hu:
          $ref: '#/components/schemas/article_content'
          description: The content of the article in Hungarian
        id:
          $ref: '#/components/schemas/article_content'
          description: The content of the article in Indonesian
        it:
          $ref: '#/components/schemas/article_content'
          description: The content of the article in Italian
        ja:
          $ref: '#/components/schemas/article_content'
          description: The content of the article in Japanese
        ko:
          $ref: '#/components/schemas/article_content'
          description: The content of the article in Korean
        lt:
          $ref: '#/components/schemas/article_content'
          description: The content of the article in Lithuanian
        lv:
          $ref: '#/components/schemas/article_content'
          description: The content of the article in Latvian
        mn:
          $ref: '#/components/schemas/article_content'
          description: The content of the article in Mongolian
        nb:
          $ref: '#/components/schemas/article_content'
          description: The content of the article in Norwegian
        nl:
          $ref: '#/components/schemas/article_content'
          description: The content of the article in Dutch
        pl:
          $ref: '#/components/schemas/article_content'
          description: The content of the article in Polish
        pt:
          $ref: '#/components/schemas/article_content'
          description: The content of the article in Portuguese (Portugal)
        pt-BR:
          $ref: '#/components/schemas/article_content'
          description: The content of the article in Portuguese (Brazil)
        ro:
          $ref: '#/components/schemas/article_content'
          description: The content of the article in Romanian
        ru:
          $ref: '#/components/schemas/article_content'
          description: The content of the article in Russian
        sl:
          $ref: '#/components/schemas/article_content'
          description: The content of the article in Slovenian
        sr:
          $ref: '#/components/schemas/article_content'
          description: The content of the article in Serbian
        sv:
          $ref: '#/components/schemas/article_content'
          description: The content of the article in Swedish
        tr:
          $ref: '#/components/schemas/article_content'
          description: The content of the article in Turkish
        type:
          description: The type of object - article_translated_content.
          enum:
          - null
          - article_translated_content
          example: article_translated_content
          type: string
        vi:
          $ref: '#/components/schemas/article_content'
          description: The content of the article in Vietnamese
        zh-CN:
          $ref: '#/components/schemas/article_content'
          description: The content of the article in Chinese (China)
        zh-TW:
          $ref: '#/components/schemas/article_content'
          description: The content of the article in Chinese (Taiwan)
      title: Article Translated Content
      type: object
    assign_conversation_request:
      description: Payload of the request to assign a conversation
      properties:
        admin_id:
          description: The id of the admin who is performing the action.
          example: '12345'
          type: string
        assignee_id:
          description: The `id`` of the `admin` or `team` which will be assigned the
            conversation.\nA conversation can be assigned both an admin and a team.\nSet
            `0` if you want this assign to no admin or team (ie. Unassigned).
          example: '4324241'
          type: string
        body:
          description: Optionally you can leave a note in the conversation for additional
            context to other teammates.
          example: Please take a look at this conversation.
          type: string
        message_type:
          enum:
          - assignment
          example: assignment
          type: string
        type:
          enum:
          - admin
          - team
          example: admin
          type: string
      required:
      - message_type
      - type
      - admin_id
      - assignee_id
      title: Assign Conversation Request
      type: object
    attach_contact_to_conversation_request:
      description: Payload of the request to assign a conversation
      properties:
        admin_id:
          description: The `id` of the admin who is adding the new participant.
          example: '12345'
          type: string
        customer:
          oneOf:
          - properties:
              customer:
                $ref: '#/components/schemas/customer_request'
              intercom_user_id:
                description: The identifier for the contact as given by Intercom.
                example: 6329bd9ffe4e2e91dac76188
                type: string
            required:
            - intercom_user_id
            title: Intercom User ID
          - properties:
              customer:
                $ref: '#/components/schemas/customer_request'
              user_id:
                description: The external_id you have defined for the contact who
                  is being added as a participant.
                example: 6329bd9ffe4e2e91dac76188
                type: string
            required:
            - user_id
            title: User ID
          - properties:
              customer:
                $ref: '#/components/schemas/customer_request'
              email:
                description: The email you have defined for the contact who is being
                  added as a participant.
                example: winstonsmith@truth.org
                type: string
            required:
            - email
            title: Email
          type: object
      title: Assign Conversation Request
      type: object
    close_conversation_request:
      description: Payload of the request to close a conversation
      properties:
        admin_id:
          description: The id of the admin who is performing the action.
          example: '12345'
          type: string
        body:
          description: Optionally you can leave a message in the conversation to provide
            additional context to the user and other teammates.
          example: ' This conversation is now closed!'
          type: string
        message_type:
          enum:
          - close
          example: close
          type: string
        type:
          enum:
          - admin
          example: admin
          type: string
      required:
      - message_type
      - type
      - admin_id
      title: Close Conversation Request
      type: object
    collection:
      description: Collections are top level containers for Articles within the Help
        Center.
      properties:
        created_at:
          description: The time when the article was created. For multilingual articles,
            this will be the timestamp of creation of the default language's content.
          example: 1672928359
          format: date-time
          type: integer
        default_locale:
          description: The default locale of the help center. This field is only returned
            for multilingual help centers.
          example: en
          type: string
        description:
          description: The description of the collection. For multilingual help centers,
            this will be the description of the collection for the default language.
          example: Default language description
          nullable: true
          type: string
        icon:
          description: The icon of the collection.
          example: book-bookmark
          nullable: true
          type: string
        id:
          description: The unique identifier for the collection which is given by
            Intercom.
          example: '6871119'
          type: string
        name:
          description: The name of the collection. For multilingual collections, this
            will be the name of the default language's content.
          example: Default language name
          type: string
        order:
          description: The order of the section in relation to others sections within
            a collection. Values go from `0`` upwards. `0`` is the default if there's
            no order.
          example: '1'
          type: integer
        translated_content:
          $ref: '#/components/schemas/group_translated_content'
          nullable: true
        type:
          default: collection
          description: The type of object - `collection`.
          enum:
          - collection
          example: collection
          type: string
        updated_at:
          description: The time when the article was last updated. For multilingual
            articles, this will be the timestamp of last update of the default language's
            content.
          example: 1672928610
          format: date-time
          type: integer
        url:
          description: The URL of the collection. For multilingual help centers, this
            will be the URL of the collection for the default language.
          example: http://intercom.test/help/collection/name
          nullable: true
          type: string
        workspace_id:
          description: The id of the workspace which the collection belongs to.
          example: hfi1bx4l
          type: string
      title: Collection
      type: object
    collection_list:
      description: This will return a list of Collections for the App.
      properties:
        data:
          description: An array of collection objects
          items:
            $ref: '#/components/schemas/collection'
          type: array
        pages:
          $ref: '#/components/schemas/cursor_pages'
        total_count:
          description: A count of the total number of collections.
          example: 1
          type: integer
        type:
          description: The type of the object - `list`.
          enum:
          - list
          example: list
          type: string
      title: Collections
      type: object
    company:
      description: Companies allow you to represent organizations using your product.
        Each company will have its own description and be associated with contacts.
        You can fetch, create, update and list companies.
      properties:
        app_id:
          description: The Intercom defined code of the workspace the company is associated
            to.
          example: ecahpwf5
          type: string
        company_id:
          description: The company id you have defined for the company.
          example: '6'
          type: string
        created_at:
          description: The time the company was added in Intercom.
          example: 1663597223
          type: integer
        custom_attributes:
          additionalProperties:
            type: string
          description: The custom attributes you have set on the company.
          example:
            monthly_spend: 155.5
            paid_subscriber: true
            team_mates: 9
          type: object
        id:
          description: The Intercom defined id representing the company.
          example: 531ee472cce572a6ec000006
          type: string
        industry:
          description: The industry that the company operates in.
          example: Software
          type: string
        last_request_at:
          description: The time the company last recorded making a request.
          example: 1663597223
          type: integer
        monthly_spend:
          description: How much revenue the company generates for your business.
          example: 100
          type: integer
        name:
          description: The name of the company.
          example: Blue Sun
          type: string
        plan:
          properties:
            id:
              description: The id of the plan
              example: '269315'
              type: string
            name:
              description: The name of the plan
              example: Pro
              type: string
            type:
              description: Value is always "plan"
              example: plan
              type: string
          type: object
        remote_created_at:
          description: The time the company was created by you.
          example: 1663597223
          type: integer
        segments:
          description: The list of segments associated with the company
          properties:
            segments:
              items:
                $ref: '#/components/schemas/segment'
              type: array
            type:
              description: The type of the object
              enum:
              - segment.list
              type: string
          type: object
        session_count:
          description: How many sessions the company has recorded.
          example: 100
          type: integer
        size:
          description: The number of employees in the company.
          example: 100
          type: integer
        tags:
          description: The list of tags associated with the company
          properties:
            tags:
              items:
                items:
                  $ref: '#/components/schemas/tag'
              type: array
            type:
              description: The type of the object
              enum:
              - tag.list
              type: string
          type: object
        type:
          description: Value is `company`
          enum:
          - company
          example: company
          type: string
        updated_at:
          description: The last time the company was updated.
          example: 1663597223
          type: integer
        user_count:
          description: The number of users in the company.
          example: 100
          type: integer
        website:
          description: The URL for the company website.
          example: https://www.intercom.com
          type: string
      title: Company
      type: object
    company_attached_contacts:
      description: A list of Contact Objects
      properties:
        data:
          description: An array containing Contact Objects
          items:
            $ref: '#/components/schemas/contact'
          type: array
        pages:
          $ref: '#/components/schemas/cursor_pages'
        total_count:
          description: The total number of contacts
          example: 100
          type: integer
        type:
          description: The type of object - `list`
          enum:
          - list
          example: list
          type: string
      title: Company Attached Contacts
      type: object
    company_attached_segments:
      description: A list of Segment Objects
      properties:
        data:
          description: An array containing Segment Objects
          items:
            $ref: '#/components/schemas/segment'
          type: array
        type:
          description: The type of object - `list`
          enum:
          - list
          example: list
          type: string
      title: Company Attached Segments
      type: object
    company_list:
      description: This will return a list of company for the App.
      properties:
        data:
          description: An array containing Company Objects.
          items:
            $ref: '#/components/schemas/company'
          type: array
        pages:
          $ref: '#/components/schemas/cursor_pages'
        total_count:
          description: The total number of companies.
          example: 100
          type: integer
        type:
          description: The type of object - `list`.
          enum:
          - list
          example: list
          type: string
      title: Companys
      type: object
    company_scroll:
      description: Companies allow you to represent organizations using your product.
        Each company will have its own description and be associated with contacts.
        You can fetch, create, update and list companies.
      nullable: true
      properties:
        data:
          items:
            $ref: '#/components/schemas/company'
          type: array
        pages:
          $ref: '#/components/schemas/cursor_pages'
        scroll_param:
          description: The scroll parameter to use in the next request to fetch the
            next page of results.
          example: 25b649f7-4d33-4ef6-88f5-60e5b8244309
          type: string
        total_count:
          description: The total number of companies
          example: 100
          nullable: true
          type: integer
        type:
          description: The type of object - `list`
          enum:
          - list
          example: list
          type: string
      title: Company Scroll
      type: object
    contact:
      description: Contact are the objects that represent your leads and users in
        Intercom.
      properties:
        android_app_name:
          description: The name of the Android app which the contact is using.
          example: Intercom
          nullable: true
          type: string
        android_app_version:
          description: The version of the Android app which the contact is using.
          example: 5.0.0
          nullable: true
          type: string
        android_device:
          description: The Android device which the contact is using.
          example: Pixel 3
          nullable: true
          type: string
        android_last_seen_at:
          description: (UNIX timestamp) The time when the contact was last seen on
            an Android device.
          example: 1571672154
          format: date-time
          nullable: true
          type: integer
        android_os_version:
          description: The version of the Android OS which the contact is using.
          example: '10'
          nullable: true
          type: string
        android_sdk_version:
          description: The version of the Android SDK which the contact is using.
          example: '28'
          nullable: true
          type: string
        avatar:
          nullable: true
          properties:
            image_url:
              description: An image URL containing the avatar of a contact.
              example: https://example.org/128Wash.jpg
              format: uri
              nullable: true
              type: string
            type:
              description: The type of object
              example: avatar
              type: string
          type: object
        browser:
          description: The name of the browser which the contact is using.
          example: Chrome
          nullable: true
          type: string
        browser_language:
          description: The language set by the browser which the contact is using.
          example: en-US
          nullable: true
          type: string
        browser_version:
          description: The version of the browser which the contact is using.
          example: 80.0.3987.132
          nullable: true
          type: string
        companies:
          $ref: '#/components/schemas/contact_companies'
        created_at:
          description: (UNIX timestamp) The time when the contact was created.
          example: 1571672154
          format: date-time
          type: integer
        custom_attributes:
          description: The custom attributes which are set for the contact.
          type: object
        email:
          description: The contacts email.
          example: joe@example.com
          type: string
        formatted_phone:
          description: The contacts phone number normalized to the E164 format
          example: '+1123456789'
          nullable: true
          type: string
        has_hard_bounced:
          description: Whether the contact has had an email sent to them hard bounce.
          example: true
          type: boolean
        id:
          description: The unique identifier for the contact which is given by Intercom.
          example: 5ba682d23d7cf92bef87bfd4
          type: string
        ios_app_name:
          description: The name of the iOS app which the contact is using.
          example: Intercom
          nullable: true
          type: string
        ios_app_version:
          description: The version of the iOS app which the contact is using.
          example: 5.0.0
          nullable: true
          type: string
        ios_device:
          description: The iOS device which the contact is using.
          example: iPhone 11
          nullable: true
          type: string
        ios_last_seen_at:
          description: (UNIX timestamp) The last time the contact used the iOS app.
          example: 1571672154
          format: date-time
          nullable: true
          type: integer
        ios_os_version:
          description: The version of iOS which the contact is using.
          example: 13.3.1
          nullable: true
          type: string
        ios_sdk_version:
          description: The version of the iOS SDK which the contact is using.
          example: 13.3.1
          nullable: true
          type: string
        language_override:
          description: A preferred language setting for the contact, used by the Intercom
            Messenger even if their browser settings change.
          example: en
          nullable: true
          type: string
        last_contacted_at:
          description: (UNIX timestamp) The time when the contact was last messaged.
          example: 1571672154
          format: date-time
          nullable: true
          type: integer
        last_email_clicked_at:
          description: (UNIX timestamp) The time when the contact last clicked a link
            in an email.
          example: 1571672154
          format: date-time
          nullable: true
          type: integer
        last_email_opened_at:
          description: (UNIX timestamp) The time when the contact last opened an email.
          example: 1571672154
          format: date-time
          nullable: true
          type: integer
        last_replied_at:
          description: (UNIX timestamp) The time when the contact last messaged in.
          example: 1571672154
          format: date-time
          nullable: true
          type: integer
        last_seen_at:
          description: (UNIX timestamp) The time when the contact was last seen (either
            where the Intercom Messenger was installed or when specified manually).
          example: 1571672154
          format: date-time
          nullable: true
          type: integer
        location:
          $ref: '#/components/schemas/contact_location'
        marked_email_as_spam:
          description: Whether the contact has marked an email sent to them as spam.
          example: true
          type: boolean
        name:
          description: The contacts name.
          example: John Doe
          nullable: true
          type: string
        notes:
          $ref: '#/components/schemas/contact_notes'
        os:
          description: The operating system which the contact is using.
          example: Mac OS X
          nullable: true
          type: string
        owner_id:
          description: The id of an admin that has been assigned account ownership
            of the contact.
          example: 123
          nullable: true
          type: integer
        phone:
          description: The contacts phone.
          example: '+1123456789'
          nullable: true
          type: string
        role:
          description: The role of the contact.
          example: user
          type: string
        signed_up_at:
          description: (UNIX timestamp) The time specified for when a contact signed
            up.
          example: 1571672154
          format: date-time
          nullable: true
          type: integer
        social_profiles:
          $ref: '#/components/schemas/contact_social_profiles'
        tags:
          $ref: '#/components/schemas/contact_tags'
        type:
          description: The type of object.
          example: contact
          type: string
        unsubscribed_from_emails:
          description: Whether the contact is unsubscribed from emails.
          example: true
          type: boolean
        updated_at:
          description: (UNIX timestamp) The time when the contact was last updated.
          example: 1571672154
          format: date-time
          type: integer
        workspace_id:
          description: The id of the workspace which the contact belongs to.
          example: ecahpwf5
          type: string
      title: Contact
      type: object
    contact_attached_companies:
      description: A list of Company Objects
      properties:
        companies:
          description: An array containing Company Objects
          items:
            $ref: '#/components/schemas/company'
          type: array
        pages:
          $ref: '#/components/schemas/pages_link'
        total_count:
          description: The total number of companies associated to this contact
          example: 100
          type: integer
        type:
          description: The type of object
          enum:
          - list
          example: list
          type: string
      title: Contact Attached Companies
      type: object
    contact_companies:
      description: An object containing companies meta data about the companies that
        a contact has.
      nullable: false
      properties:
        has_more:
          description: Whether there's more Addressable Objects to be viewed. If true,
            use the url to view all
          example: true
          type: boolean
        total_count:
          description: Int representing the total number of companyies attached to
            this contact
          example: 100
          type: integer
        url:
          description: Url to get more company resources for this contact
          example: /contacts/5ba682d23d7cf92bef87bfd4/companies
          format: uri
          type: string
      title: Contact companies
      type: object
    contact_list:
      description: Contacts are your users in Intercom.
      properties:
        data:
          description: The list of contact objects
          items:
            $ref: '#/components/schemas/contact'
          type: array
        pages:
          $ref: '#/components/schemas/cursor_pages'
        total_count:
          description: A count of the total number of objects.
          example: 100
          type: integer
        type:
          description: Always list
          enum:
          - list
          example: list
          type: string
      title: Contact List
      type: object
    contact_location:
      description: An object containing location meta data about a Intercom contact.
      nullable: false
      properties:
        city:
          description: The city that the contact is located in
          example: Dublin
          nullable: true
          type: string
        country:
          description: The country that the contact is located in
          example: Ireland
          nullable: true
          type: string
        region:
          description: The overal region that the contact is located in
          example: Dublin
          nullable: true
          type: string
        type:
          description: Always location
          example: location
          nullable: true
          type: string
      title: Contact Location
      type: object
    contact_notes:
      description: An object containing notes meta data about the notes that a contact
        has.
      nullable: false
      properties:
        data:
          description: This object represents the notes attached to a contact.
          items:
            $ref: '#/components/schemas/addressable_list'
          type: array
        has_more:
          description: Whether there's more Addressable Objects to be viewed. If true,
            use the url to view all
          example: true
          type: boolean
        total_count:
          description: Int representing the total number of companyies attached to
            this contact
          example: 100
          type: integer
        url:
          description: Url to get more company resources for this contact
          example: /contacts/5ba682d23d7cf92bef87bfd4/notes
          format: uri
          type: string
      title: Contact notes
      type: object
    contact_reply_conversation_request:
      oneOf:
      - description: Payload of the request to reply on behalf of a contact using
          their `intercom_user_id`
        properties:
          attachment_urls:
            description: A list of image URLs that will be added as attachments. You
              can include up to 5 URLs.
            items:
              format: uri
              type: string
            maxItems: 5
            type: array
          body:
            description: The text body of the comment.
            type: string
          intercom_user_id:
            description: The identifier for the contact as given by Intercom.
            type: string
          message_type:
            enum:
            - comment
            type: string
          type:
            enum:
            - user
            type: string
        required:
        - message_type
        - type
        - body
        - intercom_user_id
        title: Intercom User ID
        type: object
      - description: Payload of the request to reply on behalf of a contact using
          their `user_id`
        properties:
          attachment_urls:
            description: A list of image URLs that will be added as attachments. You
              can include up to 5 URLs.
            items:
              format: uri
              type: string
            maxItems: 5
            type: array
          body:
            description: The text body of the comment.
            type: string
          message_type:
            enum:
            - comment
            type: string
          type:
            enum:
            - user
            type: string
          user_id:
            description: The external_id you have defined for the contact.
            type: string
        required:
        - message_type
        - type
        - body
        - user_id
        title: User ID
        type: object
      - description: Payload of the request to reply on behalf of a contact using
          their `email`
        properties:
          attachment_urls:
            description: A list of image URLs that will be added as attachments. You
              can include up to 5 URLs.
            items:
              format: uri
              type: string
            maxItems: 5
            type: array
          body:
            description: The text body of the comment.
            type: string
          email:
            description: The email you have defined for the user.
            type: string
          message_type:
            enum:
            - comment
            type: string
          type:
            enum:
            - user
            type: string
        required:
        - message_type
        - type
        - body
        - email
        title: Email
        type: object
      title: Contact Reply
    contact_segments:
      description: A list of segments objects attached to a specific contact.
      properties:
        data:
          description: Segment objects associated with the contact.
          items:
            $ref: '#/components/schemas/segment'
          type: array
        type:
          description: The type of the object
          enum:
          - list
          example: list
          type: string
      title: Segments
      type: object
    contact_social_profiles:
      description: An object containing social profiles that a contact has.
      nullable: false
      properties:
        data:
          description: A list of social profiles objects associated with the contact.
          items:
            $ref: '#/components/schemas/social_profile'
          type: array
      title: Social Profile
      type: object
    contact_subscription_types:
      description: An object containing Subscription Types meta data about the SubscriptionTypes
        that a contact has.
      nullable: false
      properties:
        data:
          description: This object represents the subscriptions attached to a contact.
          items:
            $ref: '#/components/schemas/addressable_list'
          type: array
        has_more:
          description: Whether there's more Addressable Objects to be viewed. If true,
            use the url to view all
          example: true
          type: boolean
        total_count:
          description: Int representing the total number of subscription types attached
            to this contact
          example: 100
          type: integer
        url:
          description: Url to get more subscription type resources for this contact
          example: /contacts/5ba682d23d7cf92bef87bfd4/subscriptions
          format: uri
          type: string
      title: Contact Subscription Types
      type: object
    contact_tags:
      description: An object containing tags meta data about the tags that a contact
        has.
      nullable: true
      properties:
        data:
          description: This object represents the tags attached to a contact.
          items:
            $ref: '#/components/schemas/addressable_list'
          type: array
        has_more:
          description: Whether there's more Addressable Objects to be viewed. If true,
            use the url to view all
          example: true
          type: boolean
        total_count:
          description: Int representing the total number of tags attached to this
            contact
          example: 100
          type: integer
        url:
          description: url to get more tag resources for this contact
          example: /contacts/5ba682d23d7cf92bef87bfd4/tags
          format: uri
          type: string
      title: Contact Tags
      type: object
    conversation:
      description: Conversations are how you can communicate with users in Intercom.
        They are created when a contact replies to an outbound message, or when one
        admin directly sends a message to a single contact.
      properties:
        admin_assignee_id:
          description: The id of the admin assigned to the conversation. If it's not
            assigned to an admin it will return null.
          example: 0
          nullable: true
          type: integer
        contacts:
          $ref: '#/components/schemas/conversation_contacts'
        conversation_parts:
          $ref: '#/components/schemas/conversation_parts'
        conversation_rating:
          $ref: '#/components/schemas/conversation_rating'
        created_at:
          description: The time the conversation was created.
          example: 1663597223
          format: date-time
          type: integer
        custom_attributes:
          $ref: '#/components/schemas/custom_attributes'
        first_contact_reply:
          $ref: '#/components/schemas/conversation_first_contact_reply'
        id:
          description: The id representing the conversation.
          example: '1295'
          type: string
        open:
          description: Indicates whether a conversation is open (true) or closed (false).
          example: true
          type: boolean
        priority:
          description: If marked as priority, it will return priority or else not_priority.
          enum:
          - priority
          - not_priority
          example: priority
          type: string
        read:
          description: Indicates whether a conversation has been read.
          example: true
          type: boolean
        sla_applied:
          $ref: '#/components/schemas/sla_applied'
        snoozed_until:
          description: If set this is the time in the future when this conversation
            will be marked as open. i.e. it will be in a snoozed state until this
            time. i.e. it will be in a snoozed state until this time.
          example: 1663597260
          format: date-time
          nullable: true
          type: integer
        source:
          $ref: '#/components/schemas/conversation_source'
        state:
          description: Can be set to "open", "closed" or "snoozed".
          enum:
          - open
          - closed
          - snoozed
          example: open
          type: string
        statistics:
          $ref: '#/components/schemas/conversation_statistics'
        tags:
          $ref: '#/components/schemas/tags'
        team_assignee_id:
          description: The id of the team assigned to the conversation. If it's not
            assigned to a team it will return null.
          example: '5017691'
          nullable: true
          type: string
        teammates:
          $ref: '#/components/schemas/conversation_teammates'
        title:
          description: The title given to the conversation.
          example: Conversation Title
          nullable: true
          type: string
        type:
          description: Always conversation.
          example: conversation
          type: string
        updated_at:
          description: The last time the conversation was updated.
          example: 1663597260
          format: date-time
          type: integer
        waiting_since:
          description: The last time a Contact responded to an Admin. In other words,
            the time a customer started waiting for a response. Set to null if last
            reply is from an Admin.
          example: 1663597260
          format: date-time
          nullable: true
          type: integer
      title: Conversation
      type: object
    conversation_contacts:
      description: The list of contacts (users or leads) involved in this conversation.
        This will only contain one customer unless more were added via the group conversation
        feature.
      properties:
        contacts:
          description: The list of contacts (users or leads) involved in this conversation.
            This will only contain one customer unless more were added via the group
            conversation feature.
          items:
            $ref: '#/components/schemas/reference'
          type: array
        type:
          description: ''
          enum:
          - contact.list
          example: contact.list
          type: string
      title: Contacts
      type: object
    conversation_first_contact_reply:
      description: An object containing information on the first users message. For
        a contact initiated message this will represent the users original message.
      nullable: true
      properties:
        created_at:
          description: ''
          example: 1663597223
          format: date-time
          type: integer
        type:
          description: ''
          example: conversation
          type: string
        url:
          description: ''
          example: https://developers.intercom.com/
          nullable: true
          type: string
      title: First contact reply
      type: object
    conversation_list:
      description: Conversations are how you can communicate with users in Intercom.
        They are created when a contact replies to an outbound message, or when one
        admin directly sends a message to a single contact.
      properties:
        conversations:
          description: The list of conversation objects
          items:
            $ref: '#/components/schemas/conversation'
          type: array
        pages:
          $ref: '#/components/schemas/cursor_pages'
        total_count:
          description: A count of the total number of objects.
          example: 12345
          type: integer
        type:
          description: Always conversation.list
          enum:
          - conversation.list
          example: conversation.list
          type: string
      title: Conversation List
      type: object
    conversation_part:
      description: A Conversation Part represents a message in the conversation.
      properties:
        assigned_to:
          $ref: '#/components/schemas/reference'
          description: The id of the admin that was assigned the conversation by this
            conversation_part (null if there has been no change in assignment.)
          nullable: true
        attachments:
          description: A list of attachments for the part.
          items:
            $ref: '#/components/schemas/part_attachment'
          title: Conversation part attachments
          type: array
        author:
          $ref: '#/components/schemas/conversation_part_author'
        body:
          description: The message body, which may contain HTML. For Twitter, this
            will show a generic message regarding why the body is obscured.
          example: <p>Okay!</p>
          nullable: true
          type: string
        created_at:
          description: The time the conversation part was created.
          example: 1663597223
          format: date-time
          type: integer
        external_id:
          description: The external id of the conversation part
          example: abcd1234
          nullable: true
          type: string
        id:
          description: The id representing the conversation part.
          example: '3'
          type: string
        notified_at:
          description: The time the user was notified with the conversation part.
          example: 1663597260
          format: date-time
          type: integer
        part_type:
          description: The type of conversation part.
          example: comment
          type: string
        redacted:
          description: Whether or not the conversation part has been redacted.
          example: false
          type: boolean
        type:
          description: Always conversation_part
          example: conversation_part
          type: string
        updated_at:
          description: The last time the conversation part was updated.
          example: 1663597260
          format: date-time
          type: integer
      title: Conversation Part
      type: object
    conversation_part_author:
      description: The object who initiated the conversation, which can be a Contact,
        Admin or Team. Bots and campaigns send messages on behalf of Admins or Teams.
        For Twitter, this will be blank.
      properties:
        email:
          description: The email of the author
          example: operator+abcd1234@intercom.io
          format: email
          type: string
        id:
          description: The id of the author
          example: '274'
          type: string
        name:
          description: The name of the author
          example: Operator
          type: string
        type:
          description: The type of the author
          example: admin
          type: string
      title: Conversation part author
      type: object
    conversation_parts:
      description: A list of Conversation Part objects for each part message in the
        conversation. This is only returned when Retrieving a Conversation, and ignored
        when Listing all Conversations. There is a limit of 500 parts.
      properties:
        conversation_parts:
          description: A list of Conversation Part objects for each part message in
            the conversation. This is only returned when Retrieving a Conversation,
            and ignored when Listing all Conversations. There is a limit of 500 parts.
          items:
            $ref: '#/components/schemas/conversation_part'
          title: Conversation Parts
          type: array
        total_count:
          description: ''
          example: 2
          type: integer
        type:
          description: ''
          enum:
          - conversation_part.list
          example: conversation_part.list
          type: string
      title: Conversation Parts
      type: object
    conversation_rating:
      description: The Conversation Rating object which contains information on the
        rating and/or remark added by a Contact and the Admin assigned to the conversation.
      nullable: true
      properties:
        contact:
          $ref: '#/components/schemas/reference'
        created_at:
          description: The time the rating was requested in the conversation being
            rated.
          example: 1671028894
          format: date-time
          type: integer
        rating:
          description: The rating, between 1 and 5, for the conversation.
          example: 5
          type: integer
        remark:
          description: An optional field to add a remark to correspond to the number
            rating
          example: ''
          type: string
        teammate:
          $ref: '#/components/schemas/reference'
      title: Conversation Rating
      type: object
    conversation_source:
      description: The Conversation Part that originated this conversation, which
        can be Contact, Admin, Campaign, Automated or Operator initiated.
      properties:
        attachments:
          description: A list of attachments for the part.
          items:
            $ref: '#/components/schemas/part_attachment'
          type: array
        author:
          $ref: '#/components/schemas/conversation_part_author'
        body:
          description: The message body, which may contain HTML. For Twitter, this
            will show a generic message regarding why the body is obscured.
          example: <p>Hey there!</p>
          type: string
        delivered_as:
          description: The conversation's initiation type. Possible values are customer_initiated,
            campaigns_initiated (legacy campaigns), operator_initiated (Custom bot),
            automated (Series and other outbounds with dynamic audience message) and
            admin_initiated (fixed audience message, ticket initiated by an admin,
            group email).
          example: operator_initiated
          type: string
        id:
          description: The id representing the message.
          example: '3'
          type: string
        redacted:
          description: Whether or not the source message has been redacted. Only applicable
            for contact initiated messages.
          example: false
          type: boolean
        subject:
          description: Optional. The message subject. For Twitter, this will show
            a generic message regarding why the subject is obscured.
          example: ''
          type: string
        type:
          description: This includes conversation, push, facebook, twitter and email.
          example: conversation
          type: string
        url:
          description: The URL where the conversation was started. For Twitter, Email,
            and Bots, this will be blank.
          example: null
          nullable: true
          type: string
      title: Conversation source
      type: object
    conversation_statistics:
      description: A Statistics object containing all information required for reporting,
        with timestamps and calculated metrics.
      nullable: true
      properties:
        count_assignments:
          description: Number of assignments after first_contact_reply_at.
          example: 1
          type: integer
        count_conversation_parts:
          description: Total number of conversation parts.
          example: 1
          type: integer
        count_reopens:
          description: Number of reopens after first_contact_reply_at.
          example: 1
          type: integer
        first_admin_reply_at:
          description: Time of first admin reply after first_contact_reply_at.
          example: 1663597233
          format: date-time
          type: integer
        first_assignment_at:
          description: Time of first assignment after first_contact_reply_at.
          example: 1663597233
          format: date-time
          type: integer
        first_close_at:
          description: Time of first close after first_contact_reply_at.
          example: 1663597233
          format: date-time
          type: integer
        first_contact_reply_at:
          description: Time of first text conversation part from a contact.
          example: 1663597233
          format: date-time
          type: integer
        last_admin_reply_at:
          description: Time of the last conversation part from an admin.
          example: 1663597233
          format: date-time
          type: integer
        last_assignment_admin_reply_at:
          description: Time of first admin reply since most recent assignment.
          example: 1663597233
          format: date-time
          type: integer
        last_assignment_at:
          description: Time of last assignment after first_contact_reply_at.
          example: 1663597233
          format: date-time
          type: integer
        last_close_at:
          description: Time of the last conversation close.
          example: 1663597233
          format: date-time
          type: integer
        last_closed_by_id:
          description: The last admin who closed the conversation. Returns a reference
            to an Admin object.
          example: c3po
          type: string
        last_contact_reply_at:
          description: Time of the last conversation part from a contact.
          example: 1663597233
          format: date-time
          type: integer
        median_time_to_reply:
          description: Median based on all admin replies after a contact reply. Subtracts
            out of business hours. In seconds.
          example: 2310
          type: integer
        time_to_admin_reply:
          description: Duration until first admin reply. Subtracts out of business
            hours. In seconds.
          example: 2310
          type: integer
        time_to_assignment:
          description: Duration until last assignment before first admin reply. In
            seconds.
          example: 2310
          type: integer
        time_to_first_close:
          description: Duration until conversation was closed first time. Subtracts
            out of business hours. In seconds.
          example: 2310
          type: integer
        time_to_last_close:
          description: Duration until conversation was closed last time. Subtracts
            out of business hours. In seconds.
          example: 2310
          type: integer
        type:
          description: ''
          example: conversation_statistics
          type: string
      title: Conversation statistics
      type: object
    conversation_teammates:
      description: The list of teammates who participated in the conversation (wrote
        at least one conversation part).
      nullable: true
      properties:
        teammates:
          description: The list of teammates who participated in the conversation
            (wrote at least one conversation part).
          items:
            $ref: '#/components/schemas/reference'
          type: array
        type:
          description: The type of the object - `admin.list`.
          example: admin.list
          type: string
      title: Conversation teammates
      type: object
    convert_visitor_request:
      description: You can merge a Visitor to a Contact of role type lead or user.
      properties:
        type:
          description: Represents the role of the Contact model. Accepts `lead` or
            `user`.
          example: user
          type: string
        user:
          anyOf:
          - required:
            - id
          - required:
            - user_id
          description: The unique identifiers retained after converting or merging.
          properties:
            email:
              description: The contact's email, retained by default if one is present.
              example: winstonsmith@truth.org
              type: string
            id:
              description: The unique identifier for the contact which is given by
                Intercom.
              example: 8a88a590-e1c3-41e2-a502-e0649dbf721c
              type: string
            user_id:
              description: A unique identifier for the contact which is given to Intercom,
                which will be represented as external_id.
              example: 8a88a590-e1c3-41e2-a502-e0649dbf721c
              type: string
          type: object
        visitor:
          anyOf:
          - required:
            - id
          - required:
            - user_id
          - required:
            - email
          description: The unique identifiers to convert a single Visitor.
          properties:
            email:
              description: The visitor's email.
              example: winstonsmith@truth.org
              type: string
            id:
              description: The unique identifier for the contact which is given by
                Intercom.
              example: 8a88a590-e1c3-41e2-a502-e0649dbf721c
              type: string
            user_id:
              description: A unique identifier for the contact which is given to Intercom.
              example: 8a88a590-e1c3-41e2-a502-e0649dbf721c
              type: string
          type: object
      required:
      - type
      - user
      - visitor
      title: Convert Visitor Request Payload
      type: object
    create_article_request:
      description: You can create an Article
      nullable: true
      properties:
        author_id:
          description: The id of the author of the article. For multilingual articles,
            this will be the id of the author of the default language's content. Must
            be a teammate on the help center's workspace.
          example: 1295
          type: integer
        body:
          description: The content of the article. For multilingual articles, this
            will be the body of the default language's content.
          example: <p>This is the body in html</p>
          type: string
        description:
          description: The description of the article. For multilingual articles,
            this will be the description of the default language's content.
          example: Description of the Article
          type: string
        parent_id:
          description: The id of the article's parent collection or section. An article
            without this field stands alone.
          example: 18
          type: integer
        parent_type:
          description: The type of parent, which can either be a `collection` or `section`.
          example: collection
          type: string
        state:
          description: Whether the article will be `published` or will be a `draft`.
            Defaults to draft. For multilingual articles, this will be the state of
            the default language's content.
          enum:
          - published
          - draft
          example: draft
          type: string
        title:
          description: The title of the article.For multilingual articles, this will
            be the title of the default language's content.
          example: Thanks for everything
          type: string
        translated_content:
          $ref: '#/components/schemas/article_translated_content'
      required:
      - title
      - author_id
      title: Create Article Request Payload
      type: object
    create_collection_request:
      description: You can create a collection
      properties:
        description:
          description: The description of the collection. For multilingual collections,
            this will be the description of the default language's content.
          example: English description
          type: string
        name:
          description: The name of the collection. For multilingual collections, this
            will be the name of the default language's content.
          example: collection 51
          type: string
        translated_content:
          $ref: '#/components/schemas/group_translated_content'
          nullable: true
      required:
      - name
      title: Create Collection Request Payload
      type: object
    create_contact_request:
      anyOf:
      - required:
        - email
        title: Create contact with email
      - required:
        - external_id
        title: Create contact with external_id
      - required:
        - role
        title: Create contact with role
      description: Payload to create a contact
      properties:
        avatar:
          description: An image URL containing the avatar of a contact
          example: https://www.example.com/avatar_image.jpg
          nullable: true
          type: string
        custom_attributes:
          description: The custom attributes which are set for the contact
          nullable: true
          type: object
        email:
          description: The contacts email
          example: jdoe@example.com
          type: string
        external_id:
          description: A unique identifier for the contact which is given to Intercom
          type: string
        last_seen_at:
          description: The time when the contact was last seen (either where the Intercom
            Messenger was installed or when specified manually)
          example: 1571672154
          format: date-time
          nullable: true
          type: integer
        name:
          description: The contacts name
          example: John Doe
          nullable: true
          type: string
        owner_id:
          description: The id of an admin that has been assigned account ownership
            of the contact
          example: 123
          nullable: true
          type: integer
        phone:
          description: The contacts phone
          example: '+353871234567'
          nullable: true
          type: string
        role:
          description: The role of the contact.
          type: string
        signed_up_at:
          description: The time specified for when a contact signed up
          example: 1571672154
          format: date-time
          nullable: true
          type: integer
        unsubscribed_from_emails:
          description: Whether the contact is unsubscribed from emails
          example: true
          nullable: true
          type: boolean
      title: Create Contact Request Payload
      type: object
    create_conversation_request:
      description: Conversations are how you can communicate with users in Intercom.
        They are created when a contact replies to an outbound message, or when one
        admin directly sends a message to a single contact.
      properties:
        body:
          description: The content of the message. HTML is not supported.
          example: Hello
          type: string
        from:
          properties:
            id:
              description: The identifier for the contact which is given by Intercom.
              example: 536e564f316c83104c000020
              format: uuid
              maxLength: 24
              minLength: 24
              type: string
            type:
              description: The role associated to the contact - user or lead.
              enum:
              - lead
              - user
              - contact
              example: user
              type: string
          required:
          - type
          - id
          type: object
      required:
      - from
      - body
      title: Create Conversation Request Payload
      type: object
    create_data_attribute_request:
      description: ''
      properties:
        data_type:
          description: The type of data stored for this attribute.
          enum:
          - string
          - integer
          - float
          - boolean
          - datetime
          - date
          example: string
          type: string
        description:
          description: The readable description you see in the UI for the attribute.
          example: My Data Attribute Description
          type: string
        model:
          description: The model that the data attribute belongs to.
          enum:
          - contact
          - company
          - conversation
          example: contact
          type: string
        name:
          description: The name of the data attribute.
          example: My Data Attribute
          type: string
        options:
          description: To create list attributes. Provide a set of hashes with `value`
            as the key of the options you want to make. `data_type` must be `string`.
          example:
          - option1
          - option2
          items:
            type: string
          type: array
      required:
      - name
      - model
      - data_type
      title: Create Data Attribute Request
      type: object
    create_data_event_request:
      anyOf:
      - required:
        - event_name
        - created_at
        - id
        title: id required
      - required:
        - event_name
        - created_at
        - user_id
        title: user_id required
      - required:
        - event_name
        - created_at
        - email
        title: email required
      description: ''
      properties:
        created_at:
          description: The time the event occurred as a UTC Unix timestamp
          example: 1671028894
          format: date-time
          type: integer
        email:
          description: An email address for your user. An email should only be used
            where your application uses email to uniquely identify users.
          example: frodo.baggins@example.com
          type: string
        event_name:
          description: The name of the event that occurred. This is presented to your
            App's admins when filtering and creating segments - a good event name
            is typically a past tense 'verb-noun' combination, to improve readability,
            for example `updated-plan`.
          example: invited-friend
          type: string
        id:
          description: Your identifier for a lead or a user.
          example: 8a88a590-e1c3-41e2-a502-e0649dbf721c
          type: string
        metadata:
          additionalProperties:
            type: string
          description: Optional metadata about the event.
          example:
            invite_code: ADDAFRIEND
          type: object
        user_id:
          description: Your identifier for the user.
          example: '314159'
          type: string
      title: Create Data Event Request
      type: object
    create_data_event_summaries_request:
      description: You can send a list of event summaries for a user. Each event summary
        should contain the event name, the time the event occurred, and the number
        of times the event occurred. The event name should be a past tense "verb-noun"
        combination, to improve readability, for example `updated-plan`.
      properties:
        event_summaries:
          description: A list of event summaries for the user. Each event summary
            should contain the event name, the time the event occurred, and the number
            of times the event occurred. The event name should be a past tense 'verb-noun'
            combination, to improve readability, for example `updated-plan`.
          properties:
            count:
              description: The number of times the event occurred.
              example: 1
              type: integer
            event_name:
              description: The name of the event that occurred. A good event name
                is typically a past tense 'verb-noun' combination, to improve readability,
                for example `updated-plan`.
              example: invited-friend
              type: string
            first:
              description: The first time the event was sent
              example: 1671028894
              format: date-time
              type: integer
            last:
              description: The last time the event was sent
              example: 1671028894
              format: date-time
              type: integer
          type: object
        user_id:
          description: Your identifier for the user.
          example: '314159'
          type: string
      title: Create Data Event Summaries Request
      type: object
    create_data_exports_request:
      description: Request for creating a data export
      properties:
        created_at_after:
          description: The start date that you request data for. It must be formatted
            as a unix timestamp.
          example: 1527811200
          type: integer
        created_at_before:
          description: The end date that you request data for. It must be formatted
            as a unix timestamp.
          example: 1527811200
          type: integer
      required:
      - created_at_after
      - created_at_before
      title: Create Data Export Request
      type: object
    create_message_request:
      anyOf:
      - required:
        - message_type
        - subject
        - body
        - template
        - from
        - to
        title: 'message_type: `email`.'
      - required:
        - message_type
        - body
        - from
        - to
        title: 'message_type: `inapp`.'
      description: You can create a message
      nullable: true
      properties:
        body:
          description: The content of the message. HTML and plaintext are supported.
          example: Hello there
          type: string
        create_conversation_without_contact_reply:
          default: false
          description: Whether a conversation should be opened in the inbox for the
            message without the contact replying. Defaults to false if not provided.
          example: true
          type: boolean
        from:
          description: The sender of the message. If not provided, the default sender
            will be used.
          properties:
            id:
              description: The identifier for the admin which is given by Intercom.
              example: 394051
              type: integer
            type:
              description: Always `admin`.
              enum:
              - admin
              example: admin
              type: string
          required:
          - type
          - id
          type: object
        message_type:
          description: 'The kind of message being created. Values: `in_app` or `email`.'
          enum:
          - in_app
          - email
          example: in_app
          type: string
        subject:
          description: The title of the email.
          example: Thanks for everything
          type: string
        template:
          description: The style of the outgoing message. Possible values `plain`
            or `personal`.
          example: plain
          type: string
        to:
          description: The sender of the message. If not provided, the default sender
            will be used.
          properties:
            id:
              description: The identifier for the contact which is given by Intercom.
              example: 536e564f316c83104c000020
              type: string
            type:
              description: The role associated to the contact - `user` or `lead`.
              enum:
              - user
              - lead
              example: user
              type: string
          required:
          - type
          - id
          type: object
      title: Create Message Request Payload
      type: object
    create_or_update_company_request:
      description: You can create or update a Company
      nullable: true
      properties:
        company_id:
          description: The company id you have defined for the company. Can't be updated
          example: 625e90fc55ab113b6d92175f
          type: string
        custom_attributes:
          additionalProperties:
            type: string
          description: A hash of key/value pairs containing any other data about the
            company you want Intercom to store.
          example:
            monthly_spend: 155.5
            paid_subscriber: true
            team_mates: 9
          type: object
        industry:
          description: The industry that this company operates in.
          example: Manufacturing
          type: string
        monthly_spend:
          description: How much revenue the company generates for your business. Note
            that this will truncate floats. i.e. it only allow for whole integers,
            155.98 will be truncated to 155. Note that this has an upper limit of
            2**31-1 or 2147483647..
          example: 1000
          type: integer
        name:
          description: The name of the Company
          example: Intercom
          type: string
        plan:
          description: The name of the plan you have associated with the company.
          example: Enterprise
          type: string
        remote_created_at:
          description: The time the company was created by you.
          example: 1394531169
          type: integer
        size:
          description: The number of employees in this company.
          example: '100'
          type: integer
        website:
          description: The URL for this company's website. Please note that the value
            specified here is not validated. Accepts any string.
          example: https://www.example.com
          type: string
      title: Create Or Update Company Request Payload
      type: object
    create_or_update_tag_request:
      description: You can create or update an existing tag.
      properties:
        id:
          description: The id of tag to updates.
          example: '656452352'
          type: string
        name:
          description: The name of the tag, which will be created if not found, or
            the new name for the tag if this is an update request. Names are case
            insensitive.
          example: Independent
          type: string
      required:
      - name
      title: Create or Update Tag Request Payload
      type: object
    create_phone_switch_request:
      description: You can create an phone switch
      nullable: true
      properties:
        custom_attributes:
          $ref: '#/components/schemas/custom_attributes'
        phone:
          description: Phone number in E.164 format, that will receive the SMS to
            continue the conversation in the Messenger.
          example: +1 1234567890
          type: string
      required:
      - phone
      title: Create Phone Switch Request Payload
      type: object
    create_section_request:
      description: You can create a Section
      properties:
        name:
          description: The name of the collection. For multilingual collections, this
            will be the name of the default language's content.
          example: Section 51
          type: string
        parent_id:
          description: The id for the collection this section will be within.
          example: 18
          type: integer
        translated_content:
          $ref: '#/components/schemas/group_translated_content'
          nullable: true
      required:
      - name
      - parent_id
      title: Create Section Request Payload
      type: object
    create_ticket_reply_request:
      description: You can create a reply on a ticket.
      properties:
        admin_id:
          description: The id of the admin who is making the note.
          example: '1234'
          type: string
        body:
          description: The message body of the note, which may contain HTML.
          example: <p>Okay!</p>
          type: string
        message_type:
          default: note
          description: The type of the reply. Only `note` is supported at the moment.
          example: note
          type: string
      required:
      - admin_id
      title: Create Ticket Reply Request Payload
      type: object
    create_ticket_request:
      description: You can create a Ticket
      properties:
        contacts:
          description: The list of contacts (users or leads) affected by this ticket.
            Currently only one is allowed
          example:
          - id: '1234'
          items:
            oneOf:
            - properties:
                id:
                  description: The identifier for the contact as given by Intercom.
                  type: string
              required:
              - id
              title: ID
            - properties:
                external_id:
                  description: The external_id you have defined for the contact who
                    is being added as a participant.
                  type: string
              required:
              - external_id
              title: External ID
            - properties:
                email:
                  description: The email you have defined for the contact who is being
                    added as a participant. If a contact with this email does not
                    exist, one will be created.
                  type: string
              required:
              - email
              title: Email
            type: object
          type: array
        ticket_attributes:
          $ref: '#/components/schemas/ticket_request_custom_attributes'
        ticket_type_id:
          description: The ID of the type of ticket you want to create
          example: '1234'
          type: string
      required:
      - ticket_type_id
      - contacts
      title: Create Ticket Request Payload
      type: object
    create_ticket_type_attribute_request:
      description: You can create a Ticket Type Attribute
      properties:
        allow_multiple_values:
          description: Whether the attribute allows multiple files to be attached
            to it (only applicable to file attributes)
          example: false
          type: boolean
        data_type:
          description: The data type of the attribute
          enum:
          - string
          - list
          - integer
          - decimal
          - boolean
          - datetime
          - files
          example: string
          type: string
        description:
          description: The description of the attribute presented to the teammate
            or contact
          example: Priority level of the bug
          type: string
        list_items:
          description: A comma delimited list of items for the attribute value (only
            applicable to list attributes)
          example: Low Priority,Medium Priority,High Priority
          type: string
        multiline:
          description: Whether the attribute allows multiple lines of text (only applicable
            to string attributes)
          example: false
          type: boolean
        name:
          description: The name of the ticket type attribute
          example: Bug Priority
          type: string
        required_to_create:
          default: false
          description: Whether the attribute is required to be filled in when teammates
            are creating the ticket in Inbox.
          example: false
          type: boolean
        required_to_create_for_contacts:
          default: false
          description: Whether the attribute is required to be filled in when contacts
            are creating the ticket in Messenger.
          example: false
          type: boolean
        visible_on_create:
          default: true
          description: Whether the attribute is visible to teammates when creating
            a ticket in Inbox.
          example: true
          type: boolean
        visible_to_contacts:
          default: true
          description: Whether the attribute is visible to contacts when creating
            a ticket in Messenger.
          example: true
          type: boolean
      required:
      - name
      - description
      - data_type
      title: Create Ticket Type Attribute Request Payload
      type: object
    create_ticket_type_request:
      description: "The request payload for creating a ticket type.\n  You can copy\
        \ the `icon` property for your ticket type from [Twemoji Cheatsheet](https://twemoji-cheatsheet.vercel.app/)\n"
      nullable: true
      properties:
        description:
          description: The description of the ticket type.
          example: Used for tracking bugs
          type: string
        icon:
          default: "\U0001F39F\uFE0F"
          description: The icon of the ticket type.
          example: "\U0001F41E"
          type: string
        is_internal:
          default: false
          description: Whether the tickets associated with this ticket type are intended
            for internal use only or will be shared with customers. This is currently
            a limited attribute.
          example: false
          type: boolean
        name:
          description: The name of the ticket type.
          example: Bug
          type: string
      required:
      - name
      title: Create Ticket Type Request Payload
      type: object
    cursor_pages:
      description: 'Cursor-based pagination is a technique used in the Intercom API
        to navigate through large amounts of data.

        A "cursor" or pointer is used to keep track of the current position in the
        result set, allowing the API to return the data in small chunks or "pages"
        as needed.

        '
      nullable: true
      properties:
        next:
          $ref: '#/components/schemas/starting_after_paging'
        page:
          description: The current page
          example: 1
          type: integer
        per_page:
          description: Number of results per page
          example: 2
          type: integer
        total_pages:
          description: Total number of pages
          example: 13
          type: integer
        type:
          description: the type of object `pages`.
          enum:
          - pages
          example: pages
          type: string
      title: Cursor based pages
      type: object
    custom_attributes:
      additionalProperties:
        anyOf:
        - type: string
        - $ref: '#/components/schemas/custom_object_instance'
      description: An object containing the different custom attributes associated
        to the conversation as key-value pairs. For relationship attributes the value
        will be a list of custom object instance models.
      title: Custom Attributes
      type: object
    custom_object_instance:
      description: An instance of a Custom Object Type.
      nullable: true
      properties:
        custom_attributes:
          additionalProperties:
            type: string
          description: The custom attributes you have set on the custom object instance.
          type: object
        external_id:
          description: The id you have defined for the custom object instance.
          example: 0001d1c1e65a7a19e9f59ae2
          type: string
        id:
          description: The Intercom defined id representing the custom object instance.
          example: 5a7a19e9f59ae20001d1c1e6
          type: string
        type:
          description: The identifier of the custom object type that defines the structure
            of the custom object instance.
          example: Order
          type: string
      title: Custom Object Instance
      type: object
    customer_request:
      nullable: true
      oneOf:
      - properties:
          intercom_user_id:
            description: The identifier for the contact as given by Intercom.
            example: 6329bd9ffe4e2e91dac76188
            type: string
        required:
        - intercom_user_id
        title: Intercom User ID
      - properties:
          user_id:
            description: The external_id you have defined for the contact who is being
              added as a participant.
            example: 2e91dac761886329bd9ffe4e
            type: string
        required:
        - user_id
        title: User ID
      - properties:
          email:
            description: The email you have defined for the contact who is being added
              as a participant.
            example: sam.sung@example.com
            type: string
        required:
        - email
        title: Email
      type: object
    data_attribute:
      description: Data Attributes are metadata used to describe your contact, company
        and conversation models. These include standard and custom attributes. By
        using the data attributes endpoint, you can get the global list of attributes
        for your workspace, as well as create and archive custom attributes.
      properties:
        admin_id:
          description: Teammate who created the attribute. Only applicable to CDAs
          example: '5712945'
          type: string
        api_writable:
          description: Can this attribute be updated through API
          example: true
          type: boolean
        archived:
          description: Is this attribute archived. (Only applicable to CDAs)
          example: false
          type: boolean
        created_at:
          description: The time the attribute was created as a UTC Unix timestamp
          example: 1671028894
          format: date-time
          type: integer
        custom:
          description: Set to true if this is a CDA
          example: true
          type: boolean
        data_type:
          description: The data type of the attribute.
          enum:
          - string
          - integer
          - float
          - boolean
          - date
          example: boolean
          type: string
        description:
          description: Readable description of the attribute.
          example: Whether the user is a paid subscriber.
          type: string
        full_name:
          description: Full name of the attribute. Should match the name unless it's
            a nested attribute. We can split full_name on `.` to access nested user
            object values.
          example: custom_attributes.paid_subscriber
          type: string
        id:
          description: The unique identifier for the data attribute which is given
            by Intercom. Only available for custom attributes.
          example: 12878
          type: integer
        label:
          description: Readable name of the attribute (i.e. name you see in the UI)
          example: Paid Subscriber
          type: string
        model:
          description: Value is `contact` for user/lead attributes, `company` for
            company attributes and `conversation` for conversation attributes..
          enum:
          - contact
          - company
          - conversation
          example: contact
          type: string
        name:
          description: Name of the attribute.
          example: paid_subscriber
          type: string
        options:
          description: List of predefined options for attribute value.
          example:
          - 'true'
          - 'false'
          items:
            type: string
          type: array
        type:
          description: Value is `data_attribute`.
          enum:
          - data_attribute
          example: data_attribute
          type: string
        ui_writable:
          description: Can this attribute be updated in the UI
          example: true
          type: boolean
        updated_at:
          description: The time the attribute was last updated as a UTC Unix timestamp
          example: 1671028894
          format: date-time
          type: integer
      title: Data Attribute
      type: object
    data_attribute_list:
      description: A list of all data attributes belonging to a workspace for contacts,
        companies or conversations.
      properties:
        data:
          description: A list of data attributes
          items:
            $ref: '#/components/schemas/data_attribute'
          type: array
        type:
          description: The type of the object
          enum:
          - list
          example: list
          type: string
      title: Data Attribute List
      type: object
    data_event:
      description: Data events are used to notify Intercom of changes to your data.
      properties:
        created_at:
          description: The time the event occurred as a UTC Unix timestamp
          example: 1671028894
          format: date-time
          type: integer
        email:
          description: An email address for your user. An email should only be used
            where your application uses email to uniquely identify users.
          example: frodo.baggins@example.com
          type: string
        event_name:
          description: The name of the event that occurred. This is presented to your
            App's admins when filtering and creating segments - a good event name
            is typically a past tense 'verb-noun' combination, to improve readability,
            for example `updated-plan`.
          example: invited-friend
          type: string
        id:
          description: Your identifier for a lead or a user.
          example: 8a88a590-e1c3-41e2-a502-e0649dbf721c
          type: string
        intercom_user_id:
          description: The Intercom identifier for the user.
          example: 63a0979a5eeebeaf28dd56ba
          type: string
        metadata:
          additionalProperties:
            type: string
          description: Optional metadata about the event.
          example:
            invite_code: ADDAFRIEND
          type: object
        type:
          description: The type of the object
          enum:
          - event
          example: event
          type: string
        user_id:
          description: Your identifier for the user.
          example: '314159'
          type: string
      required:
      - event_name
      - created_at
      title: Data Event
      type: object
    data_event_list:
      description: This will return a list of data events for the App.
      properties:
        events:
          description: A list of data events
          items:
            $ref: '#/components/schemas/data_event'
          type: array
        pages:
          description: Pagination
          properties:
            next:
              example: https://api.intercom.io/events?per_page=2&before=1389913941064&intercom_user_id=63a0979a5eeebeaf28dd56ba&type=user"
              type: string
            since:
              example: https://api.intercom.io/events?intercom_user_id=63a0979a5eeebeaf28dd56ba&type=user&since=1389913941065
              type: string
          type: object
        type:
          description: The type of the object
          enum:
          - event.list
          example: event.list
          type: string
      title: Data Event List
      type: object
    data_event_summary:
      description: This will return a summary of data events for the App.
      properties:
        email:
          description: The email address of the user
          example: Sam.Sung@example.com
          type: string
        events:
          description: A summary of data events
          items:
            $ref: '#/components/schemas/data_event_summary_item'
          type: array
        intercom_user_id:
          description: The Intercom user ID of the user
          example: 63a0979a5eeebeaf28dd56ba
          type: string
        type:
          description: The type of the object
          enum:
          - event.summary
          example: event.summary
          type: string
        user_id:
          description: The user ID of the user
          example: 62b997f288e14803c5006932
          type: string
      title: Data Event Summary
      type: object
    data_event_summary_item:
      description: This will return a summary of a data event for the App.
      nullable: true
      properties:
        count:
          description: The number of times the event was sent
          example: 1
          type: integer
        description:
          description: The description of the event
          example: A user placed an order
          type: string
        first:
          description: The first time the event was sent
          example: '2014-01-16T23:12:21.000+00:00'
          type: string
        last:
          description: The last time the event was sent
          example: '2014-01-16T23:12:21.000+00:00 '
          type: string
        name:
          description: The name of the event
          example: placed-order
          type: string
      title: Data Event Summary Item
      type: object
    data_export:
      description: The data export api is used to view all message sent & viewed in
        a given timeframe.
      properties:
        download_expires_at:
          description: The time after which you will not be able to access the data.
          example: '1674917488'
          type: string
        download_url:
          description: The location where you can download your data.
          example: https://api.intercom.test/download/messages/data/example
          type: string
        job_identfier:
          description: The identifier for your job.
          example: orzzsbd7hk67xyu
          type: string
        status:
          description: The current state of your job.
          enum:
          - pending
          - in_progress
          - failed
          - completed
          - no_data
          - canceled
          example: pending
          type: string
      title: Data Export
      type: object
    data_export_csv:
      description: A CSV output file
      properties:
        company_id:
          description: The company ID of the user in relation to the message that
            was sent. Will return -1 if no company is present.
          type: string
        content_id:
          description: The specific content that was received. In an A/B test each
            version has its own Content ID.
          type: string
        content_title:
          description: The title of the content you see in your Intercom workspace.
          type: string
        content_type:
          description: Email, Chat, Post etc.
          type: string
        email:
          description: The users email who was sent the message.
          type: string
        first_click:
          description: The first time the series the user clicked on a link within
            this message.
          type: integer
        first_completion:
          description: The first time a user completed this message if the content
            was able to be completed e.g. Tours, Surveys.
          type: integer
        first_dismisall:
          description: The first time the series the user dismissed this message.
          type: integer
        first_goal_success:
          description: The first time the user met this messages associated goal if
            one exists.
          type: integer
        first_hard_bounce:
          description: The first time this message hard bounced for this user
          type: integer
        first_open:
          description: The first time the user opened this message.
          type: integer
        first_reply:
          description: The first time a user replied to this message if the content
            was able to receive replies.
          type: integer
        first_series_completion:
          description: The first time the series this message was a part of was completed
            by the user.
          type: integer
        first_series_disengagement:
          description: The first time the series this message was a part of was disengaged
            by the user.
          type: integer
        first_series_exit:
          description: The first time the series this message was a part of was exited
            by the user.
          type: integer
        first_unsubscribe:
          description: The first time the user unsubscribed from this message.
          type: integer
        name:
          description: The full name of the user receiving the message
          type: string
        node_id:
          description: The id of the series node that this ruleset is associated with.
            Each block in a series has a corresponding node_id.
          type: string
        receipt_id:
          description: ID for this receipt. Will be included with any related stats
            in other files to identify this specific delivery of a message.
          type: string
        received_at:
          description: Timestamp for when the receipt was recorded.
          type: integer
        ruleset_id:
          description: The id of the message.
          type: string
        ruleset_version_id:
          description: As you edit content we record new versions. This ID can help
            you determine which version of a piece of content that was received.
          type: string
        series_id:
          description: The id of the series that this content is part of. Will return
            -1 if not part of a series.
          type: string
        series_title:
          description: The title of the series that this content is part of.
          type: string
        user_external_id:
          description: The external_user_id of the user who was sent the message
          type: string
        user_id:
          description: The user_id of the user who was sent the message.
          type: string
      title: Data Export CSV
      type: object
    deleted_article_object:
      description: Response returned when an object is deleted
      properties:
        deleted:
          description: Whether the article was deleted successfully or not.
          example: true
          type: boolean
        id:
          description: The unique identifier for the article which you provided in
            the URL.
          example: '6890762'
          type: string
        object:
          description: The type of object which was deleted. - article
          enum:
          - article
          example: article
          type: string
      title: Deleted Article Object
      type: object
    deleted_collection_object:
      description: Response returned when an object is deleted
      properties:
        deleted:
          description: Whether the collection was deleted successfully or not.
          example: true
          type: boolean
        id:
          description: The unique identifier for the collection which you provided
            in the URL.
          example: '6890762'
          type: string
        object:
          description: The type of object which was deleted. - `collection`
          enum:
          - collection
          example: collection
          type: string
      title: Deleted Collection Object
      type: object
    deleted_company_object:
      description: Response returned when an object is deleted
      properties:
        deleted:
          description: Whether the company was deleted successfully or not.
          example: true
          type: boolean
        id:
          description: The unique identifier for the company which is given by Intercom.
          example: 5b7e8b2f-7a1a-4e6c-8e1b-4f9d4f4c4d4f
          type: string
        object:
          description: The type of object which was deleted. - `company`
          enum:
          - company
          example: company
          type: string
      title: Deleted Company Object
      type: object
    deleted_object:
      description: Response returned when an object is deleted
      properties:
        deleted:
          description: Whether the news item was deleted successfully or not.
          example: true
          type: boolean
        id:
          description: The unique identifier for the news item which you provided
            in the URL.
          example: '6890762'
          type: string
        object:
          description: The type of object which was deleted - news-item.
          enum:
          - news-item
          example: news-item
          type: string
      title: Deleted Object
      type: object
    deleted_section_object:
      description: Response returned when an object is deleted
      properties:
        deleted:
          description: Whether the section was deleted successfully or not.
          example: true
          type: boolean
        id:
          description: The unique identifier for the section which you provided in
            the URL.
          example: '6890762'
          type: string
        object:
          description: The type of object which was deleted. - `section`
          enum:
          - section
          example: section
          type: string
      title: Deleted Section Object
      type: object
    detach_contact_from_conversation_request:
      properties:
        admin_id:
          description: The `id` of the admin who is performing the action.
          example: '5017690'
          type: string
      required:
      - admin_id
    error:
      description: The API will return an Error List for a failed request, which will
        contain one or more Error objects.
      properties:
        errors:
          description: An array of one or more error objects
          items:
            properties:
              code:
                description: A string indicating the kind of error, used to further
                  qualify the HTTP response code
                example: unauthorized
                type: string
              field:
                description: Optional. Used to identify a particular field or query
                  parameter that was in error.
                example: email
                nullable: true
                type: string
              message:
                description: Optional. Human readable description of the error.
                example: Access Token Invalid
                nullable: true
                type: string
            required:
            - code
          type: array
        request_id:
          description: ''
          example: f93ecfa8-d08a-4325-8694-89aeb89c8f85
          format: uuid
          nullable: true
          type: string
        type:
          description: The type is error.list
          example: error.list
          type: string
      required:
      - type
      - errors
      title: Error
      type: object
    file_attribute:
      description: The value describing a file upload set for a custom attribute
      properties:
        content_type:
          description: The type of file
          example: image/png
          type: string
        filesize:
          description: The size of the file in bytes
          example: 11308309
          type: integer
        height:
          description: The height of the file in pixels, if applicable
          example: 1964
          type: integer
        name:
          description: The name of the file
          example: Screenshot.png
          type: string
        type:
          example: upload
          type: string
        url:
          description: The url of the file. This is a temporary URL and will expire
            after 30 minutes.
          example: https://intercom-attachments-1.com/.../Screenshot.png
          type: string
        width:
          description: The width of the file in pixels, if applicable
          example: 3024
          type: integer
      title: File
      type: object
    group_content:
      description: The Content of a Group.
      nullable: true
      properties:
        description:
          description: The description of the collection. Only available for collections.
          example: ' Collection description'
          type: string
        name:
          description: The name of the collection or section.
          example: Collection name
          type: string
        type:
          description: The type of object - `group_content` .
          enum:
          - null
          - group_content
          example: group_content
          type: string
      title: Group Content
      type: object
    group_translated_content:
      description: The Translated Content of an Group. The keys are the locale codes
        and the values are the translated content of the Group.
      nullable: true
      properties:
        ar:
          $ref: '#/components/schemas/group_content'
          description: The content of the group in Arabic
        bg:
          $ref: '#/components/schemas/group_content'
          description: The content of the group in Bulgarian
        bs:
          $ref: '#/components/schemas/group_content'
          description: The content of the group in Bosnian
        ca:
          $ref: '#/components/schemas/group_content'
          description: The content of the group in Catalan
        cs:
          $ref: '#/components/schemas/group_content'
          description: The content of the group in Czech
        da:
          $ref: '#/components/schemas/group_content'
          description: The content of the group in Danish
        de:
          $ref: '#/components/schemas/group_content'
          description: The content of the group in German
        el:
          $ref: '#/components/schemas/group_content'
          description: The content of the group in Greek
        en:
          $ref: '#/components/schemas/group_content'
          description: The content of the group in English
        es:
          $ref: '#/components/schemas/group_content'
          description: The content of the group in Spanish
        et:
          $ref: '#/components/schemas/group_content'
          description: The content of the group in Estonian
        fi:
          $ref: '#/components/schemas/group_content'
          description: The content of the group in Finnish
        fr:
          $ref: '#/components/schemas/group_content'
          description: The content of the group in French
        he:
          $ref: '#/components/schemas/group_content'
          description: The content of the group in Hebrew
        hr:
          $ref: '#/components/schemas/group_content'
          description: The content of the group in Croatian
        hu:
          $ref: '#/components/schemas/group_content'
          description: The content of the group in Hungarian
        id:
          $ref: '#/components/schemas/group_content'
          description: The content of the group in Indonesian
        it:
          $ref: '#/components/schemas/group_content'
          description: The content of the group in Italian
        ja:
          $ref: '#/components/schemas/group_content'
          description: The content of the group in Japanese
        ko:
          $ref: '#/components/schemas/group_content'
          description: The content of the group in Korean
        lt:
          $ref: '#/components/schemas/group_content'
          description: The content of the group in Lithuanian
        lv:
          $ref: '#/components/schemas/group_content'
          description: The content of the group in Latvian
        mn:
          $ref: '#/components/schemas/group_content'
          description: The content of the group in Mongolian
        nb:
          $ref: '#/components/schemas/group_content'
          description: The content of the group in Norwegian
        nl:
          $ref: '#/components/schemas/group_content'
          description: The content of the group in Dutch
        pl:
          $ref: '#/components/schemas/group_content'
          description: The content of the group in Polish
        pt:
          $ref: '#/components/schemas/group_content'
          description: The content of the group in Portuguese (Portugal)
        pt-BR:
          $ref: '#/components/schemas/group_content'
          description: The content of the group in Portuguese (Brazil)
        ro:
          $ref: '#/components/schemas/group_content'
          description: The content of the group in Romanian
        ru:
          $ref: '#/components/schemas/group_content'
          description: The content of the group in Russian
        sl:
          $ref: '#/components/schemas/group_content'
          description: The content of the group in Slovenian
        sr:
          $ref: '#/components/schemas/group_content'
          description: The content of the group in Serbian
        sv:
          $ref: '#/components/schemas/group_content'
          description: The content of the group in Swedish
        tr:
          $ref: '#/components/schemas/group_content'
          description: The content of the group in Turkish
        type:
          description: The type of object - group_translated_content.
          enum:
          - null
          - group_translated_content
          example: group_translated_content
          nullable: true
          type: string
        vi:
          $ref: '#/components/schemas/group_content'
          description: The content of the group in Vietnamese
        zh-CN:
          $ref: '#/components/schemas/group_content'
          description: The content of the group in Chinese (China)
        zh-TW:
          $ref: '#/components/schemas/group_content'
          description: The content of the group in Chinese (Taiwan)
      title: Group Translated Content
      type: object
    intercom_version:
      default: '2.9'
      description: Intercom API version.</br>By default, it's equal to the version
        set in the app package.
      enum:
      - '1.0'
      - '1.1'
      - '1.2'
      - '1.3'
      - '1.4'
      - '2.0'
      - '2.1'
      - '2.2'
      - '2.3'
      - '2.4'
      - '2.5'
      - '2.6'
      - '2.7'
      - '2.8'
      - '2.9'
      - Unstable
      example: Unstable
      type: string
    merge_contacts_request:
      description: Merge contact data.
      properties:
        from:
          description: The unique identifier for the contact to merge away from. Must
            be a lead.
          example: 5d70dd30de4efd54f42fd526
          type: string
        into:
          description: The unique identifier for the contact to merge into. Must be
            a user.
          example: 5ba682d23d7cf92bef87bfd4
          type: string
      title: Merge contact data
      type: object
    message:
      description: Message are how you reach out to contacts in Intercom. They are
        created when an admin sends an outbound message to a contact.
      properties:
        body:
          description: The message body, which may contain HTML.
          example: Hello
          type: string
        conversation_id:
          description: The associated conversation_id
          example: '64619700005570'
          type: string
        created_at:
          description: The time the conversation was created.
          example: 1667560812
          format: date-time
          type: integer
        id:
          description: The id representing the message.
          example: '1488971108'
          type: string
        message_type:
          description: The type of message that was sent. Can be email, inapp, facebook
            or twitter.
          enum:
          - email
          - inapp
          - facebook
          - twitter
          example: inapp
          type: string
        subject:
          description: 'The subject of the message. Only present if message_type:
            email.'
          example: Greetings
          type: string
        type:
          description: The type of the message
          example: user_message
          type: string
      required:
      - type
      - id
      - created_at
      - body
      - message_type
      title: Message
      type: object
    multiple_filter_search_request:
      properties:
        operator:
          description: An operator to allow boolean inspection between multiple fields.
          enum:
          - AND
          - OR
          example: AND
          type: string
        value:
          oneOf:
          - description: Add mutiple filters.
            items:
              $ref: '#/components/schemas/multiple_filter_search_request'
            title: multiple filter search request
            type: array
          - description: Add a single filter field.
            items:
              $ref: '#/components/schemas/single_filter_search_request'
            title: single filter search request
            type: array
      type: object
    news_item:
      description: A News Item is a content type in Intercom enabling you to announce
        product updates, company news, promotions, events and more with your customers.
      properties:
        body:
          description: The news item body, which may contain HTML.
          example: We are excited to announce the launch of News Items, a new content
            type in Intercom enabling you to announce product updates, company news,
            promotions, events and more with your customers.
          type: string
        cover_image_url:
          description: URL of the image used as cover. Must have .jpg or .png extension.
          example: https://example.com/cover.jpg
          format: uri
          nullable: true
          type: string
        created_at:
          description: Timestamp for when the news item was created.
          example: 1610589632
          format: timestamp
          type: integer
        deliver_silently:
          description: When set to true, the news item will appear in the messenger
            newsfeed without showing a notification badge.
          example: true
          type: boolean
        id:
          description: The unique identifier for the news item which is given by Intercom.
          example: '141'
          type: string
        labels:
          description: Label names displayed to users to categorize the news item.
          items:
            description: The label name.
            example: Product Update
            nullable: true
            type: string
          type: array
        newsfeed_assignments:
          description: A list of newsfeed_assignments to assign to the specified newsfeed.
          items:
            $ref: '#/components/schemas/newsfeed_assignment'
          type: array
        reactions:
          description: Ordered list of emoji reactions to the news item. When empty,
            reactions are disabled.
          items:
            description: The emoji reaction to the news item.
            example: "\U0001F44D"
            nullable: true
            type: string
          type: array
        sender_id:
          description: The id of the sender of the news item. Must be a teammate on
            the workspace.
          example: 123
          type: integer
        state:
          description: News items will not be visible to your users in the assigned
            newsfeeds until they are set live.
          enum:
          - draft
          - live
          example: live
          type: string
        title:
          description: The title of the news item.
          example: 'New feature: News Items'
          type: string
        type:
          description: The type of object.
          enum:
          - news-item
          example: news-item
          type: string
        updated_at:
          description: Timestamp for when the news item was last updated.
          example: 1610589632
          format: timestamp
          type: integer
        workspace_id:
          description: The id of the workspace which the news item belongs to.
          example: t74hdn32
          type: string
      title: News Item
      type: object
    news_item_request:
      description: A News Item is a content type in Intercom enabling you to announce
        product updates, company news, promotions, events and more with your customers.
      properties:
        body:
          description: The news item body, which may contain HTML.
          example: <p>New costumes in store for this spooky season</p>
          type: string
        deliver_silently:
          description: When set to `true`, the news item will appear in the messenger
            newsfeed without showing a notification badge.
          example: true
          type: boolean
        labels:
          description: Label names displayed to users to categorize the news item.
          example:
          - Product
          - Update
          - New
          items:
            type: string
          type: array
        newsfeed_assignments:
          description: A list of newsfeed_assignments to assign to the specified newsfeed.
          items:
            $ref: '#/components/schemas/newsfeed_assignment'
          type: array
        reactions:
          description: Ordered list of emoji reactions to the news item. When empty,
            reactions are disabled.
          example:
          - "\U0001F606"
          - "\U0001F605"
          items:
            nullable: true
            type: string
          type: array
        sender_id:
          description: The id of the sender of the news item. Must be a teammate on
            the workspace.
          example: 123
          type: integer
        state:
          description: News items will not be visible to your users in the assigned
            newsfeeds until they are set live.
          enum:
          - draft
          - live
          example: live
          type: string
        title:
          description: The title of the news item.
          example: Halloween is here!
          type: string
      required:
      - title
      - sender_id
      title: Create News Item Request
      type: object
    newsfeed:
      description: 'A newsfeed is a collection of news items, targeted to a specific
        audience.


        Newsfeeds currently cannot be edited through the API, please refer to [this
        article](https://www.intercom.com/help/en/articles/6362267-getting-started-with-news)
        to set up your newsfeeds in Intercom.

        '
      properties:
        created_at:
          description: Timestamp for when the newsfeed was created.
          example: 1674917488
          format: timestamp
          type: integer
        id:
          description: The unique identifier for the newsfeed which is given by Intercom.
          example: '12312'
          type: string
        name:
          description: The name of the newsfeed. This name will never be visible to
            your users.
          example: My Newsfeed
          type: string
        type:
          description: The type of object.
          enum:
          - newsfeed
          example: newsfeed
          type: string
        updated_at:
          description: Timestamp for when the newsfeed was last updated.
          example: 1674917488
          format: timestamp
          type: integer
      title: Newsfeed
      type: object
    newsfeed_assignment:
      description: Assigns a news item to a newsfeed.
      properties:
        newsfeed_id:
          description: The unique identifier for the newsfeed which is given by Intercom.
            Publish dates cannot be in the future, to schedule news items use the
            dedicated feature in app (see this article).
          example: 198313
          type: integer
        published_at:
          description: Publish date of the news item on the newsfeed, use this field
            if you want to set a publish date in the past (e.g. when importing existing
            news items). On write, this field will be ignored if the news item state
            is "draft".
          example: 1674917488
          format: timestamp
          type: integer
      title: Newsfeed Assignment
      type: object
    note:
      description: Notes allow you to annotate and comment on your contacts.
      properties:
        author:
          $ref: '#/components/schemas/admin'
          description: Optional. Represents the Admin that created the note.
        body:
          description: The body text of the note.
          example: <p>Text for the note.</p>
          type: string
        contact:
          description: Represents the contact that the note was created about.
          nullable: true
          properties:
            id:
              description: The id of the contact.
              example: 214656d0c743eafcfde7f248
              type: string
            type:
              description: String representing the object's type. Always has the value
                `contact`.
              type: string
          type: object
        created_at:
          description: The time the note was created.
          example: 1674589321
          format: timestamp
          type: integer
        id:
          description: The id of the note.
          example: '17495962'
          type: string
        type:
          description: String representing the object's type. Always has the value
            `note`.
          example: note
          type: string
      title: Note
      type: object
    note_list:
      description: A paginated list of notes associated with a contact.
      properties:
        data:
          description: An array of notes.
          items:
            $ref: '#/components/schemas/note'
          type: array
        pages:
          $ref: '#/components/schemas/cursor_pages'
        total_count:
          description: A count of the total number of notes.
          example: 1
          type: integer
        type:
          description: String representing the object's type. Always has the value
            `list`.
          example: list
          type: string
      title: Paginated Response
      type: object
    open_conversation_request:
      description: Payload of the request to open a conversation
      properties:
        admin_id:
          description: The id of the admin who is performing the action.
          example: '5017690'
          type: string
        message_type:
          enum:
          - open
          example: open
          type: string
      required:
      - message_type
      - admin_id
      title: Open Conversation Request
      type: object
    pages_link:
      description: 'The majority of list resources in the API are paginated to allow
        clients to traverse data over multiple requests.


        Their responses are likely to contain a pages object that hosts pagination
        links which a client can use to paginate through the data without having to
        construct a query. The link relations for the pages field are as follows.

        '
      properties:
        next:
          description: A link to the next page of results. A response that does not
            contain a next link does not have further data to fetch.
          format: uri
          nullable: true
          type: string
        page:
          example: 1
          type: integer
        per_page:
          example: 50
          type: integer
        total_pages:
          example: 1
          type: integer
        type:
          enum:
          - pages
          example: pages
          type: string
      title: Pagination Object
      type: object
    paginated_response:
      description: Paginated Response
      properties:
        data:
          description: An array of Objects
          items:
            anyOf:
            - $ref: '#/components/schemas/news_item'
            - $ref: '#/components/schemas/newsfeed'
          type: array
        pages:
          $ref: '#/components/schemas/cursor_pages'
        total_count:
          description: A count of the total number of objects.
          example: 1
          type: integer
        type:
          description: The type of object
          enum:
          - list
          - conversation.list
          example: list
          type: string
      title: Paginated Response
      type: object
    part_attachment:
      description: The file attached to a part
      properties:
        content_type:
          description: The content type of the attachment
          example: image/png
          type: string
        filesize:
          description: The size of the attachment
          example: 100
          type: integer
        height:
          description: The height of the attachment
          example: 100
          type: integer
        name:
          description: The name of the attachment
          example: example.png
          type: string
        type:
          description: The type of attachment
          example: upload
          type: string
        url:
          description: The URL of the attachment
          example: https://picsum.photos/200/300
          type: string
        width:
          description: The width of the attachment
          example: 100
          type: integer
      title: Part attachment
      type: object
    phone_switch:
      description: Phone Switch Response
      nullable: true
      properties:
        phone:
          description: Phone number in E.164 format, that has received the SMS to
            continue the conversation in the Messenger.
          example: +1 1234567890
          type: string
        type:
          default: phone_call_redirect
          description: ''
          enum:
          - phone_call_redirect
          example: phone_call_redirect
          type: string
      title: Phone Switch
      type: object
    redact_conversation_request:
      oneOf:
      - description: Payload of the request to redact a conversation part
        properties:
          conversation_id:
            description: The id of the conversation.
            example: '19894788788'
            type: string
          conversation_part_id:
            description: The id of the conversation_part.
            example: '19381789428'
            type: string
          type:
            description: The type of resource being redacted.
            enum:
            - conversation_part
            example: conversation_part
            type: string
        required:
        - type
        - conversation_id
        - conversation_part_id
        title: Redact Conversation Part Request
        type: object
      - description: Payload of the request to redact a conversation source
        properties:
          conversation_id:
            description: The id of the conversation.
            example: '19894788788'
            type: string
          source_id:
            description: The id of the source.
            example: '19894781231'
            type: string
          type:
            description: The type of resource being redacted.
            enum:
            - source
            example: source
            type: string
        required:
        - type
        - conversation_id
        - source_id
        title: Redact Conversation Source Request
        type: object
    reference:
      description: reference to another object
      properties:
        id:
          description: ''
          example: 1a2b3c
          nullable: true
          type: string
        type:
          description: ''
          example: contact
          type: string
      title: Reference
      type: object
    reply_conversation_request:
      oneOf:
      - $ref: '#/components/schemas/contact_reply_conversation_request'
      - $ref: '#/components/schemas/admin_reply_conversation_request'
    search_request:
      description: Search using Intercoms Search APIs.
      properties:
        pagination:
          $ref: '#/components/schemas/starting_after_paging'
        query:
          oneOf:
          - $ref: '#/components/schemas/single_filter_search_request'
            title: Single filter search request
          - $ref: '#/components/schemas/multiple_filter_search_request'
            title: multiple filter search request
      required:
      - query
      title: Search data
      type: object
    section:
      description: Sections are subdivisions of a collection, with a collection potentially
        having multiple sections.
      properties:
        created_at:
          description: The time when the section was created. For multilingual sections,
            this will be the timestamp of creation of the default language's content.
          example: 1672928359
          format: date-time
          type: integer
        default_locale:
          description: The default locale of the help center. This field is only returned
            for multilingual help centers.
          example: en
          type: string
        icon:
          description: The icon of the section.
          example: book-bookmark
          nullable: true
          type: string
        id:
          description: The unique identifier for the section which is given by Intercom.
          example: '6871119'
          type: string
        name:
          description: The name of the section. For multilingual sections, this will
            be the name of the default language's content.
          example: Default language name
          type: string
        order:
          description: The order of the section in relation to others sections within
            a collection. Values go from `0`` upwards. `0`` is the default if there's
            no order.
          example: '1'
          type: integer
        parent_id:
          description: The id of the parent section.
          example: 6871119
          oneOf:
          - title: Integer
            type: integer
          - title: String
            type: string
        translated_content:
          $ref: '#/components/schemas/group_translated_content'
          nullable: true
        type:
          default: section
          description: The type of object - `section`.
          enum:
          - section
          example: section
          type: string
        updated_at:
          description: The time when the section was last updated. For multilingual
            sections, this will be the timestamp of last update of the default language's
            content.
          example: 1672928610
          format: date-time
          type: integer
        url:
          description: The URL of the section. For multilingual help centers, this
            will be the URL of the section for the default language.
          example: http://intercom.test/help/section/name
          nullable: true
          type: string
        workspace_id:
          description: The id of the workspace which the section belongs to.
          example: hfi1bx4l
          type: string
      title: Section
      type: object
    section_list:
      description: This will return a list of Sections for the App.
      properties:
        data:
          description: An array of section objects
          items:
            $ref: '#/components/schemas/section'
          type: array
        pages:
          $ref: '#/components/schemas/cursor_pages'
        total_count:
          description: A count of the total number of sections.
          example: 12
          type: integer
        type:
          description: The type of the object - `list`.
          enum:
          - list
          example: list
          type: string
      title: Sections
      type: object
    segment:
      description: A segment is a group of your contacts defined by the rules that
        you set.
      properties:
        count:
          description: The number of items in the user segment. It's returned when
            `include_count=true` is included in the request.
          example: 3
          nullable: true
          type: integer
        created_at:
          description: The time the segment was created.
          example: 1394621988
          type: integer
        id:
          description: The unique identifier representing the segment.
          example: 56203d253cba154d39010062
          type: string
        name:
          description: The name of the segment.
          example: Active
          type: string
        person_type:
          description: 'Type of the contact: contact (lead) or user.'
          enum:
          - contact
          - user
          example: contact
          type: string
        type:
          description: The type of object.
          enum:
          - segment
          example: segment
          type: string
        updated_at:
          description: The time the segment was updated.
          example: 1394622004
          type: integer
      title: Segment
      type: object
    segment_list:
      description: This will return a list of Segment Objects. The result may also
        have a pages object if the response is paginated.
      properties:
        pages:
          description: A pagination object, which may be empty, indicating no further
            pages to fetch.
          type: object
        segments:
          description: A list of Segment objects
          items:
            $ref: '#/components/schemas/segment'
          type: array
        type:
          description: The type of the object
          enum:
          - segment.list
          example: segment.list
          type: string
      title: Segment List
      type: object
    single_filter_search_request:
      properties:
        field:
          description: The Intercom defined id representing the company.
          example: custom_attributes.social_network
          type: string
        operator:
          description: The Intercom defined id representing the company.
          enum:
          - '='
          - '!='
          - IN
          - NIN
          - <
          - '>'
          - '~'
          - '!~'
          - ^
          - $
          example: '='
          type: string
        value:
          description: The Intercom defined id representing the company.
          example: facebook
          type: string
      type: object
    sla_applied:
      description: 'The SLA Applied object contains the details for which SLA has
        been applied to this conversation.

        Important: if there are any canceled sla_events for the conversation - meaning
        an SLA has been manually removed from a conversation, the sla_status will
        always be returned as null.

        '
      nullable: true
      properties:
        sla_name:
          description: The name of the SLA as given by the teammate when it was created.
          example: ''
          type: string
        sla_status:
          description: "SLA statuses:\n            - `hit`: If there\u2019s at least\
            \ one hit event in the underlying sla_events table, and no \u201Cmissed\u201D\
            \ or \u201Ccanceled\u201D events for the conversation.\n            -\
            \ `missed`: If there are any missed sla_events for the conversation and\
            \ no canceled events. If there\u2019s even a single missed sla event,\
            \ the status will always be missed. A missed status is not applied when\
            \ the SLA expires, only the next time a teammate replies.\n          \
            \  - `active`: An SLA has been applied to a conversation, but has not\
            \ yet been fulfilled. SLA status is active only if there are no \u201C\
            hit, \u201Cmissed\u201D, or \u201Ccanceled\u201D events."
          enum:
          - hit
          - missed
          - cancelled
          - active
          example: hit
          type: string
        type:
          description: object type
          example: conversation_sla_summary
          type: string
      title: Applied SLA
      type: object
    snooze_conversation_request:
      description: Payload of the request to snooze a conversation
      properties:
        admin_id:
          description: The id of the admin who is performing the action.
          example: '5017691'
          type: string
        message_type:
          enum:
          - snoozed
          example: snoozed
          type: string
        snoozed_until:
          description: The time you want the conversation to reopen.
          example: 1673609604
          format: timestamp
          type: integer
      required:
      - message_type
      - admin_id
      - snoozed_until
      title: Snooze Conversation Request
      type: object
    social_profile:
      description: A Social Profile allows you to label your contacts, companies,
        and conversations and list them using that Social Profile.
      properties:
        name:
          description: The name of the Social media profile
          example: Facebook
          type: string
        type:
          description: value is "social_profile"
          example: social_profile
          type: string
        url:
          description: The name of the Social media profile
          example: http://twitter.com/th1sland
          format: uri
          type: string
      title: Social Profile
      type: object
    starting_after_paging:
      nullable: true
      properties:
        page:
          example: 2
          type: integer
        starting_after:
          example: 1HaSB+xrOyyMXAkS/c1RteCL7BzOzTvYjmjakgTergIH31eoe2v4/sbLsJWP\nIncfQLD3ouPkZlCwJ86F\n
          type: string
      title: StartingAfterPaging
      type: object
    subscription_type:
      description: A subscription type lets customers easily opt out of non-essential
        communications without missing what's important to them.
      properties:
        consent_type:
          description: Describes the type of consent.
          enum:
          - opt_out
          - opt_in
          example: opt_in
          type: string
        content_types:
          description: The message types that this subscription supports - can contain
            `email` or `sms_message`.
          items:
            enum:
            - email
            - sms_message
            example: email
            type: string
          type: array
        default_translation:
          $ref: '#/components/schemas/translation'
        id:
          description: The unique identifier representing the subscription type.
          example: '123456'
          type: string
        state:
          description: The state of the subscription type.
          enum:
          - live
          - draft
          - archived
          example: live
          type: string
        translations:
          description: An array of translations objects with the localised version
            of the subscription type in each available locale within your translation
            settings.
          items:
            $ref: '#/components/schemas/translation'
          type: array
        type:
          description: The type of the object - subscription
          example: subscription
          type: string
      title: Subscription Types
      type: object
    subscription_type_list:
      description: A list of subscription type objects.
      properties:
        data:
          description: A list of subscription type objects associated with the workspace
            .
          items:
            $ref: '#/components/schemas/subscription_type'
          type: array
        type:
          description: The type of the object
          enum:
          - list
          example: list
          type: string
      title: Subscription Types
      type: object
    tag:
      description: A tag allows you to label your contacts, companies, and conversations
        and list them using that tag.
      properties:
        applied_at:
          description: The time when the tag was applied to the object
          example: 1663597223
          format: date-time
          type: integer
        applied_by:
          $ref: '#/components/schemas/reference'
        id:
          description: The id of the tag
          example: '123456'
          type: string
        name:
          description: The name of the tag
          example: Test tag
          type: string
        type:
          description: value is "tag"
          example: tag
          type: string
      title: Tag
      type: object
    tag_company_request:
      description: You can tag a single company or a list of companies.
      properties:
        companies:
          description: The id or company_id of the company can be passed as input
            parameters.
          items:
            properties:
              company_id:
                description: The company id you have defined for the company.
                example: '6'
                type: string
              id:
                description: The Intercom defined id representing the company.
                example: 531ee472cce572a6ec000006
                type: string
          type: array
        name:
          description: The name of the tag, which will be created if not found.
          example: Independent
          type: string
      required:
      - name
      - companies
      title: Tag Company Request Payload
      type: object
    tag_list:
      description: A list of tags objects in the workspace.
      properties:
        data:
          description: A list of tags objects associated with the workspace .
          items:
            $ref: '#/components/schemas/tag'
          type: array
        type:
          description: The type of the object
          enum:
          - list
          example: list
          type: string
      title: Tags
      type: object
    tag_multiple_users_request:
      description: You can tag a list of users.
      properties:
        name:
          description: The name of the tag, which will be created if not found.
          example: Independent
          type: string
        users:
          items:
            properties:
              id:
                description: The Intercom defined id representing the user.
                example: 5f7f0d217289f8d2f4262080
                type: string
          type: array
      required:
      - name
      - users
      title: Tag Users Request Payload
      type: object
    tags:
      description: A list of tags objects associated with a conversation
      properties:
        tags:
          description: A list of tags objects associated with the conversation.
          items:
            $ref: '#/components/schemas/tag'
          type: array
        type:
          description: The type of the object
          enum:
          - tag.list
          example: tag.list
          type: string
      title: Tags
      type: object
    team:
      description: Teams are groups of admins in Intercom.
      properties:
        admin_ids:
          description: The list of admin IDs that are a part of the team.
          example:
          - 493881
          items:
            type: integer
          type: array
        admin_priority_level:
          $ref: '#/components/schemas/admin_priority_level'
        id:
          description: The id of the team
          example: '814865'
          type: string
        name:
          description: The name of the team
          example: Example Team
          type: string
        type:
          description: Value is always "team"
          example: team
          type: string
      title: Team
      type: object
    team_list:
      description: This will return a list of team objects for the App.
      properties:
        teams:
          description: A list of team objects
          items:
            $ref: '#/components/schemas/team'
          type: array
        type:
          description: The type of the object
          enum:
          - team.list
          example: team.list
          type: string
      title: Team List
      type: object
    team_priority_level:
      description: Admin priority levels for teams
      nullable: true
      properties:
        primary_team_ids:
          description: The primary team ids for the team
          example:
          - 814865
          items:
            type: integer
          nullable: true
          type: array
        secondary_team_ids:
          description: The secondary team ids for the team
          example:
          - 493881
          items:
            type: integer
          nullable: true
          type: array
      title: Team Priority Level
      type: object
    ticket:
      description: Tickets are how you track requests from your users.
      nullable: true
      properties:
        admin_assignee_id:
          description: The id representing the admin assigned to the ticket.
          example: '1295'
          type: string
        contacts:
          $ref: '#/components/schemas/ticket_contacts'
        created_at:
          description: The time the ticket was created.
          example: 1663597223
          format: date-time
          type: integer
        id:
          description: The id representing the ticket.
          example: '1295'
          type: string
        team_assignee_id:
          description: The id representing the team assigned to the ticket.
          example: '1295'
          type: string
        ticket_attributes:
          $ref: '#/components/schemas/ticket_custom_attributes'
        ticket_parts:
          $ref: '#/components/schemas/ticket_parts'
        ticket_state:
          description: The state the ticket is currenly in
          enum:
          - submitted
          - in_progress
          - waiting_on_customer
          - resolved
          example: submitted
          type: string
        ticket_type:
          $ref: '#/components/schemas/ticket_type'
        type:
          default: ticket
          description: Always ticket
          enum:
          - ticket
          example: ticket
          type: string
        updated_at:
          description: The last time the ticket was updated.
          example: 1663597260
          format: date-time
          type: integer
      title: Ticket
      type: object
    ticket_contacts:
      description: The list of contacts (users or leads) affected by a ticket.
      properties:
        contacts:
          description: The list of contacts (users or leads) affected by this ticket.
          items:
            properties:
              id:
                description: The unique identifier for the contact which is given
                  by Intercom.
                example: 5ba682d23d7cf92bef87bfd4
                type: string
              type:
                description: The type of contact (user or lead)
                enum:
                - lead
                - user
                example: user
                type: string
            type: object
          type: array
        type:
          description: always contact.list
          enum:
          - contact.list
          example: contact.list
          type: string
      title: Contacts
      type: object
    ticket_custom_attributes:
      additionalProperties:
        anyOf:
        - nullable: true
          type: string
        - type: number
        - type: boolean
        - type: array
        - $ref: '#/components/schemas/file_attribute'
      description: An object containing the different attributes associated to the
        ticket as key-value pairs. For the default title and description attributes,
        the keys are `_default_title_` and `_default_description_`.
      example:
        name: example
        question: Can I have some help?
      title: Ticket Attributes
      type: object
    ticket_note:
      description: A Ticket Part representing a note on a ticket
      properties:
        attachments:
          description: A list of attachments for the part.
          items:
            $ref: '#/components/schemas/part_attachment'
          title: Ticket part attachments
          type: array
        author:
          $ref: '#/components/schemas/ticket_part_author'
        body:
          description: The message body, which may contain HTML.
          example: <p>Okay!</p>
          nullable: true
          type: string
        created_at:
          description: The time the note was created.
          example: 1663597223
          format: date-time
          type: integer
        id:
          description: The id representing the note.
          example: '3'
          type: string
        part_type:
          description: Always note
          enum:
          - note
          example: note
          type: string
        redacted:
          description: Whether or not the ticket part has been redacted.
          example: false
          type: boolean
        type:
          description: Always ticket_part
          enum:
          - ticket_part
          example: ticket_part
          type: string
        updated_at:
          description: The last time the note was updated.
          example: 1663597260
          format: date-time
          type: integer
      title: A Ticket Part representing a note
      type: object
    ticket_part:
      description: A Ticket Part represents a message in the ticket.
      properties:
        assigned_to:
          $ref: '#/components/schemas/reference'
          description: The id of the admin that was assigned the ticket by this ticket_part
            (null if there has been no change in assignment.)
          nullable: true
        attachments:
          description: A list of attachments for the part.
          items:
            $ref: '#/components/schemas/part_attachment'
          title: Ticket part attachments
          type: array
        author:
          $ref: '#/components/schemas/ticket_part_author'
        body:
          description: The message body, which may contain HTML.
          example: <p>Okay!</p>
          nullable: true
          type: string
        created_at:
          description: The time the ticket part was created.
          example: 1663597223
          format: date-time
          type: integer
        external_id:
          description: The external id of the ticket part
          example: abcd1234
          nullable: true
          type: string
        id:
          description: The id representing the ticket part.
          example: '3'
          type: string
        part_type:
          description: The type of ticket part.
          example: comment
          type: string
        previous_ticket_state:
          description: The previous state of the ticket.
          enum:
          - submitted
          - in_progress
          - waiting_on_customer
          - resolved
          example: submitted
          type: string
        redacted:
          description: Whether or not the ticket part has been redacted.
          example: false
          type: boolean
        ticket_state:
          description: The state of the ticket.
          enum:
          - submitted
          - in_progress
          - waiting_on_customer
          - resolved
          example: submitted
          type: string
        type:
          description: Always ticket_part
          example: ticket_part
          type: string
        updated_at:
          description: The last time the ticket part was updated.
          example: 1663597260
          format: date-time
          type: integer
      title: Ticket Part
      type: object
    ticket_part_author:
      description: The author that wrote or triggered the part. Can be a bot or an
        admin.
      properties:
        email:
          description: The email of the author
          example: operator+abcd1234@intercom.io
          format: email
          type: string
        id:
          description: The id of the author
          example: '274'
          type: string
        name:
          description: The name of the author
          example: Operator
          type: string
        type:
          description: The type of the author
          enum:
          - admin
          - bot
          - team
          example: admin
          type: string
      title: Ticket part author
      type: object
    ticket_parts:
      description: A list of Ticket Part objects for each note and event in the ticket.
        There is a limit of 500 parts.
      properties:
        ticket_parts:
          description: A list of Ticket Part objects for each ticket. There is a limit
            of 500 parts.
          items:
            $ref: '#/components/schemas/ticket_part'
          title: Tickt Parts
          type: array
        total_count:
          description: ''
          example: 2
          type: integer
        type:
          description: ''
          enum:
          - ticket_part.list
          example: ticket_part.list
          type: string
      title: Ticket Parts
      type: object
    ticket_request_custom_attributes:
      additionalProperties:
        anyOf:
        - nullable: true
          type: string
        - type: number
        - type: boolean
        - type: array
      description: The attributes set on the ticket. When setting the default title
        and description attributes, the attribute keys that should be used are `_default_title_`
        and `_default_description_`. When setting ticket type attributes of the list
        attribute type, the key should be the attribute name and the value of the
        attribute should be the list item id, obtainable by [listing the ticket type](ref:get_ticket-types).
        For example, if the ticket type has an attribute called `priority` of type
        `list`, the key should be `priority` and the value of the attribute should
        be the guid of the list item (e.g. `de1825a0-0164-4070-8ca6-13e22462fa7e`).
      example:
        name: example
        question: Can I have some help?
      title: Ticket Attributes
      type: object
    ticket_type:
      description: A ticket type, used to define the data fields to be captured in
        a ticket.
      nullable: true
      properties:
        archived:
          description: Whether the ticket type is archived or not.
          example: false
          type: boolean
        created_at:
          description: The date and time the ticket type was created.
          format: timestamp
          type: integer
        description:
          description: The description of the ticket type
          example: A bug that has been reported.
          type: string
        icon:
          description: The icon of the ticket type
          example: "\U0001F41E"
          type: string
        id:
          description: The id representing the ticket type.
          example: '1295'
          type: string
        name:
          description: The name of the ticket type
          example: Bug
          type: string
        ticket_type_attributes:
          $ref: '#/components/schemas/ticket_type_attribute_list'
        type:
          description: String representing the object's type. Always has the value
            `ticket_type`.
          example: ticket_type
          type: string
        updated_at:
          description: The date and time the ticket type was last updated.
          format: timestamp
          type: integer
        workspace_id:
          description: The id of the workspace that the ticket type belongs to.
          example: ecahpwf5
          type: string
      title: Ticket Type
      type: object
    ticket_type_attribute:
      description: Ticket type attribute, used to define each data field to be captured
        in a ticket.
      nullable: true
      properties:
        archived:
          description: Whether the ticket type attribute is archived or not.
          example: false
          type: boolean
        created_at:
          description: The date and time the ticket type attribute was created.
          format: timestamp
          type: integer
        data_type:
          description: 'The type of the data attribute (allowed values: "string list
            integer decimal boolean datetime files")'
          example: string
          type: string
        default:
          description: Whether the attribute is built in or not.
          example: true
          type: boolean
        description:
          description: The description of the ticket type attribute
          example: Bug title.
          type: string
        id:
          description: The id representing the ticket type attribute.
          example: '1'
          type: string
        input_options:
          description: Input options for the attribute
          example: 'multiline: true'
          type: object
        name:
          description: The name of the ticket type attribute
          example: Title
          type: string
        order:
          description: The order of the attribute against other attributes
          example: 1
          type: integer
        required_to_create:
          default: false
          description: Whether the attribute is required or not for teammates.
          example: false
          type: boolean
        required_to_create_for_contacts:
          default: false
          description: Whether the attribute is required or not for contacts.
          example: false
          type: boolean
        ticket_type_id:
          description: The id of the ticket type that the attribute belongs to.
          example: 42
          type: integer
        type:
          description: String representing the object's type. Always has the value
            `ticket_type_attribute`.
          example: ticket_type_attribute
          type: string
        updated_at:
          description: The date and time the ticket type attribute was last updated.
          format: timestamp
          type: integer
        visible_on_create:
          default: true
          description: Whether the attribute is visible or not to teammates.
          example: false
          type: boolean
        visible_to_contacts:
          default: true
          description: Whether the attribute is visible or not to contacts.
          example: false
          type: boolean
        workspace_id:
          description: The id of the workspace that the ticket type attribute belongs
            to.
          example: ecahpwf5
          type: string
      title: Ticket Type Attribute
      type: object
    ticket_type_attribute_list:
      description: A list of attributes associated with a given ticket type.
      properties:
        ticket_type_attributes:
          description: A list of ticket type attributes associated with a given ticket
            type.
          items:
            $ref: '#/components/schemas/ticket_type_attribute'
          type: array
        type:
          description: String representing the object's type. Always has the value
            `ticket_type_attributes.list`.
          type: string
      title: Ticket Type Attributes
      type: object
    ticket_type_list:
      description: A list of ticket types associated with a given workspace.
      properties:
        ticket_types:
          description: A list of ticket_types associated with a given workspace.
          items:
            $ref: '#/components/schemas/ticket_type'
          type: array
        type:
          description: String representing the object's type. Always has the value
            `ticket_type.list`.
          type: string
      title: Ticket Types
      type: object
    translation:
      description: A translation object contains the localised details of a subscription
        type.
      properties:
        description:
          description: The localised description of the subscription type.
          example: Offers, product and feature announcements
          type: string
        locale:
          description: The two character identifier for the language of the translation
            object.
          example: en
          type: string
        name:
          description: The localised name of the subscription type.
          example: Announcements
          type: string
      title: Translation
      type: object
    untag_company_request:
      description: You can tag a single company or a list of companies.
      properties:
        companies:
          description: The id or company_id of the company can be passed as input
            parameters.
          items:
            properties:
              company_id:
                description: The company id you have defined for the company.
                example: '6'
                type: string
              id:
                description: The Intercom defined id representing the company.
                example: 531ee472cce572a6ec000006
                type: string
              untag:
                description: Always set to true
                example: 'true'
                type: boolean
          type: array
        name:
          description: The name of the tag which will be untagged from the company
          example: Independent
          type: string
      required:
      - name
      - companies
      title: Untag Company Request Payload
      type: object
    update_article_request:
      description: You can Update an Article
      nullable: true
      properties:
        author_id:
          description: The id of the author of the article. For multilingual articles,
            this will be the id of the author of the default language's content. Must
            be a teammate on the help center's workspace.
          example: 1295
          type: integer
        body:
          description: The content of the article. For multilingual articles, this
            will be the body of the default language's content.
          example: <p>This is the body in html</p>
          type: string
        description:
          description: The description of the article. For multilingual articles,
            this will be the description of the default language's content.
          example: Description of the Article
          type: string
        parent_id:
          description: The id of the article's parent collection or section. An article
            without this field stands alone.
          example: '18'
          type: string
        parent_type:
          description: The type of parent, which can either be a `collection` or `section`.
          example: collection
          type: string
        state:
          description: Whether the article will be `published` or will be a `draft`.
            Defaults to draft. For multilingual articles, this will be the state of
            the default language's content.
          enum:
          - published
          - draft
          example: draft
          type: string
        title:
          description: The title of the article.For multilingual articles, this will
            be the title of the default language's content.
          example: Thanks for everything
          type: string
        translated_content:
          $ref: '#/components/schemas/article_translated_content'
      title: Update Article Request Payload
      type: object
    update_collection_request:
      description: You can update a collection
      properties:
        description:
          description: The description of the collection. For multilingual collections,
            this will be the description of the default language's content.
          example: English description
          type: string
        name:
          description: The name of the collection. For multilingual collections, this
            will be the name of the default language's content.
          example: collection 51
          type: string
        translated_content:
          $ref: '#/components/schemas/group_translated_content'
          nullable: true
      title: Update Collection Request Payload
      type: object
    update_contact_request:
      description: You can update a contact
      properties:
        avatar:
          description: An image URL containing the avatar of a contact
          example: https://www.example.com/avatar_image.jpg
          nullable: true
          type: string
        custom_attributes:
          description: The custom attributes which are set for the contact
          nullable: true
          type: object
        email:
          description: The contacts email
          example: jdoe@example.com
          type: string
        external_id:
          description: A unique identifier for the contact which is given to Intercom
          type: string
        last_seen_at:
          description: The time when the contact was last seen (either where the Intercom
            Messenger was installed or when specified manually)
          example: 1571672154
          format: date-time
          nullable: true
          type: integer
        name:
          description: The contacts name
          example: John Doe
          nullable: true
          type: string
        owner_id:
          description: The id of an admin that has been assigned account ownership
            of the contact
          example: 123
          nullable: true
          type: integer
        phone:
          description: The contacts phone
          example: '+353871234567'
          nullable: true
          type: string
        role:
          description: The role of the contact.
          type: string
        signed_up_at:
          description: The time specified for when a contact signed up
          example: 1571672154
          format: date-time
          nullable: true
          type: integer
        unsubscribed_from_emails:
          description: Whether the contact is unsubscribed from emails
          example: true
          nullable: true
          type: boolean
      title: Update Contact Request Payload
      type: object
    update_conversation_request:
      description: Payload of the request to update a conversation
      properties:
        custom_attributes:
          $ref: '#/components/schemas/custom_attributes'
        read:
          description: Mark a conversation as read within Intercom.
          example: true
          type: boolean
      title: Update Conversation Request
      type: object
    update_data_attribute_request:
      description: ''
      properties:
        archived:
          description: Whether the attribute is to be archived or not.
          example: false
          type: boolean
        description:
          description: The readable description you see in the UI for the attribute.
          example: My Data Attribute Description
          type: string
        options:
          description: To create list attributes. Provide a set of hashes with `value`
            as the key of the options you want to make. `data_type` must be `string`.
          example:
          - option1
          - option2
          items:
            type: string
          type: array
      title: Update Data Attribute Request
      type: object
    update_section_request:
      description: You can update a Section
      properties:
        name:
          description: The name of the collection. For multilingual collections, this
            will be the name of the default language's content.
          example: Section 51
          type: string
        parent_id:
          description: The id for the collection this section will be within.
          example: 18
          type: integer
        translated_content:
          $ref: '#/components/schemas/group_translated_content'
          nullable: true
      title: Update Section Request Payload
      type: object
    update_ticket_request:
      description: You can update a Ticket
      properties:
        assignment:
          properties:
            admin_id:
              description: The ID of the admin performing the action.
              example: '123'
              type: string
            assignee_id:
              description: The ID of the admin or team to which the ticket is assigned.
                Set this 0 to unassign it.
              example: '123'
              type: string
          type: object
        state:
          description: The state of the ticket.
          enum:
          - in_progress
          - waiting_on_customer
          - resolved
          example: submitted
          type: string
        ticket_attributes:
          description: The attributes set on the ticket.
          example:
            description: having a problem
            title: example
          type: object
      title: Update Ticket Request Payload
      type: object
    update_ticket_type_attribute_request:
      description: You can update a Ticket Type Attribute
      properties:
        allow_multiple_values:
          description: Whether the attribute allows multiple files to be attached
            to it (only applicable to file attributes)
          example: false
          type: boolean
        archived:
          description: Whether the attribute should be archived and not shown during
            creation of the ticket (it will still be present on previously created
            tickets)
          example: false
          type: boolean
        description:
          description: The description of the attribute presented to the teammate
            or contact
          example: Priority level of the bug
          type: string
        list_items:
          description: A comma delimited list of items for the attribute value (only
            applicable to list attributes)
          example: Low Priority,Medium Priority,High Priority
          type: string
        multiline:
          description: Whether the attribute allows multiple lines of text (only applicable
            to string attributes)
          example: false
          type: boolean
        name:
          description: The name of the ticket type attribute
          example: Bug Priority
          type: string
        required_to_create:
          default: false
          description: Whether the attribute is required to be filled in when teammates
            are creating the ticket in Inbox.
          example: false
          type: boolean
        required_to_create_for_contacts:
          default: false
          description: Whether the attribute is required to be filled in when contacts
            are creating the ticket in Messenger.
          example: false
          type: boolean
        visible_on_create:
          default: true
          description: Whether the attribute is visible to teammates when creating
            a ticket in Inbox.
          example: true
          type: boolean
        visible_to_contacts:
          default: true
          description: Whether the attribute is visible to contacts when creating
            a ticket in Messenger.
          example: true
          type: boolean
      title: Update Ticket Type Attribute Request Payload
      type: object
    update_ticket_type_request:
      description: 'The request payload for updating a ticket type.

        You can copy the `icon` property for your ticket type from [Twemoji Cheatsheet](https://twemoji-cheatsheet.vercel.app/)

        '
      nullable: true
      properties:
        archived:
          description: The archived status of the ticket type.
          example: false
          type: boolean
        description:
          description: The description of the ticket type.
          example: A bug has been occured
          type: string
        icon:
          default: "\U0001F39F\uFE0F"
          description: The icon of the ticket type.
          example: "\U0001F41E"
          type: string
        is_internal:
          default: false
          description: Whether the tickets associated with this ticket type are intended
            for internal use only or will be shared with customers. This is currently
            a limited attribute.
          example: false
          type: boolean
        name:
          description: The name of the ticket type.
          example: Bug
          type: string
      title: Update Ticket Type Request Payload
      type: object
    update_visitor_request:
      anyOf:
      - required:
        - id
      - required:
        - user_id
      description: Update an existing visitor.
      properties:
        custom_attributes:
          additionalProperties:
            type: string
          description: The custom attributes which are set for the visitor.
          example:
            monthly_spend: 155.5
            paid_subscriber: true
            team_mates: 9
          type: object
        id:
          description: A unique identified for the visitor which is given by Intercom.
          example: 8a88a590-e
          type: string
        name:
          description: The visitor's name.
          example: Christian Bale
          type: string
        user_id:
          description: A unique identified for the visitor which is given by you.
          example: '123'
          type: string
      title: Update Visitor Request Payload
      type: object
    visitor:
      description: Visitors are useful for representing anonymous people that have
        not yet been identified. They usually represent website visitors. Visitors
        are not visible in Intercom platform. The Visitors resource provides methods
        to fetch, update, convert and delete.
      nullable: true
      properties:
        anonymous:
          description: Identifies if this visitor is anonymous.
          example: false
          type: boolean
        app_id:
          description: The id of the app the visitor is associated with.
          example: hfi1bx4l
          type: string
        avatar:
          properties:
            image_url:
              description: This object represents the avatar associated with the visitor.
              example: https://example.com/avatar.png
              format: uri
              nullable: true
              type: string
            type:
              default: avatar
              description: ''
              example: avatar
              type: string
          type: object
        companies:
          properties:
            companies:
              items:
                $ref: '#/components/schemas/company'
              type: array
            type:
              description: The type of the object
              enum:
              - company.list
              example: company.list
              type: string
          type: object
        created_at:
          description: The time the Visitor was added to Intercom.
          example: 1663597223
          type: integer
        custom_attributes:
          additionalProperties:
            type: string
          description: The custom attributes you have set on the Visitor.
          type: object
        do_not_track:
          description: Identifies if this visitor has do not track enabled.
          example: false
          nullable: true
          type: boolean
        email:
          description: The email of the visitor.
          example: jane.doe@example.com
          format: email
          type: string
        has_hard_bounced:
          description: Identifies if this visitor has had a hard bounce.
          example: false
          type: boolean
        id:
          description: The Intercom defined id representing the Visitor.
          example: 530370b477ad7120001d
          type: string
        las_request_at:
          description: The time the Lead last recorded making a request.
          example: 1663597260
          type: integer
        location_data:
          properties:
            city_name:
              description: The city name of the visitor.
              example: Dublin
              type: string
            continent_code:
              description: The continent code of the visitor.
              example: EU
              type: string
            country_code:
              description: The country code of the visitor.
              example: IRL
              type: string
            country_name:
              description: The country name of the visitor.
              example: Ireland
              type: string
            postal_code:
              description: The postal code of the visitor.
              example: D02 N960
              type: string
            region_name:
              description: The region name of the visitor.
              example: Leinster
              type: string
            timezone:
              description: The timezone of the visitor.
              example: Europe/Dublin
              type: string
            type:
              default: location_data
              description: ''
              example: location_data
              type: string
          type: object
        marked_email_as_spam:
          description: Identifies if this visitor has marked an email as spam.
          example: false
          type: boolean
        name:
          description: The name of the visitor.
          example: Jane Doe
          nullable: true
          type: string
        owner_id:
          description: The id of the admin that owns the Visitor.
          example: '5169261'
          nullable: true
          type: string
        phone:
          description: The phone number of the visitor.
          example: 555-555-5555
          nullable: true
          type: string
        pseudonym:
          description: The pseudonym of the visitor.
          example: Red Duck from Dublin
          nullable: true
          type: string
        referrer:
          description: The referer of the visitor.
          example: https://www.google.com/
          nullable: true
          type: string
        remote_created_at:
          description: The time the Visitor was added to Intercom.
          example: 1663597223
          type: integer
        segments:
          properties:
            segments:
              items:
                type: string
              type: array
            type:
              description: The type of the object
              enum:
              - segment.list
              example: segment.list
              type: string
          type: object
        session_count:
          description: The number of sessions the Visitor has had.
          example: 1
          type: integer
        signed_up_at:
          description: The time the Visitor signed up for your product.
          example: 1663597223
          type: integer
        social_profiles:
          properties:
            social_profiles:
              items:
                type: string
              type: array
            type:
              description: The type of the object
              enum:
              - social_profile.list
              example: social_profile.list
              type: string
          type: object
        tags:
          properties:
            tags:
              items:
                properties:
                  id:
                    description: The id of the tag.
                    example: '8482'
                    type: string
                  name:
                    description: The name of the tag.
                    example: tag_name
                    type: string
                  type:
                    description: The type of the object
                    enum:
                    - tag
                    example: tag
                    type: string
              type: array
            type:
              description: The type of the object
              enum:
              - tag.list
              example: tag.list
              type: string
          type: object
        type:
          default: visitor
          description: Value is 'visitor'
          example: visitor
          type: string
        unsubscribed_from_emails:
          description: Whether the Visitor is unsubscribed from emails.
          example: false
          type: boolean
        updated_at:
          description: The last time the Visitor was updated.
          example: 1663597260
          type: integer
        user_id:
          description: Automatically generated identifier for the Visitor.
          example: 8a88a590-e1c3-41e2-a502-e0649dbf721c
          type: string
        utm_campaign:
          description: The utm_campaign of the visitor.
          example: intercom-link
          nullable: true
          type: string
        utm_content:
          description: The utm_content of the visitor.
          example: banner
          nullable: true
          type: string
        utm_medium:
          description: The utm_medium of the visitor.
          example: email
          nullable: true
          type: string
        utm_source:
          description: The utm_source of the visitor.
          example: Intercom
          nullable: true
          type: string
        utm_term:
          description: The utm_term of the visitor.
          example: messenger
          nullable: true
          type: string
      title: Visitor
      type: object
    visitor_deleted_object:
      description: Response returned when an object is deleted
      properties:
        id:
          description: The unique identifier for the visitor which is given by Intercom.
          example: 530370b477ad7120001d
          type: string
        type:
          description: The type of object which was deleted
          enum:
          - visitor
          example: visitor
          type: string
        user_id:
          description: Automatically generated identifier for the Visitor.
          example: 8a88a590-e1c3-41e2-a502-e0649dbf721c
          type: string
      title: Visitor Deleted Object
      type: object
  securitySchemes:
    bearerAuth:
      scheme: bearer
      type: http
info:
  contact:
    name: Intercom Developer Hub
    url: https://developers.intercom.com
  description: The intercom API reference.
  license:
    name: MIT
    url: https://spdx.org/licenses/MIT
  title: Intercom API
  version: '2.9'
openapi: 3.0.1
paths:
  /admins:
    get:
      description: You can fetch a list of admins for a given workspace.
      operationId: listAdmins
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      responses:
        '200':
          content:
            application/json:
              examples:
                Successful response:
                  value:
                    admins:
                    - away_mode_enabled: false
                      away_mode_reassign: false
                      email: admin7@email.com
                      has_inbox_seat: true
                      id: '991266221'
                      name: Ciaran7 Lee
                      team_ids: []
                      type: admin
                    type: admin.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/admin_list'
                - type: object
          description: Successful response
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: 60b6abc4-acf6-4f0a-b6c8-ce253b6714d8
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
      summary: List all admins
      tags:
      - Admins
  /admins/activity_logs:
    get:
      description: You can get a log of activities by all admins in an app.
      operationId: listActivityLogs
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - description: The start date that you request data for. It must be formatted
          as a UNIX timestamp.
        example: '1677253093'
        in: query
        name: created_at_after
        required: true
        schema:
          type: string
      - description: The end date that you request data for. It must be formatted
          as a UNIX timestamp.
        example: '1677861493'
        in: query
        name: created_at_before
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                Successful response:
                  value:
                    activity_logs:
                    - activity_description: Ciaran5 Lee changed your Initial message
                        title message from Initial message title to Eventual message
                        title.
                      activity_type: message_state_change
                      created_at: 1683886471
                      id: 8737147a-8a45-406d-8dfb-4b1428f0dc37
                      metadata:
                        after: Eventual message title
                        before: Initial message title
                        message:
                          id: 123
                          title: Initial message title
                      performed_by:
                        email: admin5@email.com
                        id: '991266219'
                        ip: 127.0.0.1
                        type: admin
                    - activity_description: Ciaran5 Lee changed your app name from
                        before to after.
                      activity_type: app_name_change
                      created_at: 1683886471
                      id: c0ea3086-d25a-4171-93c9-a8d98414c39b
                      metadata:
                        after: after
                        before: before
                      performed_by:
                        email: admin5@email.com
                        id: '991266219'
                        ip: 127.0.0.1
                        type: admin
                    pages:
                      next: null
                      page: 1
                      per_page: 20
                      total_pages: 1
                      type: pages
                    type: activity_log.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/activity_log_list'
                - type: object
          description: Successful response
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: 12f9fb8b-c2b3-4887-b6e6-3057640f3068
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
      summary: List all activity logs
      tags:
      - Admins
  /admins/{id}:
    get:
      description: You can retrieve the details of a single admin.
      operationId: retrieveAdmin
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - description: The unique identifier of a given admin
        example: 123
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              examples:
                Admin found:
                  value:
                    away_mode_enabled: false
                    away_mode_reassign: false
                    email: admin9@email.com
                    has_inbox_seat: true
                    id: '991266223'
                    name: Ciaran9 Lee
                    team_ids: []
                    type: admin
              schema:
                oneOf:
                - $ref: '#/components/schemas/admin'
                - type: object
          description: Admin found
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: 1b4fed06-48c4-4d23-945a-ac6391e6852d
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
        '404':
          content:
            application/json:
              examples:
                Admin not found:
                  value:
                    errors:
                    - code: admin_not_found
                      message: Admin not found
                    request_id: 6922de6f-d9af-4a79-8f61-9a48d992ee27
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Admin not found
      summary: Retrieve an admin
      tags:
      - Admins
  /admins/{id}/away:
    put:
      description: You can set an Admin as away for the Inbox.
      operationId: setAwayAdmin
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - description: The unique identifier of a given admin
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            examples:
              admin_not_found:
                summary: Admin not found
                value:
                  away_mode_enabled: true
                  away_mode_reassign: true
              successful_response:
                summary: Successful response
                value:
                  away_mode_enabled: true
                  away_mode_reassign: true
              unauthorized:
                summary: Unauthorized
                value:
                  away_mode_enabled: true
                  away_mode_reassign: true
            schema:
              properties:
                away_mode_enabled:
                  default: true
                  description: Set to "true" to change the status of the admin to
                    away.
                  example: true
                  type: boolean
                away_mode_reassign:
                  default: false
                  description: Set to "true" to assign any new conversation replies
                    to your default inbox.
                  example: false
                  type: boolean
              required:
              - away_mode_enabled
              - away_mode_reassign
              type: object
      responses:
        '200':
          content:
            application/json:
              examples:
                Successful response:
                  value:
                    away_mode_enabled: true
                    away_mode_reassign: true
                    email: admin2@email.com
                    has_inbox_seat: true
                    id: '991266215'
                    name: Ciaran2 Lee
                    team_ids: []
                    type: admin
              schema:
                oneOf:
                - $ref: '#/components/schemas/admin'
                - type: object
          description: Successful response
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: d48c25c0-62be-4034-a751-2523e476cbe5
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
        '404':
          content:
            application/json:
              examples:
                Admin not found:
                  value:
                    errors:
                    - code: admin_not_found
                      message: Admin for admin_id not found
                    request_id: 11b06bd4-b6de-4e77-8922-c32946c1aa22
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Admin not found
      summary: Set an admin to away
      tags:
      - Admins
  /articles:
    get:
      description: "You can fetch a list of all articles by making a GET request to\
        \ `https://api.intercom.io/articles`.\n\n> \U0001F4D8 How are the articles\
        \ sorted and ordered?\n>\n> Articles will be returned in descending order\
        \ on the `updated_at` attribute. This means if you need to iterate through\
        \ results then we'll show the most recently updated articles first.\n"
      operationId: listArticles
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      responses:
        '200':
          content:
            application/json:
              examples:
                successful:
                  value:
                    data:
                    - author_id: 991266226
                      body: ''
                      created_at: 1683886477
                      description: ''
                      id: '88792'
                      parent_id: 83747
                      parent_type: collection
                      state: published
                      title: This is the article title
                      type: article
                      updated_at: 1683886477
                      url: http://help-center.test/myapp-22/en/articles/88792-this-is-the-article-title
                      workspace_id: this_is_an_id22_that_should_be_at_least_4
                    pages:
                      page: 1
                      per_page: 25
                      total_pages: 1
                      type: pages
                    total_count: 1
                    type: list
              schema:
                oneOf:
                - $ref: '#/components/schemas/article_list'
                - type: object
          description: successful
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: caa1ac0f-8de8-433c-82cc-39174fe342cf
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
      summary: List all articles
      tags:
      - Articles
    post:
      description: You can create a new article by making a POST request to `https://api.intercom.io/articles`.
      operationId: createArticle
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      requestBody:
        content:
          application/json:
            examples:
              article_created:
                summary: article created
                value:
                  author_id: 991266234
                  body: Body of the Article
                  description: Description of the Article
                  parent_id: 83749
                  parent_type: collection
                  state: published
                  title: Thanks for everything
                  translated_content:
                    fr:
                      author_id: 991266234
                      body: Corps de l'article
                      description: Description de l'article
                      state: published
                      title: Merci pour tout
              bad_request:
                summary: Bad Request
                value:
                  body: Body of the Article
                  description: Description of the Article
                  state: published
                  title: Thanks for everything
            schema:
              $ref: '#/components/schemas/create_article_request'
      responses:
        '200':
          content:
            application/json:
              examples:
                article created:
                  value:
                    author_id: 991266234
                    body: <p class="no-margin">Body of the Article</p>
                    created_at: 1683886479
                    description: Description of the Article
                    id: '88795'
                    parent_id: 83749
                    parent_type: collection
                    state: published
                    statistics:
                      conversations: 0
                      happy_reaction_percentage: 0
                      neutral_reaction_percentage: 0
                      reactions: 0
                      sad_reaction_percentage: 0
                      type: article_statistics
                      views: 0
                    title: Thanks for everything
                    type: article
                    updated_at: 1683886479
                    url: http://help-center.test/myapp-26/en/articles/88795-thanks-for-everything
                    workspace_id: this_is_an_id26_that_should_be_at_least_4
              schema:
                oneOf:
                - $ref: '#/components/schemas/article'
                - type: object
          description: article created
        '400':
          content:
            application/json:
              examples:
                Bad Request:
                  value:
                    errors:
                    - code: parameter_not_found
                      message: author_id must be in the main body or default locale
                        translated_content object
                    request_id: 8e30f311-55ac-4aab-9a5b-67adb6be9d53
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Bad Request
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: ca2752df-b1b9-436c-92de-c8bf3b0308f9
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
      summary: Create an article
      tags:
      - Articles
  /articles/{id}:
    delete:
      description: You can delete a single article by making a DELETE request to `https://api.intercom.io/articles/<id>`.
      operationId: deleteArticle
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - description: The unique identifier for the article which is given by Intercom.
        example: 123
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              examples:
                successful:
                  value:
                    deleted: true
                    id: '88804'
                    object: article
              schema:
                oneOf:
                - $ref: '#/components/schemas/deleted_article_object'
                - type: object
          description: successful
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: 471bb825-4a2e-4d25-8aa8-1bea1b50c6f2
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
        '404':
          content:
            application/json:
              examples:
                Article Not Found:
                  value:
                    errors:
                    - code: not_found
                      message: Resource Not Found
                    request_id: 9da93bdb-3d4d-4c02-ab20-41ed76b4588d
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Article Not Found
      summary: Delete an article
      tags:
      - Articles
    get:
      description: You can fetch the details of a single article by making a GET request
        to `https://api.intercom.io/articles/<id>`.
      operationId: retrieveArticle
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - description: The unique identifier for the article which is given by Intercom.
        example: 123
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              examples:
                Article found:
                  value:
                    author_id: 991266241
                    body: ''
                    created_at: 1683886482
                    description: ''
                    id: '88798'
                    parent_id: 83752
                    parent_type: collection
                    state: published
                    statistics:
                      conversations: 0
                      happy_reaction_percentage: 0
                      neutral_reaction_percentage: 0
                      reactions: 0
                      sad_reaction_percentage: 0
                      type: article_statistics
                      views: 0
                    title: This is the article title
                    type: article
                    updated_at: 1683886482
                    url: http://help-center.test/myapp-32/en/articles/88798-this-is-the-article-title
                    workspace_id: this_is_an_id32_that_should_be_at_least_4
              schema:
                oneOf:
                - $ref: '#/components/schemas/article'
                - type: object
          description: Article found
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: 8d0608de-aad9-4238-87d9-01b350c3f087
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
        '404':
          content:
            application/json:
              examples:
                Article not found:
                  value:
                    errors:
                    - code: not_found
                      message: Resource Not Found
                    request_id: 8677e96f-9683-452a-86d9-c920d9349827
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Article not found
      summary: Retrieve an article
      tags:
      - Articles
    put:
      description: You can update the details of a single article by making a PUT
        request to `https://api.intercom.io/articles/<id>`.
      operationId: updateArticle
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - description: The unique identifier for the article which is given by Intercom.
        example: 123
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            examples:
              article_not_found:
                summary: Article Not Found
                value:
                  body: <p>New gifts in store for the jolly season</p>
                  title: Christmas is here!
              successful:
                summary: successful
                value:
                  body: <p>New gifts in store for the jolly season</p>
                  title: Christmas is here!
            schema:
              $ref: '#/components/schemas/update_article_request'
      responses:
        '200':
          content:
            application/json:
              examples:
                successful:
                  value:
                    author_id: 991266250
                    body: <p class="no-margin">New gifts in store for the jolly season</p>
                    created_at: 1683886484
                    description: ''
                    id: '88801'
                    parent_id: 83755
                    parent_type: collection
                    state: published
                    statistics:
                      conversations: 0
                      happy_reaction_percentage: 0
                      neutral_reaction_percentage: 0
                      reactions: 0
                      sad_reaction_percentage: 0
                      type: article_statistics
                      views: 0
                    title: Christmas is here!
                    type: article
                    updated_at: 1683886485
                    url: http://help-center.test/myapp-38/en/articles/88801-christmas-is-here
                    workspace_id: this_is_an_id38_that_should_be_at_least_4
              schema:
                oneOf:
                - $ref: '#/components/schemas/article'
                - type: object
          description: successful
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: 9d536562-60df-4e3e-9c6c-a8ab9d792bc6
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
        '404':
          content:
            application/json:
              examples:
                Article Not Found:
                  value:
                    errors:
                    - code: not_found
                      message: Resource Not Found
                    request_id: 1dee632c-3836-4978-b6b1-fa8799ad410d
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Article Not Found
      summary: Update an article
      tags:
      - Articles
  /companies:
    get:
      description: "You can fetch a company by either passing in `company_id` or `name`\
        \ as a query parameter.\n\nA company can also be fetched by its name using\
        \ a name or company_id parameter in the url, whose values are the ones you\
        \ have defined for that company -\n  `https://api.intercom.io/companies?name={name}`\n\
        \  `https://api.intercom.io/companies?company_id={company_id}`\n"
      operationId: retrieveCompany
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - in: query
        name: filter
        required: true
        schema:
          oneOf:
          - additionalProperties: false
            description: The `company_id` of the company to filter by.
            properties:
              company_id:
                type: string
            required:
            - company_id
            title: Filter by company_id
          - additionalProperties: false
            description: The `name` of the company to filter by.
            properties:
              name:
                type: string
            required:
            - name
            title: Filter by name
          type: object
        style: form
      responses:
        '200':
          content:
            application/json:
              examples:
                Successful:
                  value:
                    app_id: this_is_an_id115_that_should_be_at_least_
                    company_id: '1'
                    created_at: 1683886517
                    custom_attributes: {}
                    id: 645e11b505a7e7570bfa4b3f
                    monthly_spend: 0
                    name: company2
                    plan: {}
                    remote_created_at: 1683886517
                    segments:
                      segments: []
                      type: segment.list
                    session_count: 0
                    tags:
                      tags: []
                      type: tag.list
                    type: company
                    updated_at: 1683886517
                    user_count: 1
              schema:
                oneOf:
                - $ref: '#/components/schemas/company'
                - type: object
          description: Successful
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: 0861d4c8-9cec-43af-8920-31ec1541f2b5
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
        '404':
          content:
            application/json:
              examples:
                Company Not Found:
                  value:
                    errors:
                    - code: company_not_found
                      message: Company Not Found
                    request_id: 82f3ea92-e3c1-4fd4-8f82-2f417e22c423
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Company Not Found
      summary: Retrieve a company
      tags:
      - Companies
    post:
      description: "You can create or update a company.\n\n> \U0001F4D8 Companies\
        \ with no users\n>\n> Companies will be only visible in Intercom when there\
        \ is at least one associated user.\n\nCompanies are looked up via `company_id`\
        \ in a `POST` request, if not found via `company_id`, the new company will\
        \ be created, if found, that company will be updated.\n"
      operationId: createOrUpdateCompany
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      requestBody:
        content:
          application/json:
            examples:
              bad_request:
                summary: Bad Request
                value:
                  test: invalid
              successful:
                summary: Successful
                value:
                  company_id: company_remote_id
                  name: my company
                  remote_created_at: 1374138000
            schema:
              $ref: '#/components/schemas/create_or_update_company_request'
      responses:
        '200':
          content:
            application/json:
              examples:
                Successful:
                  value:
                    app_id: this_is_an_id109_that_should_be_at_least_
                    company_id: company_remote_id
                    created_at: 1683886513
                    custom_attributes:
                      creation_source: api
                    id: 645e11b105a7e7570bfa4b35
                    monthly_spend: 0
                    name: my company
                    plan: {}
                    remote_created_at: 1374138000
                    segments:
                      segments: []
                      type: segment.list
                    session_count: 0
                    tags:
                      tags: []
                      type: tag.list
                    type: company
                    updated_at: 1683886513
                    user_count: 0
              schema:
                oneOf:
                - $ref: '#/components/schemas/company'
                - type: object
          description: Successful
        '400':
          content:
            application/json:
              examples:
                Bad Request:
                  value:
                    errors:
                    - code: bad_request
                      message: bad 'test' parameter
                    request_id: null
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Bad Request
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: be922183-9fd8-48ad-9056-0666289f8f3d
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
      summary: Create or Update a company
      tags:
      - Companies
  /companies/list:
    post:
      description: "You can list companies. The company list is sorted by the `last_request_at`\
        \ field and by default is ordered descending, most recently requested first.\n\
        \nNote that the API does not include companies who have no associated users\
        \ in list responses.\n\n> \U0001F4D8\n>\n> When using the Companies endpoint\
        \ and the pages object to iterate through the returned companies, there is\
        \ a limit of 10,000 Companies that can be returned. If you need to list or\
        \ iterate on more than 10,000 Companies, please use the [Scroll API](https://developers.intercom.com/reference#iterating-over-all-companies).\n"
      operationId: listAllCompanies
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - description: what page of results to fetch. Defaults to first page
        example: first page
        in: query
        name: page
        required: false
        schema:
          type: string
      - description: how many results per page. Defaults to 15
        example: '15'
        in: query
        name: per_page
        required: false
        schema:
          type: string
      - description: '`asc` or `desc`. Return the companies in ascending or descending
          order. Defaults to desc'
        example: desc
        in: query
        name: order
        required: false
        schema:
          type: string
      - in: query
        name: filter
        required: true
        schema:
          oneOf:
          - additionalProperties: false
            description: The `id` of the tag to filter by.
            properties:
              tag_id:
                type: string
            required:
            - tag_id
            title: Filter by tag
          - additionalProperties: false
            description: The `id` of the segment to filter by.
            properties:
              segment_id:
                type: string
            required:
            - segment_id
            title: Filter by segment
          type: object
        style: form
      responses:
        '200':
          content:
            application/json:
              examples:
                Successful:
                  value:
                    data:
                    - app_id: this_is_an_id151_that_should_be_at_least_
                      company_id: remote_companies_scroll_2
                      created_at: 1683886538
                      custom_attributes: {}
                      id: 645e11ca05a7e7570bfa4b7a
                      monthly_spend: 0
                      name: IntercomQATest1
                      plan: {}
                      remote_created_at: 1683886538
                      segments:
                        segments: []
                        type: segment.list
                      session_count: 0
                      tags:
                        tags: []
                        type: tag.list
                      type: company
                      updated_at: 1683886538
                      user_count: 4
                    pages:
                      next: null
                      page: 1
                      per_page: 15
                      total_pages: 1
                      type: pages
                    total_count: 1
                    type: list
              schema:
                oneOf:
                - $ref: '#/components/schemas/company_list'
                - type: object
          description: Successful
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: 028df9bd-d82a-49b8-bec1-97da220c8975
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
      summary: List all companies
      tags:
      - Companies
  /companies/scroll:
    get:
      description: "      The `list all companies` functionality does not work well\
        \ for huge datasets, and can result in errors and performance problems when\
        \ paging deeply. The Scroll API provides an efficient mechanism for iterating\
        \ over all companies in a dataset.\n\n- Each app can only have 1 scroll open\
        \ at a time. You'll get an error message if you try to have more than one\
        \ open per app.\n- If the scroll isn't used for 1 minute, it expires and calls\
        \ with that scroll param will fail\n- If the end of the scroll is reached,\
        \ \"companies\" will be empty and the scroll parameter will expire\n\n> \U0001F4D8\
        \ Scroll Parameter\n>\n> You can get the first page of companies by simply\
        \ sending a GET request to the scroll endpoint. For subsequent requests you\
        \ will need to use the scroll parameter from the response.\n\n> \u2757\uFE0F\
        \ Scroll network timeouts\n>\n> Since scroll is often used on large datasets\
        \ network errors such as timeouts can be encountered. When this occurs you\
        \ will need to restart your scroll query as it is not possible to continue\
        \ from a specific point when using scroll.\n>\n> When this occurs you will\
        \ see a HTTP 500 error with the following message:\n> \"Request failed due\
        \ to an internal network error. Please restart the scroll operation.\"\n"
      operationId: scrollOverAllCompanies
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - description: ''
        in: query
        name: scroll_param
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                Successful:
                  value:
                    data:
                    - app_id: this_is_an_id155_that_should_be_at_least_
                      company_id: remote_companies_scroll_2
                      created_at: 1683886542
                      custom_attributes: {}
                      id: 645e11ce05a7e7570bfa4b82
                      monthly_spend: 0
                      name: IntercomQATest1
                      plan: {}
                      remote_created_at: 1683886542
                      segments:
                        segments: []
                        type: segment.list
                      session_count: 0
                      tags:
                        tags: []
                        type: tag.list
                      type: company
                      updated_at: 1683886542
                      user_count: 4
                    pages: null
                    scroll_param: 83c40c41-727a-41ff-96fe-c48131b005b2
                    total_count: null
                    type: list
              schema:
                oneOf:
                - $ref: '#/components/schemas/company_scroll'
                - type: object
          description: Successful
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: b44b27c4-2010-4bbe-8b55-f3e459031d53
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
      summary: Scroll over all companies
      tags:
      - Companies
  /companies/{id}:
    delete:
      description: You can delete a single company.
      operationId: deleteCompany
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - description: The unique identifier for the company which is given by Intercom
        example: 5f4d3c1c-7b1b-4d7d-a97e-6095715c6632
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                Successful:
                  value:
                    deleted: true
                    id: 645e11c005a7e7570bfa4b5e
                    object: company
              schema:
                oneOf:
                - $ref: '#/components/schemas/deleted_company_object'
                - type: object
          description: Successful
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: aa224a9e-1b07-4033-b1c1-c7e6a6c75dc9
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
        '404':
          content:
            application/json:
              examples:
                Company Not Found:
                  value:
                    errors:
                    - code: company_not_found
                      message: Company Not Found
                    request_id: 67570082-5256-4bab-820b-7de9ac43a34f
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Company Not Found
      summary: Delete a company
      tags:
      - Companies
    get:
      description: You can fetch a single company.
      operationId: RetrieveACompanyById
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - description: The unique identifier for the company which is given by Intercom
        example: 5f4d3c1c-7b1b-4d7d-a97e-6095715c6632
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                Successful:
                  value:
                    app_id: this_is_an_id121_that_should_be_at_least_
                    company_id: '1'
                    created_at: 1683886520
                    custom_attributes: {}
                    id: 645e11b805a7e7570bfa4b4a
                    monthly_spend: 0
                    name: company4
                    plan: {}
                    remote_created_at: 1683886520
                    segments:
                      segments: []
                      type: segment.list
                    session_count: 0
                    tags:
                      tags: []
                      type: tag.list
                    type: company
                    updated_at: 1683886520
                    user_count: 1
              schema:
                oneOf:
                - $ref: '#/components/schemas/company'
                - type: object
          description: Successful
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: 8a59a586-802c-413b-85e0-87c2bd1f1b96
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
        '404':
          content:
            application/json:
              examples:
                Company Not Found:
                  value:
                    errors:
                    - code: company_not_found
                      message: Company Not Found
                    request_id: 710a9b1e-10cd-4ac2-b8eb-172fc16c8dff
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Company Not Found
      summary: Retrieve a company by ID
      tags:
      - Companies
    put:
      description: You can update a single company
      operationId: UpdateCompany
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - description: The unique identifier for the company which is given by Intercom
        example: 5f4d3c1c-7b1b-4d7d-a97e-6095715c6632
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                Successful:
                  value:
                    app_id: this_is_an_id127_that_should_be_at_least_
                    company_id: '1'
                    created_at: 1683886524
                    custom_attributes: {}
                    id: 645e11bc05a7e7570bfa4b54
                    monthly_spend: 0
                    name: company5
                    plan: {}
                    remote_created_at: 1683886524
                    segments:
                      segments: []
                      type: segment.list
                    session_count: 0
                    tags:
                      tags: []
                      type: tag.list
                    type: company
                    updated_at: 1683886524
                    user_count: 1
              schema:
                oneOf:
                - $ref: '#/components/schemas/company'
                - type: object
          description: Successful
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: 84c09ecd-5e45-4944-8502-2f2363d75f9e
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
        '404':
          content:
            application/json:
              examples:
                Company Not Found:
                  value:
                    errors:
                    - code: company_not_found
                      message: Company Not Found
                    request_id: fd499658-76fc-4afc-9fdd-cdb795dae8a9
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Company Not Found
      summary: Update a company
      tags:
      - Companies
  /companies/{id}/contacts:
    get:
      description: You can fetch a list of all contacts that belong to a company.
      operationId: ListAttachedContacts
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - description: The unique identifier for the company which is given by Intercom
        example: 5f4d3c1c-7b1b-4d7d-a97e-6095715c6632
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                Successful:
                  value:
                    data: []
                    pages:
                      page: 1
                      per_page: 50
                      total_pages: 0
                      type: pages
                    total_count: 0
                    type: list
              schema:
                oneOf:
                - $ref: '#/components/schemas/company_attached_contacts'
                - type: object
          description: Successful
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: b886c042-98e0-4653-85d3-4f5de8443344
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
        '404':
          content:
            application/json:
              examples:
                Company Not Found:
                  value:
                    errors:
                    - code: company_not_found
                      message: Company Not Found
                    request_id: 1a705fa2-db77-4b33-828d-c4cb58edc977
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Company Not Found
      summary: List attached contacts
      tags:
      - Companies
      - Contacts
  /companies/{id}/segments:
    get:
      description: You can fetch a list of all segments that belong to a company.
      operationId: ListAttachedSegmentsForCompanies
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - description: The unique identifier for the company which is given by Intercom
        example: 5f4d3c1c-7b1b-4d7d-a97e-6095715c6632
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                Successful:
                  value:
                    data: []
                    type: list
              schema:
                oneOf:
                - $ref: '#/components/schemas/company_attached_segments'
                - type: object
          description: Successful
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: 78acace3-25c8-46d2-aac1-5db2d8dd0c59
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
        '404':
          content:
            application/json:
              examples:
                Company Not Found:
                  value:
                    errors:
                    - code: company_not_found
                      message: Company Not Found
                    request_id: 68ed0808-811a-43b1-bb07-a39d56061a9e
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Company Not Found
      summary: List attached segments for companies
      tags:
      - Companies
  /contacts:
    get:
      description: You can fetch a list of all contacts.
      operationId: ListContacts
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      responses:
        '200':
          content:
            application/json:
              examples:
                successful:
                  value:
                    data: []
                    pages:
                      page: 1
                      per_page: 10
                      total_pages: 0
                      type: pages
                    total_count: 0
                    type: list
              schema:
                oneOf:
                - $ref: '#/components/schemas/contact_list'
                - type: object
          description: successful
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: 25ca2748-e6ed-4d71-a001-cade9796c3e0
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
      summary: List all contacts
      tags:
      - Contacts
    post:
      description: You can create a new contact (ie. user or lead).
      operationId: CreateContact
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      requestBody:
        content:
          application/json:
            examples:
              successful:
                summary: successful
                value:
                  email: joebloggs@intercom.io
            schema:
              oneOf:
              - $ref: '#/components/schemas/create_contact_request'
      responses:
        '200':
          content:
            application/json:
              examples:
                successful:
                  value:
                    android_app_name: null
                    android_app_version: null
                    android_device: null
                    android_last_seen_at: null
                    android_os_version: null
                    android_sdk_version: null
                    avatar: null
                    browser: null
                    browser_language: null
                    browser_version: null
                    companies:
                      data: []
                      has_more: false
                      total_count: 0
                      type: list
                      url: /contacts/645e120f05a7e7570bfa4bed/companies
                    created_at: 1683886607
                    custom_attributes: {}
                    email: joebloggs@intercom.io
                    external_id: null
                    has_hard_bounced: false
                    id: 645e120f05a7e7570bfa4bed
                    ios_app_name: null
                    ios_app_version: null
                    ios_device: null
                    ios_last_seen_at: null
                    ios_os_version: null
                    ios_sdk_version: null
                    language_override: null
                    last_contacted_at: null
                    last_email_clicked_at: null
                    last_email_opened_at: null
                    last_replied_at: null
                    last_seen_at: null
                    location:
                      city: null
                      continent_code: null
                      country: null
                      country_code: null
                      region: null
                      type: location
                    marked_email_as_spam: false
                    name: null
                    notes:
                      data: []
                      has_more: false
                      total_count: 0
                      type: list
                      url: /contacts/645e120f05a7e7570bfa4bed/notes
                    opted_in_subscription_types:
                      data: []
                      has_more: false
                      total_count: 0
                      type: list
                      url: /contacts/645e120f05a7e7570bfa4bed/subscriptions
                    opted_out_subscription_types:
                      data: []
                      has_more: false
                      total_count: 0
                      type: list
                      url: /contacts/645e120f05a7e7570bfa4bed/subscriptions
                    os: null
                    owner_id: null
                    phone: null
                    referrer: null
                    role: user
                    signed_up_at: null
                    social_profiles:
                      data: []
                      type: list
                    tags:
                      data: []
                      has_more: false
                      total_count: 0
                      type: list
                      url: /contacts/645e120f05a7e7570bfa4bed/tags
                    type: contact
                    unsubscribed_from_emails: false
                    updated_at: 1683886607
                    utm_campaign: null
                    utm_content: null
                    utm_medium: null
                    utm_source: null
                    utm_term: null
                    workspace_id: this_is_an_id263_that_should_be_at_least_
              schema:
                oneOf:
                - $ref: '#/components/schemas/contact'
                - type: object
          description: successful
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: 5cc9c49b-519e-4db8-808b-fd227c77b1d7
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
      summary: Create contact
      tags:
      - Contacts
  /contacts/merge:
    post:
      description: You can merge a contact with a `role` of `lead` into a contact
        with a `role` of `user`.
      operationId: MergeContact
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      requestBody:
        content:
          application/json:
            examples:
              successful:
                summary: successful
                value:
                  from: 645e120805a7e7570bfa4be7
                  into: 645e120805a7e7570bfa4be8
            schema:
              $ref: '#/components/schemas/merge_contacts_request'
      responses:
        '200':
          content:
            application/json:
              examples:
                successful:
                  value:
                    android_app_name: null
                    android_app_version: null
                    android_device: null
                    android_last_seen_at: null
                    android_os_version: null
                    android_sdk_version: null
                    avatar: null
                    browser: null
                    browser_language: null
                    browser_version: null
                    companies:
                      data: []
                      has_more: false
                      total_count: 0
                      type: list
                      url: /contacts/645e120805a7e7570bfa4be8/companies
                    created_at: 1683886600
                    custom_attributes: {}
                    email: joe@bloggs.com
                    external_id: '70'
                    has_hard_bounced: false
                    id: 645e120805a7e7570bfa4be8
                    ios_app_name: null
                    ios_app_version: null
                    ios_device: null
                    ios_last_seen_at: null
                    ios_os_version: null
                    ios_sdk_version: null
                    language_override: null
                    last_contacted_at: null
                    last_email_clicked_at: null
                    last_email_opened_at: null
                    last_replied_at: null
                    last_seen_at: null
                    location:
                      city: null
                      continent_code: null
                      country: null
                      country_code: null
                      region: null
                      type: location
                    marked_email_as_spam: false
                    name: Joe Bloggs
                    notes:
                      data: []
                      has_more: false
                      total_count: 0
                      type: list
                      url: /contacts/645e120805a7e7570bfa4be8/notes
                    opted_in_subscription_types:
                      data: []
                      has_more: false
                      total_count: 0
                      type: list
                      url: /contacts/645e120805a7e7570bfa4be8/subscriptions
                    opted_out_subscription_types:
                      data: []
                      has_more: false
                      total_count: 0
                      type: list
                      url: /contacts/645e120805a7e7570bfa4be8/subscriptions
                    os: null
                    owner_id: null
                    phone: null
                    referrer: null
                    role: user
                    signed_up_at: 1683886600
                    social_profiles:
                      data: []
                      type: list
                    tags:
                      data: []
                      has_more: false
                      total_count: 0
                      type: list
                      url: /contacts/645e120805a7e7570bfa4be8/tags
                    type: contact
                    unsubscribed_from_emails: false
                    updated_at: 1683886601
                    utm_campaign: null
                    utm_content: null
                    utm_medium: null
                    utm_source: null
                    utm_term: null
                    workspace_id: this_is_an_id251_that_should_be_at_least_
              schema:
                oneOf:
                - $ref: '#/components/schemas/contact'
                - type: object
          description: successful
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: 6978a4b6-e887-4a31-9632-0bfb41a32238
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
      summary: Merge a lead and a user
      tags:
      - Contacts
  /contacts/search:
    post:
      description: "You can search for multiple contacts by the value of their attributes\
        \ in order to fetch exactly who you want.\n\nTo search for contacts, you need\
        \ to send a POST request to `https://api.intercom.io/contacts/search`. This\
        \ will accept a query object in the body which will define your filters in\
        \ order to search for contacts.\n\n> \U0001F6A7 Why is there a delay when\
        \ creating contacts and searching for them?\n>\n> If a contact has recently\
        \ been created, there is a possibility that it will not yet be available when\
        \ searching. This means that it may not appear in the response. This delay\
        \ can take a few minutes. If you need to be instantly notified then you could\
        \ use webhooks instead, which you'd currently have to iterate on to see if\
        \ they match your search filters.\n\n> \U0001F6A7 Nesting & Limitations\n\
        >\n> You can nest these filters in order to get even more granular insights\
        \ that pinpoint exactly what you need. Example: (1 OR 2) AND (3 OR 4).\n>\
        \ There are some limitations to the amount of multiple's there can be:\n>\
        \ * There's a limit of max 2 nested filters\n> * There's a limit of max 15\
        \ filters for each AND or OR group\n\n> \U0001F6A7 Searching for Timestamp\
        \ Fields\n\n> All timestamp fields (created_at, updated_at etc.) are indexed\
        \ as Dates for Contact Search queries; Datetime queries are not currently\
        \ supported. This means you can only query for timestamp fields by day - not\
        \ hour, minute or second.\n> For example, if you search for all Contacts with\
        \ a created_at value greater (>) than 1577869200 (the UNIX timestamp for January\
        \ 1st, 2020 9:00 AM), that will be interpreted as 1577836800 (January 1st,\
        \ 2020 12:00 AM). The search results will then include Contacts created from\
        \ January 2nd, 2020 12:00 AM onwards.\n> If you'd like to get contacts created\
        \ on January 1st, 2020 you should search with a created_at value equal (=)\
        \ to 1577836800 (January 1st, 2020 12:00 AM).\n> This behaviour applies only\
        \ to timestamps used in search queries. The search results will still contain\
        \ the full UNIX timestamp and be sorted accordingly.\n\n### Accepted Fields\n\
        \nMost key listed as part of the Contacts Model are searchable, whether writeable\
        \ or not. The value you search for has to match the accepted type, otherwise\
        \ the query will fail (ie. as `created_at` accepts a date, the `value` cannot\
        \ be a string such as `\"foorbar\"`).\n\n| Field                         \
        \     | Type                           |\n| ----------------------------------\
        \ | ------------------------------ |\n| id                               \
        \  | String                         |\n| role                            \
        \   | String<br>Accepts user or lead |\n| name                           \
        \    | String                         |\n| avatar                        \
        \     | String                         |\n| owner_id                     \
        \      | Integer                        |\n| email                       \
        \       | String                         |\n| phone                      \
        \        | String                         |\n| formatted_phone           \
        \         | String                         |\n| external_id              \
        \          | String                         |\n| created_at              \
        \           | Date (UNIX Timestamp)          |\n| signed_up_at           \
        \            | Date (UNIX Timestamp)          |\n| updated_at            \
        \             | Date (UNIX Timestamp)          |\n| last_seen_at         \
        \              | Date (UNIX Timestamp)          |\n| last_contacted_at   \
        \               | Date (UNIX Timestamp)          |\n| last_replied_at    \
        \                | Date (UNIX Timestamp)          |\n| last_email_opened_at\
        \               | Date (UNIX Timestamp)          |\n| last_email_clicked_at\
        \              | Date (UNIX Timestamp)          |\n| language_override   \
        \               | String                         |\n| browser            \
        \                | String                         |\n| browser_language  \
        \                 | String                         |\n| os               \
        \                  | String                         |\n| location.country\
        \                   | String                         |\n| location.region\
        \                    | String                         |\n| location.city \
        \                     | String                         |\n| unsubscribed_from_emails\
        \           | Boolean                        |\n| marked_email_as_spam   \
        \            | Boolean                        |\n| has_hard_bounced      \
        \             | Boolean                        |\n| ios_last_seen_at     \
        \              | Date (UNIX Timestamp)          |\n| ios_app_version     \
        \               | String                         |\n| ios_device         \
        \                | String                         |\n| ios_app_device    \
        \                 | String                         |\n| ios_os_version   \
        \                  | String                         |\n| ios_app_name    \
        \                   | String                         |\n| ios_sdk_version\
        \                    | String                         |\n| android_last_seen_at\
        \               | Date (UNIX Timestamp)          |\n| android_app_version\
        \                | String                         |\n| android_device    \
        \                 | String                         |\n| android_app_name \
        \                  | String                         |\n| andoid_sdk_version\
        \                 | String                         |\n| segment_id       \
        \                  | String                         |\n| tag_id          \
        \                   | String                         |\n| custom_attributes.{attribute_name}\
        \ | String                         |\n\n"
      operationId: SearchContacts
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      requestBody:
        content:
          application/json:
            examples:
              successful:
                summary: successful
                value:
                  query:
                    operator: AND
                    value:
                    - field: id
                      operator: '='
                      value: 645e120b05a7e7570bfa4beb
                    - operator: OR
                      value:
                      - field: id
                        operator: '='
                        value: 645e120b05a7e7570bfa4beb
                      - field: id
                        operator: '='
                        value: 645e120b05a7e7570bfa4beb
            schema:
              $ref: '#/components/schemas/search_request'
      responses:
        '200':
          content:
            application/json:
              examples:
                successful:
                  value:
                    data: []
                    pages:
                      page: 1
                      per_page: 50
                      total_pages: 0
                      type: pages
                    total_count: 0
                    type: list
              schema:
                oneOf:
                - $ref: '#/components/schemas/contact_list'
                - type: object
          description: successful
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: 029c0cba-ee9b-4ba1-bd6e-12b1715a77dd
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
      summary: Search contacts
      tags:
      - Contacts
  /contacts/{contact_id}/companies:
    get:
      description: You can fetch a list of companies that are associated to a contact.
      operationId: listCompaniesForAContact
      parameters:
      - description: The unique identifier for the contact which is given by Intercom
        example: 63a07ddf05a32042dffac965
        in: path
        name: contact_id
        required: true
        schema:
          type: string
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      responses:
        '200':
          content:
            application/json:
              examples:
                successful:
                  value:
                    data:
                    - app_id: this_is_an_id173_that_should_be_at_least_
                      company_id: '1'
                      created_at: 1683886567
                      custom_attributes: {}
                      id: 645e11e705a7e7570bfa4bbd
                      last_request_at: 1683713767
                      monthly_spend: 0
                      name: company25
                      plan: {}
                      remote_created_at: 1683886567
                      segments:
                        segments: []
                        type: segment.list
                      session_count: 0
                      tags:
                        tags: []
                        type: tag.list
                      type: company
                      updated_at: 1683886567
                      user_count: 1
                    pages:
                      next: null
                      page: 1
                      per_page: 50
                      total_pages: 1
                      type: pages
                    total_count: 1
                    type: list
              schema:
                oneOf:
                - $ref: '#/components/schemas/contact_attached_companies'
                - type: object
          description: successful
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: de1a77f0-6671-4ade-be65-f358eaeed7aa
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
        '404':
          content:
            application/json:
              examples:
                Contact not found:
                  value:
                    errors:
                    - code: not_found
                      message: User Not Found
                    request_id: 97b9dc4e-aa12-435a-9058-3eeefb8d0462
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Contact not found
      summary: List attached companies for contact
      tags:
      - Contacts
      - Companies
  /contacts/{contact_id}/companies/{id}:
    delete:
      description: You can detach a company from a single contact.
      operationId: dettachContactFromACompany
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - description: The unique identifier for the contact which is given by Intercom
        example: 58a430d35458202d41b1e65b
        in: path
        name: contact_id
        required: true
        schema:
          type: string
      - description: The unique identifier for the company which is given by Intercom
        example: 58a430d35458202d41b1e65b
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                Successful:
                  value:
                    app_id: this_is_an_id165_that_should_be_at_least_
                    company_id: '1'
                    created_at: 1683886549
                    custom_attributes: {}
                    id: 645e11d505a7e7570bfa4b97
                    monthly_spend: 0
                    name: company12
                    plan: {}
                    remote_created_at: 1683886549
                    segments:
                      segments: []
                      type: segment.list
                    session_count: 0
                    tags:
                      tags: []
                      type: tag.list
                    type: company
                    updated_at: 1683886549
                    user_count: 0
              schema:
                oneOf:
                - $ref: '#/components/schemas/company'
                - type: object
          description: Successful
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: 16f3bf99-e7bc-4014-8df7-44c43a761c9c
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
        '404':
          content:
            application/json:
              examples:
                Company Not Found:
                  value:
                    errors:
                    - code: company_not_found
                      message: Company Not Found
                    request_id: 249f45fa-60ed-49a6-9563-ec93b27a0c81
                    type: error.list
                Contact Not Found:
                  value:
                    errors:
                    - code: not_found
                      message: User Not Found
                    request_id: cccf4188-5b7f-4f92-aeb2-fca85b647955
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Contact Not Found
      summary: Detach a contact from a company
      tags:
      - Companies
      - Contacts
  /contacts/{contact_id}/segments:
    get:
      description: You can fetch a list of segments that are associated to a contact.
      operationId: listSegmentsForAContact
      parameters:
      - description: The unique identifier for the contact which is given by Intercom
        example: 63a07ddf05a32042dffac965
        in: path
        name: contact_id
        required: true
        schema:
          type: string
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      responses:
        '200':
          content:
            application/json:
              examples:
                successful:
                  value:
                    data:
                    - created_at: 1683886575
                      id: 645e11ef05a7e7570bfa4bcd
                      name: segment
                      person_type: user
                      type: segment
                      updated_at: 1683886575
                    type: list
              schema:
                oneOf:
                - $ref: '#/components/schemas/contact_segments'
                - type: object
          description: successful
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: 419ba706-5552-48fa-9a27-30469aca2ca7
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
        '404':
          content:
            application/json:
              examples:
                Contact not found:
                  value:
                    errors:
                    - code: not_found
                      message: User Not Found
                    request_id: e260024a-0cdf-46c6-a182-84ab28bcc4a4
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Contact not found
      summary: List attached segments for contact
      tags:
      - Contacts
      - Segments
  /contacts/{contact_id}/subscriptions:
    get:
      description: "You can fetch a list of subscription types that are attached to\
        \ a contact. These can be subscriptions that a user has 'opted-in' to or has\
        \ 'opted-out' from, depending on the subscription type.\nThis will return\
        \ a list of Subscription Type objects that the contact is associated with.\n\
        \nThe data property will show a combined list of:\n\n  1.Opt-out subscription\
        \ types that the user has opted-out from.\n  2.Opt-in subscription types that\
        \ the user has opted-in to receiving.\n"
      operationId: listSubscriptionsForAContact
      parameters:
      - description: The unique identifier for the contact which is given by Intercom
        example: 63a07ddf05a32042dffac965
        in: path
        name: contact_id
        required: true
        schema:
          type: string
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      responses:
        '200':
          content:
            application/json:
              examples:
                Successful:
                  value:
                    data:
                    - consent_type: opt_out
                      content_types:
                      - email
                      default_translation:
                        description: Lorem ipsum dolor sit amet
                        locale: en
                        name: Newsletters
                      id: '428825'
                      state: live
                      translations:
                      - description: Lorem ipsum dolor sit amet
                        locale: en
                        name: Newsletters
                      type: subscription
                    - consent_type: opt_in
                      content_types:
                      - sms_message
                      default_translation:
                        description: Lorem ipsum dolor sit amet
                        locale: en
                        name: Newsletters
                      id: '428827'
                      state: live
                      translations:
                      - description: Lorem ipsum dolor sit amet
                        locale: en
                        name: Newsletters
                      type: subscription
                    type: list
              schema:
                oneOf:
                - $ref: '#/components/schemas/subscription_type_list'
                - type: object
          description: Successful
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: fdbaac8d-a9fe-40ec-92ab-3cf335775146
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
        '404':
          content:
            application/json:
              examples:
                Contact not found:
                  value:
                    errors:
                    - code: not_found
                      message: User Not Found
                    request_id: 5f1c2d8e-3409-446a-afa1-6a218136f0a0
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Contact not found
      summary: List subscriptions for a contact
      tags:
      - Contacts
      - Subscription Types
    post:
      description: "You can add a specific subscription to a contact. In Intercom,\
        \ we have two different subscription types based on user consent - opt-out\
        \ and opt-in:\n\n  1.Attaching a contact to an opt-out subscription type will\
        \ opt that user out from receiving messages related to that subscription type.\n\
        \n  2.Attaching a contact to an opt-in subscription type will opt that user\
        \ in to receiving messages related to that subscription type.\n\nThis will\
        \ return a subscription type model for the subscription type that was added\
        \ to the contact.\n"
      operationId: attachSubscriptionTypeToContact
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - description: The unique identifier for the contact which is given by Intercom
        example: 63a07ddf05a32042dffac965
        in: path
        name: contact_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            examples:
              contact_not_found:
                summary: Contact not found
                value:
                  consent_type: opt_in
                  id: 428844
              resource_not_found:
                summary: Resource not found
                value:
                  consent_type: opt_in
                  id: invalid_id
              successful:
                summary: Successful
                value:
                  consent_type: opt_in
                  id: 428840
            schema:
              properties:
                consent_type:
                  description: The consent_type of a subscription, opt_out or opt_in.
                  example: opt_in
                  type: string
                id:
                  description: The unique identifier for the subscription which is
                    given by Intercom
                  example: '37846'
                  type: string
              required:
              - id
              - consent_type
              type: object
      responses:
        '200':
          content:
            application/json:
              examples:
                Successful:
                  value:
                    consent_type: opt_in
                    content_types:
                    - sms_message
                    default_translation:
                      description: Lorem ipsum dolor sit amet
                      locale: en
                      name: Newsletters
                    id: '428840'
                    state: live
                    translations:
                    - description: Lorem ipsum dolor sit amet
                      locale: en
                      name: Newsletters
                    type: subscription
              schema:
                oneOf:
                - $ref: '#/components/schemas/subscription_type'
                - type: object
          description: Successful
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: 2572dae6-1f1d-44f6-b3d1-73c1dba1fb3d
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
        '404':
          content:
            application/json:
              examples:
                Contact not found:
                  value:
                    errors:
                    - code: not_found
                      message: User Not Found
                    request_id: edc67c53-1b44-4774-b691-c46131682917
                    type: error.list
                Resource not found:
                  value:
                    errors:
                    - code: not_found
                      message: Resource Not Found
                    request_id: 7611a181-d144-4f62-8ffb-0e3535b11a5e
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Resource not found
      summary: Add subscription to a contact
      tags:
      - Subscription Types
      - Contacts
  /contacts/{contact_id}/subscriptions/{id}:
    delete:
      description: You can remove a specific subscription from a contact. This will
        return a subscription type model for the subscription type that was removed
        from the contact.
      operationId: detachSubscriptionTypeToContact
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - description: The unique identifier for the contact which is given by Intercom
        example: 63a07ddf05a32042dffac965
        in: path
        name: contact_id
        required: true
        schema:
          type: string
      - description: The unique identifier for the subscription type which is given
          by Intercom
        example: '37846'
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                Successful:
                  value:
                    consent_type: opt_in
                    content_types:
                    - sms_message
                    default_translation:
                      description: Lorem ipsum dolor sit amet
                      locale: en
                      name: Newsletters
                    id: '428856'
                    state: live
                    translations:
                    - description: Lorem ipsum dolor sit amet
                      locale: en
                      name: Newsletters
                    type: subscription
              schema:
                oneOf:
                - $ref: '#/components/schemas/subscription_type'
                - type: object
          description: Successful
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: 556da63f-7554-4a13-8fa0-e5f93dabd0a4
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
        '404':
          content:
            application/json:
              examples:
                Contact not found:
                  value:
                    errors:
                    - code: not_found
                      message: User Not Found
                    request_id: 58702349-7ddb-48f0-b3e3-59e89b580524
                    type: error.list
                Resource not found:
                  value:
                    errors:
                    - code: not_found
                      message: Resource Not Found
                    request_id: 092dfc56-f525-4b31-9995-fced94a187b1
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Resource not found
      summary: Remove subscription from a contact
      tags:
      - Subscription Types
      - Contacts
  /contacts/{contact_id}/tags:
    get:
      description: You can fetch a list of all tags that are attached to a specific
        contact.
      operationId: listTagsForAContact
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - description: The unique identifier for the contact which is given by Intercom
        example: 63a07ddf05a32042dffac965
        in: path
        name: contact_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                successful:
                  value:
                    data:
                    - id: '309765'
                      name: Manual tag
                      type: tag
                    type: list
              schema:
                oneOf:
                - $ref: '#/components/schemas/tag_list'
                - type: object
          description: successful
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: 15db8f69-41bd-4c6e-90b7-0abf9edaa0d3
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
        '404':
          content:
            application/json:
              examples:
                Contact not found:
                  value:
                    errors:
                    - code: not_found
                      message: User Not Found
                    request_id: 657dc6f3-b6a4-4c7a-8337-faf149bafa29
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Contact not found
      summary: List tags attached to a contact
      tags:
      - Contacts
      - Tags
    post:
      description: You can tag a specific contact. This will return a tag object for
        the tag that was added to the contact.
      operationId: attachTagToContact
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - description: The unique identifier for the contact which is given by Intercom
        example: 63a07ddf05a32042dffac965
        in: path
        name: contact_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            examples:
              contact_not_found:
                summary: Contact not found
                value:
                  id: 309767
              successful:
                summary: successful
                value:
                  id: 309766
              tag_not_found:
                summary: Tag not found
                value:
                  id: '123'
            schema:
              properties:
                id:
                  description: The unique identifier for the tag which is given by
                    Intercom
                  example: '7522907'
                  type: string
              required:
              - id
              type: object
      responses:
        '200':
          content:
            application/json:
              examples:
                successful:
                  value:
                    id: '309766'
                    name: Manual tag
                    type: tag
              schema:
                oneOf:
                - $ref: '#/components/schemas/tag'
                - type: object
          description: successful
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: 1991c184-65a7-4c55-b4f7-f962f7f25260
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
        '404':
          content:
            application/json:
              examples:
                Contact not found:
                  value:
                    errors:
                    - code: not_found
                      message: User Not Found
                    request_id: dcf770e9-7d2f-44fb-a77f-fe958800e0fe
                    type: error.list
                Tag not found:
                  value:
                    errors:
                    - code: not_found
                      message: Resource Not Found
                    request_id: d38b390c-571b-4c49-9b74-f169066ea365
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Tag not found
      summary: Add tag to a contact
      tags:
      - Tags
      - Contacts
  /contacts/{contact_id}/tags/{id}:
    delete:
      description: You can remove tag from a specific contact. This will return a
        tag object for the tag that was removed from the contact.
      operationId: detachTagFromContact
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - description: The unique identifier for the contact which is given by Intercom
        example: 63a07ddf05a32042dffac965
        in: path
        name: contact_id
        required: true
        schema:
          type: string
      - description: The unique identifier for the tag which is given by Intercom
        example: '7522907'
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                successful:
                  value:
                    id: '309769'
                    name: Manual tag
                    type: tag
              schema:
                oneOf:
                - $ref: '#/components/schemas/tag'
                - type: object
          description: successful
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: 9a3457e7-a7aa-4c96-bec7-40e206ae8734
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
        '404':
          content:
            application/json:
              examples:
                Contact not found:
                  value:
                    errors:
                    - code: not_found
                      message: User Not Found
                    request_id: 03f1ab85-58c8-4e41-9ae3-d6f0e91b717d
                    type: error.list
                Tag not found:
                  value:
                    errors:
                    - code: not_found
                      message: Resource Not Found
                    request_id: def1c35a-8da5-452f-a02b-a56fea193599
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Tag not found
      summary: Remove tag from a contact
      tags:
      - Tags
      - Contacts
  /contacts/{id}:
    delete:
      description: You can delete a single contact.
      operationId: DeleteContact
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - description: id
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                successful:
                  value:
                    deleted: true
                    id: 645e120605a7e7570bfa4be6
                    object: contact
              schema:
                oneOf:
                - $ref: '#/components/schemas/contact'
                - type: object
          description: successful
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: 59a2ff95-d0b2-4fcb-8f18-60add020c64b
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
      summary: Delete a contact
      tags:
      - Contacts
    get:
      description: You can fetch the details of a single contact.
      operationId: ShowContact
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - description: id
        example: 63a07ddf05a32042dffac965
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                successful:
                  value:
                    android_app_name: null
                    android_app_version: null
                    android_device: null
                    android_last_seen_at: null
                    android_os_version: null
                    android_sdk_version: null
                    avatar: null
                    browser: null
                    browser_language: null
                    browser_version: null
                    companies:
                      data: []
                      has_more: false
                      total_count: 0
                      type: list
                      url: /contacts/645e120405a7e7570bfa4be5/companies
                    created_at: 1683886596
                    custom_attributes: {}
                    email: joe@bloggs.com
                    external_id: '70'
                    has_hard_bounced: false
                    id: 645e120405a7e7570bfa4be5
                    ios_app_name: null
                    ios_app_version: null
                    ios_device: null
                    ios_last_seen_at: null
                    ios_os_version: null
                    ios_sdk_version: null
                    language_override: null
                    last_contacted_at: null
                    last_email_clicked_at: null
                    last_email_opened_at: null
                    last_replied_at: null
                    last_seen_at: null
                    location:
                      city: null
                      continent_code: null
                      country: null
                      country_code: null
                      region: null
                      type: location
                    marked_email_as_spam: false
                    name: Joe Bloggs
                    notes:
                      data: []
                      has_more: false
                      total_count: 0
                      type: list
                      url: /contacts/645e120405a7e7570bfa4be5/notes
                    opted_in_subscription_types:
                      data: []
                      has_more: false
                      total_count: 0
                      type: list
                      url: /contacts/645e120405a7e7570bfa4be5/subscriptions
                    opted_out_subscription_types:
                      data: []
                      has_more: false
                      total_count: 0
                      type: list
                      url: /contacts/645e120405a7e7570bfa4be5/subscriptions
                    os: null
                    owner_id: null
                    phone: null
                    referrer: null
                    role: user
                    signed_up_at: 1683886596
                    social_profiles:
                      data: []
                      type: list
                    tags:
                      data: []
                      has_more: false
                      total_count: 0
                      type: list
                      url: /contacts/645e120405a7e7570bfa4be5/tags
                    type: contact
                    unsubscribed_from_emails: false
                    updated_at: 1683886596
                    utm_campaign: null
                    utm_content: null
                    utm_medium: null
                    utm_source: null
                    utm_term: null
                    workspace_id: this_is_an_id243_that_should_be_at_least_
              schema:
                oneOf:
                - $ref: '#/components/schemas/contact'
                - type: object
          description: successful
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: 87d869b3-8208-4bbb-aec5-ce4bca90a0a1
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
      summary: Get a contact
      tags:
      - Contacts
    put:
      description: You can update an existing contact (ie. user or lead).
      operationId: UpdateContact
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - description: id
        example: 63a07ddf05a32042dffac965
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            examples:
              successful:
                summary: successful
                value:
                  email: joebloggs@intercom.io
                  name: joe bloggs
            schema:
              oneOf:
              - $ref: '#/components/schemas/update_contact_request'
      responses:
        '200':
          content:
            application/json:
              examples:
                successful:
                  value:
                    android_app_name: null
                    android_app_version: null
                    android_device: null
                    android_last_seen_at: null
                    android_os_version: null
                    android_sdk_version: null
                    avatar: null
                    browser: null
                    browser_language: null
                    browser_version: null
                    companies:
                      data: []
                      has_more: false
                      total_count: 0
                      type: list
                      url: /contacts/645e120205a7e7570bfa4be4/companies
                    created_at: 1683886594
                    custom_attributes: {}
                    email: joebloggs@intercom.io
                    external_id: '70'
                    has_hard_bounced: false
                    id: 645e120205a7e7570bfa4be4
                    ios_app_name: null
                    ios_app_version: null
                    ios_device: null
                    ios_last_seen_at: null
                    ios_os_version: null
                    ios_sdk_version: null
                    language_override: null
                    last_contacted_at: null
                    last_email_clicked_at: null
                    last_email_opened_at: null
                    last_replied_at: null
                    last_seen_at: null
                    location:
                      city: null
                      continent_code: null
                      country: null
                      country_code: null
                      region: null
                      type: location
                    marked_email_as_spam: false
                    name: joe bloggs
                    notes:
                      data: []
                      has_more: false
                      total_count: 0
                      type: list
                      url: /contacts/645e120205a7e7570bfa4be4/notes
                    opted_in_subscription_types:
                      data: []
                      has_more: false
                      total_count: 0
                      type: list
                      url: /contacts/645e120205a7e7570bfa4be4/subscriptions
                    opted_out_subscription_types:
                      data: []
                      has_more: false
                      total_count: 0
                      type: list
                      url: /contacts/645e120205a7e7570bfa4be4/subscriptions
                    os: null
                    owner_id: null
                    phone: null
                    referrer: null
                    role: user
                    signed_up_at: 1683886594
                    social_profiles:
                      data: []
                      type: list
                    tags:
                      data: []
                      has_more: false
                      total_count: 0
                      type: list
                      url: /contacts/645e120205a7e7570bfa4be4/tags
                    type: contact
                    unsubscribed_from_emails: false
                    updated_at: 1683886594
                    utm_campaign: null
                    utm_content: null
                    utm_medium: null
                    utm_source: null
                    utm_term: null
                    workspace_id: this_is_an_id239_that_should_be_at_least_
              schema:
                oneOf:
                - $ref: '#/components/schemas/contact'
                - type: object
          description: successful
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: c56bfc4e-533d-43cf-8fc4-1fc589bf716c
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
      summary: Update a contact
      tags:
      - Contacts
  /contacts/{id}/archive:
    post:
      description: You can archive a single contact.
      operationId: ArchiveContact
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - description: id
        example: 63a07ddf05a32042dffac965
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                successful:
                  value:
                    archived: true
                    id: 645e121105a7e7570bfa4bee
                    object: contact
              schema:
                oneOf:
                - $ref: '#/components/schemas/contact'
                - type: object
          description: successful
      summary: Archive contact
      tags:
      - Contacts
  /contacts/{id}/companies:
    post:
      description: You can attach a company to a single contact.
      operationId: attachContactToACompany
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - description: The unique identifier for the contact which is given by Intercom
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            examples:
              company_not_found:
                summary: Company Not Found
                value:
                  id: 645e11d205a7e7570bfa4b8f
              successful:
                summary: Successful
                value:
                  id: 645e11d105a7e7570bfa4b8b
            schema:
              properties:
                id:
                  description: The unique identifier for the company which is given
                    by Intercom
                  example: 58a430d35458202d41b1e65b
                  type: string
              required:
              - id
              type: object
      responses:
        '200':
          content:
            application/json:
              examples:
                Successful:
                  value:
                    app_id: this_is_an_id159_that_should_be_at_least_
                    company_id: '1'
                    created_at: 1683886545
                    custom_attributes: {}
                    id: 645e11d105a7e7570bfa4b8b
                    monthly_spend: 0
                    name: company9
                    plan: {}
                    remote_created_at: 1683886545
                    segments:
                      segments: []
                      type: segment.list
                    session_count: 0
                    tags:
                      tags: []
                      type: tag.list
                    type: company
                    updated_at: 1683886545
                    user_count: 1
              schema:
                oneOf:
                - $ref: '#/components/schemas/company'
                - type: object
          description: Successful
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: 70c82dcf-257a-45b2-9961-66601fcf3f51
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
        '404':
          content:
            application/json:
              examples:
                Company Not Found:
                  value:
                    errors:
                    - code: not_found
                      message: User Not Found
                    request_id: d8a57a9c-ef66-4e31-9302-326dc660fba6
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Company Not Found
      summary: Attach a Contact to a Company
      tags:
      - Companies
      - Contacts
  /contacts/{id}/notes:
    get:
      description: You can fetch a list of notes that are associated to a contact.
      operationId: listNotes
      parameters:
      - description: The unique identifier of a contact.
        in: path
        name: id
        required: true
        schema:
          type: integer
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      responses:
        '200':
          content:
            application/json:
              examples:
                Successful response:
                  value:
                    data:
                    - author:
                        away_mode_enabled: false
                        away_mode_reassign: false
                        email: admin117@email.com
                        id: '991266331'
                        name: Ciaran117 Lee
                        type: admin
                      body: <p>This is a note.</p>
                      contact:
                        id: 645e11eb05a7e7570bfa4bc8
                        type: contact
                      created_at: 1683281771
                      id: '393512'
                      type: note
                    - author:
                        away_mode_enabled: false
                        away_mode_reassign: false
                        email: admin117@email.com
                        id: '991266331'
                        name: Ciaran117 Lee
                        type: admin
                      body: <p>This is a note.</p>
                      contact:
                        id: 645e11eb05a7e7570bfa4bc8
                        type: contact
                      created_at: 1683195371
                      id: '393511'
                      type: note
                    - author:
                        away_mode_enabled: false
                        away_mode_reassign: false
                        email: admin117@email.com
                        id: '991266331'
                        name: Ciaran117 Lee
                        type: admin
                      body: <p>This is a note.</p>
                      contact:
                        id: 645e11eb05a7e7570bfa4bc8
                        type: contact
                      created_at: 1683195371
                      id: '393510'
                      type: note
                    pages:
                      next: null
                      page: 1
                      per_page: 50
                      total_pages: 1
                      type: pages
                    total_count: 3
                    type: list
              schema:
                oneOf:
                - $ref: '#/components/schemas/note_list'
                - type: object
          description: Successful response
        '404':
          content:
            application/json:
              examples:
                Contact not found:
                  value:
                    errors:
                    - code: not_found
                      message: User Not Found
                    request_id: f51676ca-e4ae-4e3c-aeb0-d411cb359ca0
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Contact not found
      summary: List all notes
      tags:
      - Notes
      - Contacts
    post:
      description: You can add a note to a single contact.
      operationId: createNote
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - description: The unique identifier of a given contact.
        example: '123'
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            examples:
              admin_not_found:
                summary: Admin not found
                value:
                  admin_id: 123
                  body: Hello
                  contact_id: 645e11ee05a7e7570bfa4bcb
              contact_not_found:
                summary: Contact not found
                value:
                  admin_id: 991266335
                  body: Hello
                  contact_id: 123
              successful_response:
                summary: Successful response
                value:
                  admin_id: 991266333
                  body: Hello
                  contact_id: 645e11ed05a7e7570bfa4bca
            schema:
              properties:
                admin_id:
                  description: The unique identifier of a given admin.
                  example: '123'
                  type: string
                body:
                  description: The text of the note.
                  example: New note
                  type: string
                contact_id:
                  description: The unique identifier of a given contact.
                  example: '123'
                  type: string
              required:
              - body
              type: object
      responses:
        '200':
          content:
            application/json:
              examples:
                Successful response:
                  value:
                    author:
                      away_mode_enabled: false
                      away_mode_reassign: false
                      email: admin119@email.com
                      id: '991266333'
                      name: Ciaran119 Lee
                      type: admin
                    body: <p>Hello</p>
                    contact:
                      id: 645e11ed05a7e7570bfa4bca
                      type: contact
                    created_at: 1683886573
                    id: '393517'
                    type: note
              schema:
                oneOf:
                - $ref: '#/components/schemas/note'
                - type: object
          description: Successful response
        '404':
          content:
            application/json:
              examples:
                Admin not found:
                  value:
                    errors:
                    - code: not_found
                      message: Resource Not Found
                    request_id: d7b0c684-e441-4690-ba35-3ad0597fba16
                    type: error.list
                Contact not found:
                  value:
                    errors:
                    - code: not_found
                      message: User Not Found
                    request_id: 8fe7b521-895b-4cdf-8289-5f34e2997eb2
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Contact not found
      summary: Create a note
      tags:
      - Notes
      - Contacts
  /contacts/{id}/unarchive:
    post:
      description: You can unarchive a single contact.
      operationId: UnarchiveContact
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - description: id
        example: 63a07ddf05a32042dffac965
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                successful:
                  value:
                    archived: false
                    id: 645e121305a7e7570bfa4bef
                    object: contact
              schema:
                oneOf:
                - $ref: '#/components/schemas/contact'
                - type: object
          description: successful
      summary: Unarchive contact
      tags:
      - Contacts
  /conversations:
    get:
      description: 'You can fetch a list of all conversations.


        You can optionally request the result page size and the cursor to start after
        to fetch the result

        '
      operationId: listConversations
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - description: How many results per page
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          maximum: 150
          type: integer
      - description: String used to get the next page of conversations.
        in: query
        name: starting_after
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                successful:
                  value:
                    conversations:
                    - admin_assignee_id: null
                      contacts:
                        contacts:
                        - id: 645e121c05a7e7570bfa4bf3
                          type: contact
                        type: contact.list
                      conversation_rating: null
                      created_at: 1683886620
                      custom_attributes: {}
                      first_contact_reply: null
                      id: '695205'
                      open: false
                      priority: not_priority
                      read: false
                      sla_applied: null
                      snoozed_until: null
                      source:
                        attachments: []
                        author:
                          email: admin159@email.com
                          id: '991266376'
                          name: Ciaran159 Lee
                          type: admin
                        body: <p>this is the message body</p>
                        delivered_as: admin_initiated
                        id: '403918065'
                        redacted: false
                        subject: ''
                        type: conversation
                        url: null
                      state: closed
                      statistics: null
                      tags:
                        tags: []
                        type: tag.list
                      team_assignee_id: null
                      teammates: null
                      ticket: null
                      title: null
                      topics: {}
                      type: conversation
                      updated_at: 1683886620
                      waiting_since: null
                    pages:
                      page: 1
                      per_page: 20
                      total_pages: 1
                      type: pages
                    total_count: 1
                    type: conversation.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/paginated_response'
                - type: object
          description: successful
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: 18481518-7283-4766-b459-dc58639a0715
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
        '403':
          content:
            application/json:
              examples:
                API plan restricted:
                  value:
                    errors:
                    - code: api_plan_restricted
                      message: Active subscription needed.
                    request_id: 92f2ef7e-a5c8-4216-afbe-44b029ffc2c2
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: API plan restricted
      summary: List all conversations
      tags:
      - Conversations
    post:
      description: "You can create a conversation that has been initiated by a contact\
        \ (ie. user or lead).\nThe conversation can be an in-app message only.\n\n\
        > \U0001F4D8 Sending for visitors\n>\n> You can also send a message from a\
        \ visitor by specifying their `user_id` or `id` value in the `from` field,\
        \ along with a `type` field value of `contact`.\n> This visitor will be automatically\
        \ converted to a contact with a lead role once the conversation is created.\n\
        \nThis will return the Message model that has been created.\n\n"
      operationId: createConversation
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      requestBody:
        content:
          application/json:
            examples:
              contact_not_found:
                summary: Contact Not Found
                value:
                  body: Hello there
                  from:
                    id: 123_doesnt_exist
                    type: user
              conversation_created:
                summary: conversation created
                value:
                  body: Hello there
                  from:
                    id: 645e123805a7e7570bfa4c08
                    type: user
            schema:
              $ref: '#/components/schemas/create_conversation_request'
      responses:
        '200':
          content:
            application/json:
              examples:
                conversation created:
                  value:
                    body: Hello there
                    conversation_id: '695230'
                    created_at: 1683886650
                    id: '403918075'
                    message_type: inapp
                    type: user_message
              schema:
                oneOf:
                - $ref: '#/components/schemas/message'
                - type: object
          description: conversation created
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: 7c088f08-b2fa-4d1b-b3bf-d78be1331c3a
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
        '403':
          content:
            application/json:
              examples:
                API plan restricted:
                  value:
                    errors:
                    - code: api_plan_restricted
                      message: Active subscription needed.
                    request_id: 24f579d3-ed3f-4048-9bcf-15e8361a5077
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: API plan restricted
        '404':
          content:
            application/json:
              examples:
                Contact Not Found:
                  value:
                    errors:
                    - code: not_found
                      message: User Not Found
                    request_id: bdacdf35-e7a5-4e07-a816-b1172686205f
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Contact Not Found
      summary: Creates a conversation
      tags:
      - Conversations
  /conversations/redact:
    post:
      description: "You can redact a conversation part or the source message of a\
        \ conversation (as seen in the source object).\n\n> \U0001F4D8 Which parts\
        \ and source messages can I redact?\n>\n> If you are redacting a conversation\
        \ part, it must have a `body`.\n> If you are redacting a source message, it\
        \ must have been created by a contact.\n> We will return a `conversation_part_not_redactable`\
        \ error if these criteria are not met.\n\n"
      operationId: redactConversation
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      requestBody:
        content:
          application/json:
            examples:
              not_found:
                summary: Not found
                value:
                  conversation_id: really_123_doesnt_exist
                  conversation_part_id: really_123_doesnt_exist
                  type: conversation_part
              redact_a_conversation_part:
                summary: Redact a conversation part
                value:
                  conversation_id: 695327
                  conversation_part_id: 138255
                  type: conversation_part
            schema:
              $ref: '#/components/schemas/redact_conversation_request'
      responses:
        '200':
          content:
            application/json:
              examples:
                Redact a conversation part:
                  value:
                    admin_assignee_id: null
                    contacts:
                      contacts:
                      - id: 645e12dc05a7e7570bfa4c62
                        type: contact
                      type: contact.list
                    conversation_parts:
                      conversation_parts:
                      - assigned_to: null
                        attachments: []
                        author:
                          email: joe@bloggs.com
                          id: 645e12dc05a7e7570bfa4c62
                          name: Joe Bloggs
                          type: user
                        body: <p><i>This message was deleted</i></p>
                        created_at: 1683886813
                        external_id: null
                        id: '138255'
                        notified_at: 1683886813
                        part_type: comment
                        redacted: true
                        type: conversation_part
                        updated_at: 1683886815
                      total_count: 1
                      type: conversation_part.list
                    conversation_rating: null
                    created_at: 1683886812
                    custom_attributes: {}
                    first_contact_reply:
                      created_at: 1683886813
                      type: conversation
                      url: null
                    id: '695327'
                    open: true
                    priority: not_priority
                    read: true
                    sla_applied: null
                    snoozed_until: null
                    source:
                      attachments: []
                      author:
                        email: admin219@email.com
                        id: '991266480'
                        name: Ciaran219 Lee
                        type: admin
                      body: <p>this is the message body</p>
                      delivered_as: admin_initiated
                      id: '403918132'
                      redacted: false
                      subject: ''
                      type: conversation
                      url: null
                    state: open
                    statistics: null
                    tags:
                      tags: []
                      type: tag.list
                    team_assignee_id: null
                    teammates: null
                    ticket: null
                    title: null
                    topics: {}
                    type: conversation
                    updated_at: 1683886815
                    waiting_since: 1683886813
              schema:
                oneOf:
                - $ref: '#/components/schemas/conversation'
                - type: object
          description: Redact a conversation part
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: 7a3126e7-9b13-4684-b54b-1de423a37ba8
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
        '404':
          content:
            application/json:
              examples:
                Not found:
                  value:
                    errors:
                    - code: conversation_part_or_message_not_found
                      message: Conversation part or message not found
                    request_id: 8b06690e-69e9-4039-b46d-737bf16f825e
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Not found
      summary: Redact a conversation part
      tags:
      - Conversations
  /conversations/search:
    post:
      description: "You can search for multiple conversations by the value of their\
        \ attributes in order to fetch exactly which ones you want.\n\nTo search for\
        \ conversations, you need to send a POST request to https://api.intercom.io/conversations/search.\
        \ This will accept a query object in the body which will define your filters\
        \ in order to search for conversations.\n\n> \U0001F6A7 Nesting & Limitations\n\
        >\n> You can nest these filters in order to get even more granular insights\
        \ that pinpoint exactly what you need. Example: (1 OR 2) AND (3 OR 4).\n>\
        \ There are some limitations to the amount of multiple's there can be:\n>\
        \ - There's a limit of max 2 nested filters\n> - There's a limit of max 15\
        \ filters for each AND or OR group\n\n### Accepted Fields\n\nMost keys listed\
        \ as part of the The conversation model is searchable, whether writeable or\
        \ not. The value you search for has to match the accepted type, otherwise\
        \ the query will fail (ie. as `created_at` accepts a date, the `value` cannot\
        \ be a string such as `\"foorbar\"`).\n\n| Field                         \
        \            | Type                                                      \
        \                               |\n| :----------------------------------------\
        \ | :---------------------------------------------------------------------------------------\
        \ |\n| id                                        | String                \
        \                                                                   |\n| created_at\
        \                                | Date (UNIX timestamp)                 \
        \                                                   |\n| updated_at      \
        \                          | Date (UNIX timestamp)                       \
        \                                             |\n| source.type           \
        \                    | String                                            \
        \                                       |\n| source.id                   \
        \              | String                                                  \
        \                                 |\n| source.delivered_as               \
        \        | String                                                        \
        \                           |\n| source.subject                          \
        \  | String                                                              \
        \                     |\n| source.body                               | String\
        \                                                                        \
        \           |\n| source.author.id                          | String      \
        \                                                                        \
        \     |\n| source.author.type                        | String            \
        \                                                                       |\n\
        | source.author.name                        | String                     \
        \                                                              |\n| source.author.email\
        \                       | String                                         \
        \                                          |\n| source.url               \
        \                 | String                                               \
        \                                    |\n| contact_ids                    \
        \           | String                                                     \
        \                              |\n| teammate_ids                         \
        \     | String                                                           \
        \                        |\n| admin_assignee_id                         |\
        \ String                                                                 \
        \                  |\n| team_assignee_id                          | String\
        \                                                                        \
        \           |\n| channel_initiated                         | String<br>Accepted\
        \ fields are `conversation`, `push`, `facebook`, `twitter` and `email`. |\n\
        | open                                      | Boolean                    \
        \                                                              |\n| read \
        \                                     | Boolean                          \
        \                                                        |\n| state      \
        \                               | String                                 \
        \                                                  |\n| waiting_since    \
        \                         | Date (UNIX timestamp)                        \
        \                                            |\n| snoozed_until          \
        \                   | Date (UNIX timestamp)                              \
        \                                      |\n| tag_ids                      \
        \             | String                                                   \
        \                                |\n| priority                           \
        \       | String                                                         \
        \                          |\n| statistics.time_to_assignment            \
        \ | Integer                                                              \
        \                    |\n| statistics.time_to_admin_reply            | Integer\
        \                                                                        \
        \          |\n| statistics.time_to_first_close            | Integer      \
        \                                                                        \
        \    |\n| statistics.time_to_last_close             | Integer            \
        \                                                                      |\n\
        | statistics.median_time_to_reply           | Integer                    \
        \                                                              |\n| statistics.first_contact_reply_at\
        \         | Date (UNIX timestamp)                                        \
        \                            |\n| statistics.first_assignment_at         \
        \   | Date (UNIX timestamp)                                              \
        \                      |\n| statistics.first_admin_reply_at           | Date\
        \ (UNIX timestamp)                                                       \
        \             |\n| statistics.first_close_at                 | Date (UNIX\
        \ timestamp)                                                             \
        \       |\n| statistics.last_assignment_at             | Date (UNIX timestamp)\
        \                                                                    |\n|\
        \ statistics.last_assignment_admin_reply_at | Date (UNIX timestamp)      \
        \                                                              |\n| statistics.last_contact_reply_at\
        \          | Date (UNIX timestamp)                                       \
        \                             |\n| statistics.last_admin_reply_at        \
        \    | Date (UNIX timestamp)                                             \
        \                       |\n| statistics.last_close_at                  | Date\
        \ (UNIX timestamp)                                                       \
        \             |\n| statistics.last_closed_by_id              | String    \
        \                                                                        \
        \       |\n| statistics.count_reopens                  | Integer         \
        \                                                                        \
        \ |\n| statistics.count_assignments              | Integer               \
        \                                                                   |\n| statistics.count_conversation_parts\
        \       | Integer                                                        \
        \                          |\n| conversation_rating.requested_at         \
        \ | Date (UNIX timestamp)                                                \
        \                    |\n| conversation_rating.replied_at            | Date\
        \ (UNIX timestamp)                                                       \
        \             |\n| conversation_rating.score                 | Integer   \
        \                                                                        \
        \       |\n| conversation_rating.remark                | String          \
        \                                                                        \
        \ |\n| conversation_rating.contact_id            | String                \
        \                                                                   |\n| conversation_rating.admin_d\
        \               | String                                                 \
        \                                  |\n\n"
      operationId: searchConversations
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      requestBody:
        content:
          application/json:
            examples:
              successful:
                summary: successful
                value:
                  query:
                    operator: AND
                    value:
                    - field: id
                      operator: '='
                      value: '695242'
                    - operator: OR
                      value:
                      - field: id
                        operator: '='
                        value: '695242'
                      - field: id
                        operator: '='
                        value: '695242'
            schema:
              $ref: '#/components/schemas/search_request'
      responses:
        '200':
          content:
            application/json:
              examples:
                successful:
                  value:
                    conversations:
                    - admin_assignee_id: null
                      contacts:
                        contacts:
                        - id: 645e125905a7e7570bfa4c14
                          type: contact
                        type: contact.list
                      conversation_rating: null
                      created_at: 1683886681
                      custom_attributes: {}
                      first_contact_reply: null
                      id: '695242'
                      open: false
                      priority: not_priority
                      read: false
                      sla_applied: null
                      snoozed_until: null
                      source:
                        attachments: []
                        author:
                          email: admin190@email.com
                          id: '991266422'
                          name: Ciaran190 Lee
                          type: admin
                        body: <p>this is the message body</p>
                        delivered_as: admin_initiated
                        id: '403918087'
                        redacted: false
                        subject: ''
                        type: conversation
                        url: null
                      state: closed
                      statistics: null
                      tags:
                        tags: []
                        type: tag.list
                      team_assignee_id: null
                      teammates: null
                      ticket: null
                      title: null
                      topics: {}
                      type: conversation
                      updated_at: 1683886681
                      waiting_since: null
                    pages:
                      page: 1
                      per_page: 150
                      total_pages: 1
                      type: pages
                    total_count: 1
                    type: conversation.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/conversation_list'
                - type: object
          description: successful
      summary: Search conversations
      tags:
      - Conversations
  /conversations/{conversation_id}/customers/{contact_id}:
    delete:
      description: "You can add participants who are contacts to a conversation, on\
        \ behalf of either another contact or an admin.\n\n> \U0001F6A7 Note about\
        \ contacts without an email\n>\n> If you add a contact via the email parameter\
        \ and there is no user/lead found on that workspace with he given email, then\
        \ we will create a new contact with `role` set to `lead`.\n\n"
      operationId: detachContactFromConversation
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - description: The identifier for the conversation as given by Intercom.
        example: '123'
        in: path
        name: conversation_id
        required: true
        schema:
          type: string
      - description: The identifier for the contact as given by Intercom.
        example: '123'
        in: path
        name: contact_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            examples:
              contact_not_found:
                summary: Contact not found
                value:
                  admin_id: 991266472
                  customer:
                    intercom_user_id: 645e12b705a7e7570bfa4c46
              conversation_not_found:
                summary: Conversation not found
                value:
                  admin_id: 991266470
                  customer:
                    intercom_user_id: 645e12ae05a7e7570bfa4c3f
              detach_a_contact_from_a_group_conversation:
                summary: Detach a contact from a group conversation
                value:
                  admin_id: 991266468
                  customer:
                    intercom_user_id: 645e12a405a7e7570bfa4c37
              last_customer:
                summary: Last customer
                value:
                  admin_id: 991266474
                  customer:
                    intercom_user_id: 645e12c005a7e7570bfa4c4d
            schema:
              $ref: '#/components/schemas/detach_contact_from_conversation_request'
      responses:
        '200':
          content:
            application/json:
              examples:
                Detach a contact from a group conversation:
                  value:
                    customers:
                    - id: 645e12ac05a7e7570bfa4c3e
                      type: user
              schema:
                oneOf:
                - $ref: '#/components/schemas/conversation'
                - type: object
          description: Detach a contact from a group conversation
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: a4231ce1-acca-4045-bdc2-32e381d1f6b5
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
        '403':
          content:
            application/json:
              examples:
                API plan restricted:
                  value:
                    errors:
                    - code: api_plan_restricted
                      message: Active subscription needed.
                    request_id: 12de62fb-81c4-4174-bf08-e663f7b4d1c2
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: API plan restricted
        '404':
          content:
            application/json:
              examples:
                Contact not found:
                  value:
                    errors:
                    - code: not_found
                      message: User Not Found
                    request_id: 0f2776c0-5967-409d-bb4b-a87417c866cf
                    type: error.list
                Conversation not found:
                  value:
                    errors:
                    - code: not_found
                      message: Resource Not Found
                    request_id: 65867830-21fc-4155-be41-df3e7227b8f8
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Contact not found
        '422':
          content:
            application/json:
              examples:
                Last customer:
                  value:
                    errors:
                    - code: parameter_invalid
                      message: Removing the last customer is not allowed
                    request_id: 8ae5efec-1c7a-4c6e-a501-9921b48cc3b6
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Last customer
      summary: Detach a contact from a group conversation
      tags:
      - Conversations
  /conversations/{conversation_id}/tags:
    post:
      description: You can tag a specific conversation. This will return a tag object
        for the tag that was added to the conversation.
      operationId: attachTagToConversation
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - description: conversation_id
        example: '64619700005694'
        in: path
        name: conversation_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            examples:
              conversation_not_found:
                summary: Conversation not found
                value:
                  admin_id: 991266368
                  id: 309772
              successful:
                summary: successful
                value:
                  admin_id: 991266366
                  id: 309771
            schema:
              properties:
                admin_id:
                  description: The unique identifier for the admin which is given
                    by Intercom.
                  example: '780'
                  type: string
                id:
                  description: The unique identifier for the tag which is given by
                    Intercom
                  example: '7522907'
                  type: string
              required:
              - id
              - admin_id
              type: object
      responses:
        '200':
          content:
            application/json:
              examples:
                successful:
                  value:
                    id: '309771'
                    name: Manual tag
                    type: tag
              schema:
                oneOf:
                - $ref: '#/components/schemas/tag'
                - type: object
          description: successful
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: e8eaa3e5-1483-402e-9cbe-282c63dd1240
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
        '404':
          content:
            application/json:
              examples:
                Conversation not found:
                  value:
                    errors:
                    - code: not_found
                      message: Conversation not found
                    request_id: 6588769e-5993-4765-9603-421c1161f3bd
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Conversation not found
      summary: Add tag to a conversation
      tags:
      - Tags
      - Conversations
  /conversations/{conversation_id}/tags/{id}:
    delete:
      description: You can remove tag from a specific conversation. This will return
        a tag object for the tag that was removed from the conversation.
      operationId: detachTagFromConversation
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - description: conversation_id
        example: '64619700005694'
        in: path
        name: conversation_id
        required: true
        schema:
          type: string
      - description: id
        example: '7522907'
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            examples:
              conversation_not_found:
                summary: Conversation not found
                value:
                  admin_id: 991266372
              successful:
                summary: successful
                value:
                  admin_id: 991266370
              tag_not_found:
                summary: Tag not found
                value:
                  admin_id: 991266373
            schema:
              properties:
                admin_id:
                  description: The unique identifier for the admin which is given
                    by Intercom.
                  example: '123'
                  type: string
              required:
              - admin_id
              type: object
      responses:
        '200':
          content:
            application/json:
              examples:
                successful:
                  value:
                    id: '309774'
                    name: Manual tag
                    type: tag
              schema:
                oneOf:
                - $ref: '#/components/schemas/tag'
                - type: object
          description: successful
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: 1da0ddff-2565-4594-8f8f-883aea1065db
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
        '404':
          content:
            application/json:
              examples:
                Conversation not found:
                  value:
                    errors:
                    - code: not_found
                      message: Conversation not found
                    request_id: 83208301-e71b-43ca-abbe-905523d6b039
                    type: error.list
                Tag not found:
                  value:
                    errors:
                    - code: tag_not_found
                      message: Tag not found
                    request_id: 3fb775cf-0cae-4c0d-955a-9ca612bab237
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Tag not found
      summary: Remove tag from a conversation
      tags:
      - Tags
      - Conversations
  /conversations/{id}:
    get:
      description: "\nYou can fetch the details of a single conversation.\n\nThis\
        \ will return a single Conversation model with all its conversation parts.\n\
        \n> \U0001F6A7 Hard limit of 500 parts\n>\n> The maximum number of conversation\
        \ parts that can be returned via the API is 500. If you have more than that\
        \ we will return the 500 most recent conversation parts.\n\n"
      operationId: retrieveConversation
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - description: The id of the conversation to target
        example: 123
        in: path
        name: id
        required: true
        schema:
          type: integer
      - description: Set to plaintext to retrieve conversation messages in plain text.
        example: plaintext
        in: query
        name: display_as
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                conversation found:
                  value:
                    admin_assignee_id: null
                    contacts:
                      contacts:
                      - id: 645e124305a7e7570bfa4c0c
                        type: contact
                      type: contact.list
                    conversation_parts:
                      conversation_parts: []
                      total_count: 0
                      type: conversation_part.list
                    conversation_rating: null
                    created_at: 1683886659
                    custom_attributes: {}
                    first_contact_reply: null
                    id: '695234'
                    open: false
                    priority: not_priority
                    read: false
                    sla_applied: null
                    snoozed_until: null
                    source:
                      attachments: []
                      author:
                        email: admin166@email.com
                        id: '991266390'
                        name: Ciaran166 Lee
                        type: admin
                      body: <p>this is the message body</p>
                      delivered_as: admin_initiated
                      id: '403918079'
                      redacted: false
                      subject: ''
                      type: conversation
                      url: null
                    state: closed
                    statistics: null
                    tags:
                      tags: []
                      type: tag.list
                    team_assignee_id: null
                    teammates: null
                    ticket: null
                    title: null
                    topics: {}
                    type: conversation
                    updated_at: 1683886659
                    waiting_since: null
              schema:
                oneOf:
                - $ref: '#/components/schemas/conversation'
                - type: object
          description: conversation found
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: a2385dde-397f-4061-8052-3f35666472e9
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
        '403':
          content:
            application/json:
              examples:
                API plan restricted:
                  value:
                    errors:
                    - code: api_plan_restricted
                      message: Active subscription needed.
                    request_id: f3a0d295-018b-4313-8957-2a914b2a399e
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: API plan restricted
        '404':
          content:
            application/json:
              examples:
                Not found:
                  value:
                    errors:
                    - code: not_found
                      message: Resource Not Found
                    request_id: cfa735bb-c293-4297-8830-7372dc310a87
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Not found
      summary: Retrieve a conversation
      tags:
      - Conversations
    put:
      description: "\nYou can update an existing conversation.\n\n> \U0001F4D8\n>\n\
        > If you want to update a conversation with either a reply (or actions such\
        \ as assign, unassign, open, close or snooze) then take a look at their own\
        \ sections respectively as they currently require different endpoints and\
        \ parameters.\n\n"
      operationId: updateConversation
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - description: The id of the conversation to target
        example: 123
        in: path
        name: id
        required: true
        schema:
          type: integer
      - description: Set to plaintext to retrieve conversation messages in plain text.
        example: plaintext
        in: query
        name: display_as
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            examples:
              conversation_found:
                summary: conversation found
                value:
                  custom_attributes:
                    issue_type: Billing
                    priority: High
                  read: true
              not_found:
                summary: Not found
                value:
                  custom_attributes:
                    issue_type: Billing
                    priority: High
                  read: true
            schema:
              $ref: '#/components/schemas/update_conversation_request'
      responses:
        '200':
          content:
            application/json:
              examples:
                conversation found:
                  value:
                    admin_assignee_id: null
                    contacts:
                      contacts:
                      - id: 645e124c05a7e7570bfa4c10
                        type: contact
                      type: contact.list
                    conversation_parts:
                      conversation_parts:
                      - assigned_to: null
                        attachments: []
                        author:
                          email: operator+this_is_an_id307_that_should_be_at_least_@intercom.io
                          id: '991266399'
                          name: Operator
                          type: bot
                        body: null
                        created_at: 1683886671
                        external_id: null
                        id: '138236'
                        notified_at: 1683886671
                        part_type: conversation_attribute_updated_by_admin
                        redacted: false
                        type: conversation_part
                        updated_at: 1683886671
                      - assigned_to: null
                        attachments: []
                        author:
                          email: operator+this_is_an_id307_that_should_be_at_least_@intercom.io
                          id: '991266399'
                          name: Operator
                          type: bot
                        body: null
                        created_at: 1683886671
                        external_id: null
                        id: '138237'
                        notified_at: 1683886671
                        part_type: conversation_attribute_updated_by_admin
                        redacted: false
                        type: conversation_part
                        updated_at: 1683886671
                      total_count: 2
                      type: conversation_part.list
                    conversation_rating: null
                    created_at: 1683886669
                    custom_attributes:
                      issue_type: Billing
                      priority: High
                    first_contact_reply: null
                    id: '695238'
                    open: false
                    priority: not_priority
                    read: true
                    sla_applied: null
                    snoozed_until: null
                    source:
                      attachments: []
                      author:
                        email: admin170@email.com
                        id: '991266398'
                        name: Ciaran170 Lee
                        type: admin
                      body: <p>this is the message body</p>
                      delivered_as: admin_initiated
                      id: '403918083'
                      redacted: false
                      subject: ''
                      type: conversation
                      url: null
                    state: closed
                    statistics: null
                    tags:
                      tags: []
                      type: tag.list
                    team_assignee_id: null
                    teammates: null
                    ticket: null
                    title: null
                    topics: {}
                    type: conversation
                    updated_at: 1683886671
                    waiting_since: null
              schema:
                oneOf:
                - $ref: '#/components/schemas/conversation'
                - type: object
          description: conversation found
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: acd4974a-4c84-4e86-94a0-630d71fac58a
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
        '403':
          content:
            application/json:
              examples:
                API plan restricted:
                  value:
                    errors:
                    - code: api_plan_restricted
                      message: Active subscription needed.
                    request_id: 39849687-6c95-417e-971f-362a595d2633
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: API plan restricted
        '404':
          content:
            application/json:
              examples:
                Not found:
                  value:
                    errors:
                    - code: not_found
                      message: Resource Not Found
                    request_id: 3312667a-ccc8-427a-b74b-7d66a3dd4ba0
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Not found
      summary: Update a conversation
      tags:
      - Conversations
  /conversations/{id}/customers:
    post:
      description: "You can add participants who are contacts to a conversation, on\
        \ behalf of either another contact or an admin.\n\n> \U0001F6A7 Note about\
        \ contacts without an email\n>\n> If you add a contact via the email parameter\
        \ and there is no user/lead found on that workspace with he given email, then\
        \ we will create a new contact with `role` set to `lead`.\n\n"
      operationId: attachContactToConversation
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - description: The identifier for the conversation as given by Intercom.
        example: '123'
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            examples:
              attach_a_contact_to_a_conversation:
                summary: Attach a contact to a conversation
                value:
                  admin_id: 991266460
                  customer:
                    intercom_user_id: 645e129a05a7e7570bfa4c33
              not_found:
                summary: Not found
                value:
                  admin_id: 991266462
                  customer:
                    intercom_user_id: 645e129d05a7e7570bfa4c34
            schema:
              $ref: '#/components/schemas/attach_contact_to_conversation_request'
      responses:
        '200':
          content:
            application/json:
              examples:
                Attach a contact to a conversation:
                  value:
                    customers:
                    - id: 645e129a05a7e7570bfa4c33
                      type: user
              schema:
                oneOf:
                - $ref: '#/components/schemas/conversation'
                - type: object
          description: Attach a contact to a conversation
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: a44b7140-8211-4968-a0b5-2c0b04525455
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
        '403':
          content:
            application/json:
              examples:
                API plan restricted:
                  value:
                    errors:
                    - code: api_plan_restricted
                      message: Active subscription needed.
                    request_id: 5363d46e-428b-4745-b597-1785394045e3
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: API plan restricted
        '404':
          content:
            application/json:
              examples:
                Not found:
                  value:
                    errors:
                    - code: not_found
                      message: Resource Not Found
                    request_id: 8b17c4d8-0082-40be-b741-21c4236c5f6d
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Not found
      summary: Attach a contact to a conversation
      tags:
      - Conversations
  /conversations/{id}/parts:
    post:
      description: 'You can close a conversation.

        You can snooze a conversation to reopen on a future date.

        You can open a conversation which is `snoozed` or `closed`.

        You can assign a conversation to an admin and/or team.

        '
      operationId: manageConversation
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - description: The identifier for the conversation as given by Intercom.
        example: '123'
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            examples:
              assign_a_conversation:
                summary: Assign a conversation
                value:
                  admin_id: 991266444
                  assignee_id: 991266444
                  message_type: assignment
                  type: admin
              close_a_conversation:
                summary: Close a conversation
                value:
                  admin_id: 991266438
                  body: Goodbye :)
                  message_type: close
                  type: admin
              not_found:
                summary: Not found
                value:
                  admin_id: 991266446
                  body: Goodbye :)
                  message_type: close
                  type: admin
              open_a_conversation:
                summary: Open a conversation
                value:
                  admin_id: 991266442
                  message_type: open
              snooze_a_conversation:
                summary: Snooze a conversation
                value:
                  admin_id: 991266440
                  message_type: snoozed
                  snoozed_until: 1683890315
            schema:
              oneOf:
              - $ref: '#/components/schemas/close_conversation_request'
              - $ref: '#/components/schemas/snooze_conversation_request'
              - $ref: '#/components/schemas/open_conversation_request'
              - $ref: '#/components/schemas/assign_conversation_request'
      responses:
        '200':
          content:
            application/json:
              examples:
                Assign a conversation:
                  value:
                    admin_assignee_id: 991266444
                    contacts:
                      contacts:
                      - id: 645e128605a7e7570bfa4c2b
                        type: contact
                      type: contact.list
                    conversation_parts:
                      conversation_parts:
                      - assigned_to:
                          id: '991266444'
                          type: admin
                        attachments: []
                        author:
                          email: admin201@email.com
                          id: '991266444'
                          name: Ciaran201 Lee
                          type: admin
                        body: null
                        created_at: 1683886727
                        external_id: null
                        id: '138246'
                        notified_at: 1683886727
                        part_type: assign_and_reopen
                        redacted: false
                        type: conversation_part
                        updated_at: 1683886727
                      total_count: 1
                      type: conversation_part.list
                    conversation_rating: null
                    created_at: 1683886726
                    custom_attributes: {}
                    first_contact_reply: null
                    id: '695267'
                    open: true
                    priority: not_priority
                    read: false
                    sla_applied: null
                    snoozed_until: null
                    source:
                      attachments: []
                      author:
                        email: admin201@email.com
                        id: '991266444'
                        name: Ciaran201 Lee
                        type: admin
                      body: <p>this is the message body</p>
                      delivered_as: admin_initiated
                      id: '403918102'
                      redacted: false
                      subject: ''
                      type: conversation
                      url: null
                    state: open
                    statistics: null
                    tags:
                      tags: []
                      type: tag.list
                    team_assignee_id: null
                    teammates: null
                    ticket: null
                    title: null
                    topics: {}
                    type: conversation
                    updated_at: 1683886727
                    waiting_since: null
                Close a conversation:
                  value:
                    admin_assignee_id: null
                    contacts:
                      contacts:
                      - id: 645e127505a7e7570bfa4c22
                        type: contact
                      type: contact.list
                    conversation_parts:
                      conversation_parts:
                      - assigned_to: null
                        attachments: []
                        author:
                          email: admin198@email.com
                          id: '991266438'
                          name: Ciaran198 Lee
                          type: admin
                        body: <p>Goodbye :)</p>
                        created_at: 1683886711
                        external_id: null
                        id: '138242'
                        notified_at: 1683886711
                        part_type: close
                        redacted: false
                        type: conversation_part
                        updated_at: 1683886711
                      total_count: 1
                      type: conversation_part.list
                    conversation_rating: null
                    created_at: 1683886710
                    custom_attributes: {}
                    first_contact_reply: null
                    id: '695257'
                    open: false
                    priority: not_priority
                    read: false
                    sla_applied: null
                    snoozed_until: null
                    source:
                      attachments: []
                      author:
                        email: admin198@email.com
                        id: '991266438'
                        name: Ciaran198 Lee
                        type: admin
                      body: <p>this is the message body</p>
                      delivered_as: admin_initiated
                      id: '403918097'
                      redacted: false
                      subject: ''
                      type: conversation
                      url: null
                    state: closed
                    statistics: null
                    tags:
                      tags: []
                      type: tag.list
                    team_assignee_id: null
                    teammates: null
                    ticket: null
                    title: null
                    topics: {}
                    type: conversation
                    updated_at: 1683886711
                    waiting_since: null
                Open a conversation:
                  value:
                    admin_assignee_id: null
                    contacts:
                      contacts:
                      - id: 645e128005a7e7570bfa4c28
                        type: contact
                      type: contact.list
                    conversation_parts:
                      conversation_parts:
                      - assigned_to: null
                        attachments: []
                        author:
                          email: admin200@email.com
                          id: '991266442'
                          name: Ciaran200 Lee
                          type: admin
                        body: null
                        created_at: 1683886724
                        external_id: null
                        id: '138245'
                        notified_at: 1683886724
                        part_type: open
                        redacted: false
                        type: conversation_part
                        updated_at: 1683886724
                      total_count: 1
                      type: conversation_part.list
                    conversation_rating: null
                    created_at: 1683886715
                    custom_attributes: {}
                    first_contact_reply: null
                    id: '695263'
                    open: true
                    priority: not_priority
                    read: true
                    sla_applied: null
                    snoozed_until: null
                    source:
                      attachments: []
                      author:
                        email: admin200@email.com
                        id: '991266442'
                        name: Ciaran200 Lee
                        type: admin
                      body: <p>this is the message body</p>
                      delivered_as: admin_initiated
                      id: '403918099'
                      redacted: false
                      subject: ''
                      type: conversation
                      url: null
                    state: open
                    statistics: null
                    tags:
                      tags: []
                      type: tag.list
                    team_assignee_id: null
                    teammates: null
                    ticket: null
                    title: ''
                    topics: {}
                    type: conversation
                    updated_at: 1683886724
                    waiting_since: null
                Snooze a conversation:
                  value:
                    admin_assignee_id: null
                    contacts:
                      contacts:
                      - id: 645e127905a7e7570bfa4c23
                        type: contact
                      type: contact.list
                    conversation_parts:
                      conversation_parts:
                      - assigned_to: null
                        attachments: []
                        author:
                          email: admin199@email.com
                          id: '991266440'
                          name: Ciaran199 Lee
                          type: admin
                        body: null
                        created_at: 1683886715
                        external_id: null
                        id: '138243'
                        notified_at: 1683886715
                        part_type: snoozed
                        redacted: false
                        type: conversation_part
                        updated_at: 1683886715
                      total_count: 1
                      type: conversation_part.list
                    conversation_rating: null
                    created_at: 1683886714
                    custom_attributes: {}
                    first_contact_reply: null
                    id: '695258'
                    open: true
                    priority: not_priority
                    read: false
                    sla_applied: null
                    snoozed_until: 1683890315
                    source:
                      attachments: []
                      author:
                        email: admin199@email.com
                        id: '991266440'
                        name: Ciaran199 Lee
                        type: admin
                      body: <p>this is the message body</p>
                      delivered_as: admin_initiated
                      id: '403918098'
                      redacted: false
                      subject: ''
                      type: conversation
                      url: null
                    state: snoozed
                    statistics: null
                    tags:
                      tags: []
                      type: tag.list
                    team_assignee_id: null
                    teammates: null
                    ticket: null
                    title: null
                    topics: {}
                    type: conversation
                    updated_at: 1683886715
                    waiting_since: null
              schema:
                oneOf:
                - $ref: '#/components/schemas/conversation'
                - type: object
          description: Assign a conversation
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: 19091601-74c9-4c8f-947a-6bf00a942292
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
        '403':
          content:
            application/json:
              examples:
                API plan restricted:
                  value:
                    errors:
                    - code: api_plan_restricted
                      message: Active subscription needed.
                    request_id: 54b67701-9a18-46cc-b0bf-63d6e189652f
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: API plan restricted
        '404':
          content:
            application/json:
              examples:
                Not found:
                  value:
                    errors:
                    - code: not_found
                      message: Resource Not Found
                    request_id: f55f3655-f129-4a55-bdfc-38a7ef8d61e2
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Not found
      summary: Manage a conversation
      tags:
      - Conversations
  /conversations/{id}/reply:
    post:
      description: You can reply to a conversation with a message from an admin or
        on behalf of a contact, or with a note for admins.
      operationId: replyConversation
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - in: path
        name: id
        required: true
        schema:
          oneOf:
          - description: The id of the conversation to target.
            example: '123'
            title: Conversation ID
            type: string
          - description: You can also reply to the most recent conversation on a workspace
              by specifying `last` as the string.
            enum:
            - last
            example: last
            title: The most recent conversation
            type: string
      requestBody:
        content:
          application/json:
            examples:
              admin_note_reply:
                summary: Admin note reply
                value:
                  admin_id: 991266426
                  body: <html> <body>  <h2>An Unordered HTML List</h2>  <ul>   <li>Coffee</li>   <li>Tea</li>   <li>Milk</li>
                    </ul>    <h2>An Ordered HTML List</h2>  <ol>   <li>Coffee</li>   <li>Tea</li>   <li>Milk</li>
                    </ol>   </body> </html>
                  message_type: note
                  type: admin
              not_found:
                summary: Not found
                value:
                  body: Thanks again :)
                  intercom_user_id: 645e126e05a7e7570bfa4c1f
                  message_type: comment
                  type: user
              user_last_conversation_reply:
                summary: User last conversation reply
                value:
                  body: Thanks again :)
                  intercom_user_id: 645e126b05a7e7570bfa4c1e
                  message_type: comment
                  type: user
              user_reply:
                summary: User reply
                value:
                  body: Thanks again :)
                  intercom_user_id: 645e126205a7e7570bfa4c1b
                  message_type: comment
                  type: user
            schema:
              $ref: '#/components/schemas/reply_conversation_request'
      responses:
        '200':
          content:
            application/json:
              examples:
                Admin note reply:
                  value:
                    admin_assignee_id: null
                    contacts:
                      contacts:
                      - id: 645e126605a7e7570bfa4c1c
                        type: contact
                      type: contact.list
                    conversation_parts:
                      conversation_parts:
                      - assigned_to: null
                        attachments: []
                        author:
                          email: admin192@email.com
                          id: '991266426'
                          name: Ciaran192 Lee
                          type: admin
                        body: '<h2>An Unordered HTML List</h2>

                          <ul>

                          <li>Coffee</li>

                          <li>Tea</li>

                          <li>Milk</li>

                          </ul>

                          <h2>An Ordered HTML List</h2>

                          <ol>

                          <li>Coffee</li>

                          <li>Tea</li>

                          <li>Milk</li>

                          </ol>'
                        created_at: 1683886696
                        external_id: null
                        id: '138240'
                        notified_at: 1683886696
                        part_type: note
                        redacted: false
                        type: conversation_part
                        updated_at: 1683886696
                      total_count: 1
                      type: conversation_part.list
                    conversation_rating: null
                    created_at: 1683886694
                    custom_attributes: {}
                    first_contact_reply: null
                    id: '695251'
                    open: false
                    priority: not_priority
                    read: false
                    sla_applied: null
                    snoozed_until: null
                    source:
                      attachments: []
                      author:
                        email: admin192@email.com
                        id: '991266426'
                        name: Ciaran192 Lee
                        type: admin
                      body: <p>this is the message body</p>
                      delivered_as: admin_initiated
                      id: '403918091'
                      redacted: false
                      subject: ''
                      type: conversation
                      url: null
                    state: closed
                    statistics: null
                    tags:
                      tags: []
                      type: tag.list
                    team_assignee_id: null
                    teammates: null
                    ticket: null
                    title: null
                    topics: {}
                    type: conversation
                    updated_at: 1683886696
                    waiting_since: null
                User last conversation reply:
                  value:
                    admin_assignee_id: null
                    contacts:
                      contacts:
                      - id: 645e126b05a7e7570bfa4c1e
                        type: contact
                      type: contact.list
                    conversation_parts:
                      conversation_parts:
                      - assigned_to: null
                        attachments: []
                        author:
                          email: joe@bloggs.com
                          id: 645e126b05a7e7570bfa4c1e
                          name: Joe Bloggs
                          type: user
                        body: <p>Thanks again :)</p>
                        created_at: 1683886701
                        external_id: null
                        id: '138241'
                        notified_at: 1683886701
                        part_type: comment
                        redacted: false
                        type: conversation_part
                        updated_at: 1683886701
                      total_count: 1
                      type: conversation_part.list
                    conversation_rating: null
                    created_at: 1683886699
                    custom_attributes: {}
                    first_contact_reply:
                      created_at: 1683886701
                      type: conversation
                      url: null
                    id: '695253'
                    open: true
                    priority: not_priority
                    read: false
                    sla_applied: null
                    snoozed_until: null
                    source:
                      attachments: []
                      author:
                        email: admin194@email.com
                        id: '991266430'
                        name: Ciaran194 Lee
                        type: admin
                      body: <p>this is the message body</p>
                      delivered_as: admin_initiated
                      id: '403918093'
                      redacted: false
                      subject: ''
                      type: conversation
                      url: null
                    state: open
                    statistics: null
                    tags:
                      tags: []
                      type: tag.list
                    team_assignee_id: null
                    teammates: null
                    ticket: null
                    title: null
                    topics: {}
                    type: conversation
                    updated_at: 1683886701
                    waiting_since: 1683886701
                User reply:
                  value:
                    admin_assignee_id: null
                    contacts:
                      contacts:
                      - id: 645e126205a7e7570bfa4c1b
                        type: contact
                      type: contact.list
                    conversation_parts:
                      conversation_parts:
                      - assigned_to: null
                        attachments: []
                        author:
                          email: joe@bloggs.com
                          id: 645e126205a7e7570bfa4c1b
                          name: Joe Bloggs
                          type: user
                        body: <p>Thanks again :)</p>
                        created_at: 1683886692
                        external_id: null
                        id: '138239'
                        notified_at: 1683886692
                        part_type: comment
                        redacted: false
                        type: conversation_part
                        updated_at: 1683886692
                      total_count: 1
                      type: conversation_part.list
                    conversation_rating: null
                    created_at: 1683886690
                    custom_attributes: {}
                    first_contact_reply:
                      created_at: 1683886692
                      type: conversation
                      url: null
                    id: '695250'
                    open: true
                    priority: not_priority
                    read: false
                    sla_applied: null
                    snoozed_until: null
                    source:
                      attachments: []
                      author:
                        email: admin191@email.com
                        id: '991266424'
                        name: Ciaran191 Lee
                        type: admin
                      body: <p>this is the message body</p>
                      delivered_as: admin_initiated
                      id: '403918090'
                      redacted: false
                      subject: ''
                      type: conversation
                      url: null
                    state: open
                    statistics: null
                    tags:
                      tags: []
                      type: tag.list
                    team_assignee_id: null
                    teammates: null
                    ticket: null
                    title: null
                    topics: {}
                    type: conversation
                    updated_at: 1683886692
                    waiting_since: 1683886692
              schema:
                oneOf:
                - $ref: '#/components/schemas/conversation'
                - type: object
          description: User last conversation reply
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: 6b1ae85e-2504-408e-939b-4cd6f5e2ddf8
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
        '403':
          content:
            application/json:
              examples:
                API plan restricted:
                  value:
                    errors:
                    - code: api_plan_restricted
                      message: Active subscription needed.
                    request_id: 9fc6439e-d659-49d1-8cef-04ee4b21042a
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: API plan restricted
        '404':
          content:
            application/json:
              examples:
                Not found:
                  value:
                    errors:
                    - code: not_found
                      message: Resource Not Found
                    request_id: 52a7a366-050c-431e-a5e3-7dfe78aee6fd
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Not found
      summary: Reply to a conversation
      tags:
      - Conversations
  /conversations/{id}/run_assignment_rules:
    post:
      description: You can let a conversation be automatically assigned following
        assignment rules.
      operationId: autoAssignConversation
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - description: The identifier for the conversation as given by Intercom.
        example: '123'
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                Assign a conversation using assignment rules:
                  value:
                    admin_assignee_id: null
                    contacts:
                      contacts:
                      - id: 645e129005a7e7570bfa4c2f
                        type: contact
                      type: contact.list
                    conversation_parts:
                      conversation_parts:
                      - assigned_to:
                          id: null
                          type: nobody_admin
                        attachments: []
                        author:
                          email: operator+this_is_an_id345_that_should_be_at_least_@intercom.io
                          id: '991266453'
                          name: Operator
                          type: bot
                        body: null
                        created_at: 1683886738
                        external_id: null
                        id: '138247'
                        notified_at: 1683886738
                        part_type: default_assignment
                        redacted: false
                        type: conversation_part
                        updated_at: 1683886738
                      total_count: 1
                      type: conversation_part.list
                    conversation_rating: null
                    created_at: 1683886737
                    custom_attributes: {}
                    first_contact_reply: null
                    id: '695271'
                    open: false
                    priority: not_priority
                    read: false
                    sla_applied: null
                    snoozed_until: null
                    source:
                      attachments: []
                      author:
                        email: admin205@email.com
                        id: '991266452'
                        name: Ciaran205 Lee
                        type: admin
                      body: <p>this is the message body</p>
                      delivered_as: admin_initiated
                      id: '403918106'
                      redacted: false
                      subject: ''
                      type: conversation
                      url: null
                    state: closed
                    statistics: null
                    tags:
                      tags: []
                      type: tag.list
                    team_assignee_id: null
                    teammates: null
                    ticket: null
                    title: null
                    topics: {}
                    type: conversation
                    updated_at: 1683886738
                    waiting_since: null
              schema:
                oneOf:
                - $ref: '#/components/schemas/conversation'
                - type: object
          description: Assign a conversation using assignment rules
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: 224f8992-b00f-4257-81d2-c2a4aba40527
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
        '403':
          content:
            application/json:
              examples:
                API plan restricted:
                  value:
                    errors:
                    - code: api_plan_restricted
                      message: Active subscription needed.
                    request_id: 5d838801-2a41-44c8-ac7a-ea1d1c987426
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: API plan restricted
        '404':
          content:
            application/json:
              examples:
                Not found:
                  value:
                    errors:
                    - code: not_found
                      message: Resource Not Found
                    request_id: 6d0ecc8b-bba1-4e63-9769-ac0131dea885
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Not found
      summary: Run Assignment Rules on a conversation
      tags:
      - Conversations
  /data_attributes:
    get:
      description: You can fetch a list of all data attributes belonging to a workspace
        for contacts, companies or conversations.
      operationId: lisDataAttributes
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - description: Specify the data attribute model to return.
        example: company
        in: query
        name: model
        required: false
        schema:
          enum:
          - contact
          - company
          - conversation
          type: string
      - description: Include archived attributes in the list. By default we return
          only non archived data attributes.
        example: false
        in: query
        name: include_archived
        required: false
        schema:
          type: boolean
      responses:
        '200':
          content:
            application/json:
              examples:
                Successful response:
                  value:
                    data:
                    - api_writable: true
                      archived: false
                      custom: false
                      data_type: string
                      description: The name of a company
                      full_name: name
                      label: Company name
                      model: company
                      name: name
                      type: data_attribute
                      ui_writable: false
                    - api_writable: false
                      archived: false
                      custom: false
                      data_type: string
                      description: A number identifying a company
                      full_name: company_id
                      label: Company ID
                      model: company
                      name: company_id
                      type: data_attribute
                      ui_writable: false
                    - api_writable: false
                      archived: false
                      custom: false
                      data_type: date
                      description: The last day anyone from a company visited your
                        site or app
                      full_name: last_request_at
                      label: Company last seen
                      model: company
                      name: last_request_at
                      type: data_attribute
                      ui_writable: false
                    - api_writable: true
                      archived: false
                      custom: false
                      data_type: date
                      description: The day a company was added to Intercom
                      full_name: remote_created_at
                      label: Company created at
                      model: company
                      name: remote_created_at
                      type: data_attribute
                      ui_writable: false
                    - api_writable: false
                      archived: false
                      custom: false
                      data_type: integer
                      description: The number of people in a company
                      full_name: user_count
                      label: People
                      model: company
                      name: user_count
                      type: data_attribute
                      ui_writable: false
                    - api_writable: false
                      archived: false
                      custom: false
                      data_type: integer
                      description: All visits from anyone in a company to your product's
                        site or app
                      full_name: session_count
                      label: Company web sessions
                      model: company
                      name: session_count
                      type: data_attribute
                      ui_writable: false
                    - api_writable: false
                      archived: false
                      custom: false
                      data_type: string
                      description: A specific plan or level within your product that
                        companies have signed up to
                      full_name: plan.name
                      label: Plan
                      model: company
                      name: name
                      type: data_attribute
                      ui_writable: false
                    - api_writable: true
                      archived: false
                      custom: false
                      data_type: float
                      description: The monthly revenue you receive from a company
                      full_name: monthly_spend
                      label: Monthly Spend
                      model: company
                      name: monthly_spend
                      type: data_attribute
                      ui_writable: false
                    - api_writable: true
                      archived: false
                      custom: false
                      data_type: integer
                      description: The number of people employed in this company,
                        expressed as a single number
                      full_name: size
                      label: Company size
                      model: company
                      name: size
                      type: data_attribute
                      ui_writable: false
                    - api_writable: true
                      archived: false
                      custom: false
                      data_type: string
                      description: The category or domain this company belongs to
                        e.g. 'ecommerce' or 'SaaS'
                      full_name: industry
                      label: Company industry
                      model: company
                      name: industry
                      type: data_attribute
                      ui_writable: false
                    - api_writable: true
                      archived: false
                      custom: false
                      data_type: string
                      description: The web address for the company's primary marketing
                        site
                      full_name: website
                      label: Company website
                      model: company
                      name: website
                      type: data_attribute
                      ui_writable: false
                    - admin_id: '991266486'
                      api_writable: true
                      archived: false
                      created_at: 1683886821
                      custom: true
                      data_type: string
                      description: One ring to rule them all, one ring to find them,
                        One ring to bring them all and in the darkness bind them.
                      full_name: custom_attributes.The One Ring
                      id: 181627
                      label: The One Ring
                      model: company
                      name: The One Ring
                      type: data_attribute
                      ui_writable: false
                      updated_at: 1683886821
                    - api_writable: false
                      archived: false
                      custom: false
                      data_type: string
                      description: The Intercom defined id representing the company
                      full_name: id
                      label: ID
                      model: company
                      name: id
                      type: data_attribute
                      ui_writable: false
                    - api_writable: false
                      archived: false
                      custom: false
                      data_type: date
                      description: The time the company was added to Intercom
                      full_name: created_at
                      label: Created at
                      model: company
                      name: created_at
                      type: data_attribute
                      ui_writable: false
                    - api_writable: false
                      archived: false
                      custom: false
                      data_type: date
                      description: The last time the company was updated
                      full_name: updated_at
                      label: Updated at
                      model: company
                      name: updated_at
                      type: data_attribute
                      ui_writable: false
                    - api_writable: false
                      archived: false
                      custom: false
                      data_type: string
                      description: The Intercom defined id representing the plan
                      full_name: plan.id
                      label: Plan ID
                      model: company
                      name: id
                      type: data_attribute
                      ui_writable: false
                    - api_writable: false
                      archived: false
                      custom: false
                      data_type: string
                      description: The Intercom defined id representing the app
                      full_name: app_id
                      label: App ID
                      model: company
                      name: app_id
                      type: data_attribute
                      ui_writable: false
                    type: list
              schema:
                oneOf:
                - $ref: '#/components/schemas/data_attribute_list'
                - type: object
          description: Successful response
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: 01b063ab-5dba-483b-a022-5b8d032faac3
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
      summary: List all data attributes
      tags:
      - Data Attributes
    post:
      description: You can create a data attributes for a `contact` or a `company`.
      operationId: createDataAttribute
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      requestBody:
        content:
          application/json:
            examples:
              attribute_already_exists:
                summary: Attribute already exists
                value:
                  data_type: string
                  model: company
                  name: The One Ring
              invalid_data_type:
                summary: Invalid Data Type
                value:
                  data_type: mithril
                  model: company
                  name: The Second Ring
              invalid_name:
                summary: Invalid name
                value:
                  data_type: string
                  model: company
                  name: '!nv@l!d n@me'
              same_name_already_exists:
                summary: Same name already exists
                value:
                  data_type: integer
                  model: contact
                  name: The One Ring
              successful:
                summary: Successful
                value:
                  data_type: string
                  model: company
                  name: Mithril Shirt
              too_few_options_for_list:
                summary: Too few options for list
                value:
                  archived: false
                  description: Just a plain old ring
                  options:
                  - value: 1-10
            schema:
              $ref: '#/components/schemas/create_data_attribute_request'
      responses:
        '200':
          content:
            application/json:
              examples:
                Successful:
                  value:
                    admin_id: '991266488'
                    api_writable: true
                    archived: false
                    created_at: 1683886823
                    custom: true
                    data_type: string
                    full_name: custom_attributes.Mithril Shirt
                    id: 181630
                    label: Mithril Shirt
                    model: company
                    name: Mithril Shirt
                    type: data_attribute
                    ui_writable: false
                    updated_at: 1683886823
              schema:
                oneOf:
                - $ref: '#/components/schemas/data_attribute'
                - type: object
          description: Successful
        '400':
          content:
            application/json:
              examples:
                Attribute already exists:
                  value:
                    errors:
                    - code: parameter_invalid
                      message: You already have 'The One Ring' in your company data.
                        To save this as new company data, use a different name.
                    request_id: 1bd54184-391f-41bb-bd50-873a632bc14e
                    type: error.list
                Invalid Data Type:
                  value:
                    errors:
                    - code: parameter_invalid
                      message: Data Type isn't an option
                    request_id: cc3b261b-1621-4eb8-a58b-01b1451509af
                    type: error.list
                Invalid name:
                  value:
                    errors:
                    - code: parameter_invalid
                      message: Your name for this attribute must only contain alphanumeric
                        characters, currency symbols, and hyphens
                    request_id: 2214526a-da45-4c47-89c4-fc17c5189f39
                    type: error.list
                Same name already exists:
                  value:
                    errors:
                    - code: parameter_invalid
                      message: You already have 'The One Ring' in your company data.
                        To save this as new people data, use a different name.
                    request_id: cf6737da-7770-4fc6-b4ad-25e6e9be8c04
                    type: error.list
                Too few options for list:
                  value:
                    errors:
                    - code: parameter_invalid
                      message: The Data Attribute model field must be either contact
                        or company
                    request_id: a0635481-723f-4af5-beb1-123bb3c4c0a2
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Too few options for list
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: 4d70aa8c-6c59-4d8b-bbae-9d981c567a4c
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
      summary: Create a data attribute
      tags:
      - Data Attributes
  /data_attributes/{id}:
    put:
      description: "\nYou can update a data attribute.\n\n> \U0001F6A7 Updating the\
        \ data type is not possible\n>\n> It is currently a dangerous action to execute\
        \ changing a data attribute's type via the API. You will need to update the\
        \ type via the UI instead.\n"
      operationId: updateDataAttribute
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - description: The data attribute id
        example: 1
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            examples:
              attribute_not_found:
                summary: Attribute Not Found
                value:
                  archived: false
                  description: Just a plain old ring
                  options:
                  - value: 1-10
                  - value: 11-20
              has_dependant_object:
                summary: Has Dependant Object
                value:
                  archived: true
                  description: Trying to archieve
              successful:
                summary: Successful
                value:
                  archived: false
                  description: Just a plain old ring
                  options:
                  - value: 1-10
                  - value: 11-20
              too_few_options_in_list:
                summary: Too few options in list
                value:
                  archived: false
                  description: Too few options
                  options:
                    value: 1-10
            schema:
              $ref: '#/components/schemas/update_data_attribute_request'
      responses:
        '200':
          content:
            application/json:
              examples:
                Successful:
                  value:
                    admin_id: '991266495'
                    api_writable: true
                    archived: false
                    created_at: 1683886827
                    custom: true
                    data_type: string
                    description: Just a plain old ring
                    full_name: custom_attributes.The One Ring
                    id: 181637
                    label: The One Ring
                    model: company
                    name: The One Ring
                    options:
                    - 1-10
                    - 11-20
                    type: data_attribute
                    ui_writable: false
                    updated_at: 1683886828
              schema:
                oneOf:
                - $ref: '#/components/schemas/data_attribute'
                - type: object
          description: Successful
        '400':
          content:
            application/json:
              examples:
                Too few options in list:
                  value:
                    errors:
                    - code: parameter_invalid
                      message: Options isn't an array
                    request_id: 2eaf6129-7c7f-40c6-af80-0c12723fdf97
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Too few options in list
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: 91100c76-32a4-4703-b926-8b59a824115b
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
        '404':
          content:
            application/json:
              examples:
                Attribute Not Found:
                  value:
                    errors:
                    - code: field_not_found
                      message: We couldn't find that data attribute to update
                    request_id: 5d61fc16-29d8-476e-ac79-204f31b6add1
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Attribute Not Found
        '422':
          content:
            application/json:
              examples:
                Has Dependant Object:
                  value:
                    errors:
                    - code: data_invalid
                      message: The Data Attribute you are trying to archive has a
                        dependant object
                    request_id: 8b2ab1e9-5ec9-4390-a388-7cd58c9b8281
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Has Dependant Object
      summary: Update a data attribute
      tags:
      - Data Attributes
  /download/content/data/{job_identifier}:
    get:
      description: "When a job has a status of complete, and thus a filled download_url,\
        \ you can download your data by hitting that provided URL, formatted like\
        \ so: https://api.intercom.io/download/content/data/xyz1234.\n\nYour exported\
        \ message data will be streamed continuously back down to you in a gzipped\
        \ CSV format.\n\n> \U0001F4D8 Octet header required\n>\n> You will have to\
        \ specify the header Accept: `application/octet-stream` when hitting this\
        \ endpoint.\n"
      operationId: Download data export
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - description: job_identifier
        in: path
        name: job_identifier
        required: true
        schema:
          type: string
      responses:
        '200':
          description: successful
      summary: Download content data export
      tags:
      - Data Export
  /events:
    get:
      description: "\n> \U0001F6A7\n>\n> Please note that you can only 'list' events\
        \ that are less than 90 days old. Event counts and summaries will still include\
        \ your events older than 90 days but you cannot 'list' these events individually\
        \ if they are older than 90 days\n\nThe events belonging to a customer can\
        \ be listed by sending a GET request to `https://api.intercom.io/events` with\
        \ a user or lead identifier along with a `type` parameter. The identifier\
        \ parameter can be one of `user_id`, `email` or `intercom_user_id`. The `type`\
        \ parameter value must be `user`.\n\n- `https://api.intercom.io/events?type=user&user_id={user_id}`\n\
        - `https://api.intercom.io/events?type=user&email={email}`\n- `https://api.intercom.io/events?type=user&intercom_user_id={id}`\
        \ (this call can be used to list leads)\n\nThe `email` parameter value should\
        \ be [url encoded](http://en.wikipedia.org/wiki/Percent-encoding) when sending.\n\
        \nYou can optionally define the result page size as well with the `per_page`\
        \ parameter.\n"
      operationId: lisDataEvents
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - explode: true
        in: query
        name: filter
        required: true
        schema:
          oneOf:
          - additionalProperties: false
            properties:
              user_id:
                type: string
            required:
            - user_id
            title: user_id query parameter
          - additionalProperties: false
            properties:
              intercom_user_id:
                type: string
            required:
            - intercom_user_id
            title: intercom_user_id query parameter
          - additionalProperties: false
            properties:
              email:
                type: string
            required:
            - email
            title: email query parameter
          type: object
        style: form
      - description: The value must be user
        in: query
        name: type
        required: true
        schema:
          type: string
      - description: summary flag
        in: query
        name: summary
        required: false
        schema:
          type: boolean
      responses:
        '200':
          content:
            application/json:
              examples:
                Successful response:
                  value:
                    email: user24@email.com
                    events: []
                    intercom_user_id: 645e12f805a7e7570bfa4c79
                    pages:
                      next: http://api.intercom.test/events?next page
                    type: event.summary
                    user_id: 3ecf64d0-9ed1-4e9f-88e1-da7d6e6782f3
              schema:
                oneOf:
                - $ref: '#/components/schemas/data_event_summary'
                - type: object
          description: Successful response
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: d214d110-2bed-44af-bea6-62ec1e350cc1
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
      summary: List all data events
      tags:
      - Data Events
    post:
      description: "\nYou will need an Access Token that has write permissions to\
        \ send Events. Once you have a key you can submit events via POST to the Events\
        \ resource, which is located at https://api.intercom.io/events, or you can\
        \ send events using one of the client libraries. When working with the HTTP\
        \ API directly a client should send the event with a `Content-Type` of `application/json`.\n\
        \nWhen using the JavaScript API, [adding the code to your app](http://docs.intercom.io/configuring-Intercom/tracking-user-events-in-your-app)\
        \ makes the Events API available. Once added, you can submit an event using\
        \ the `trackEvent` method. This will associate the event with the Lead or\
        \ currently logged-in user or logged-out visitor/lead and send it to Intercom.\
        \ The final parameter is a map that can be used to send optional metadata\
        \ about the event.\n\nWith the Ruby client you pass a hash describing the\
        \ event to `Intercom::Event.create`, or call the `track_user` method directly\
        \ on the current user object (e.g. `user.track_event`).\n\n| Type        \
        \    | Description                                                       \
        \                                                                        \
        \                                                                      | Example\
        \                                                                        \
        \   |\n| :-------------- | :--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\
        \ | :--------------------------------------------------------------------------------\
        \ |\n| String          | The value is a JSON String                      \
        \                                                                        \
        \                                                                        \
        \                | `\"source\":\"desktop\"`                              \
        \                                |\n| Number          | The value is a JSON\
        \ Number                                                                 \
        \                                                                        \
        \                                             | `\"load\": 3.67`         \
        \                                                           |\n| Date    \
        \        | The key ends with the String `_date` and the value is a [Unix timestamp](http://en.wikipedia.org/wiki/Unix_time),\
        \ assumed to be in the [UTC](http://en.wikipedia.org/wiki/Coordinated_Universal_Time)\
        \ timezone. | `\"contact_date\": 1392036272`                             \
        \                         |\n| Link            | The value is a HTTP or HTTPS\
        \ URI.                                                                   \
        \                                                                        \
        \                                    | `\"article\": \"https://example.org/ab1de.html\"\
        `                                     |\n| Rich Link       | The value is\
        \ a JSON object that contains `url` and `value` keys.                    \
        \                                                                        \
        \                                                    | `\"article\": {\"url\"\
        : \"https://example.org/ab1de.html\", \"value\":\"the dude abides\"}` |\n\
        | Monetary Amount | The value is a JSON object that contains `amount` and\
        \ `currency` keys. The `amount` key is a positive integer representing the\
        \ amount in cents. The price in the example to the right denotes \u20AC349.99.\
        \          | `\"price\": {\"amount\": 34999, \"currency\": \"eur\"}`     \
        \                              |\n\n**NB: For the JSON object types, please\
        \ note that we do not currently support nested JSON structure.**\n\n> \U0001F6A7\
        \ Lead Events\n>\n> When submitting events for Leads, you will need to specify\
        \ the Lead's `id`.\n\n> \U0001F4D8 Metadata behaviour\n>\n> - We currently\
        \ limit the number of tracked metadata keys to 10 per event. Once the quota\
        \ is reached, we ignore any further keys we receive. The first 10 metadata\
        \ keys are determined by the order in which they are sent in with the event.\n\
        > - It is not possible to change the metadata keys once the event has been\
        \ sent. A new event will need to be created with the new keys and you can\
        \ archive the old one.\n> - There might be up to 24 hrs delay when you send\
        \ a new metadata for an existing event.\n\n> \U0001F4D8 Event de-duplication\n\
        >\n> The API may detect and ignore duplicate events. Each event is uniquely\
        \ identified as a combination of the following data - the Workspace identifier,\
        \ the Contact external identifier, the Data Event name and the Data Event\
        \ created time. As a result, it is **strongly recommended** to send a second\
        \ granularity Unix timestamp in the `created_at` field.\n>\n> Duplicated events\
        \ are responded to using the normal `202 Accepted` code - an error is not\
        \ thrown, however repeat requests will be counted against any rate limit that\
        \ is in place.\n\n### HTTP API Responses\n\n- Successful responses to submitted\
        \ events return `202 Accepted` with an empty body.\n- Unauthorised access\
        \ will be rejected with a `401 Unauthorized` or `403 Forbidden` response code.\n\
        - Events sent about users that cannot be found will return a `404 Not Found`.\n\
        - Event lists containing duplicate events will have those duplicates ignored.\n\
        - Server errors will return a `500` response code and may contain an error\
        \ message in the body.\n\n"
      operationId: createDataEvent
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create_data_event_request'
      responses:
        '202':
          description: successful
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: f748e5bb-ba1d-45eb-b257-b7667d0a2ef8
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
      summary: Submit a data event
      tags:
      - Data Events
  /events/summaries:
    post:
      description: 'Create event summaries for a user. Event summaries are used to
        track the number of times an event has occurred, the first time it occurred
        and the last time it occurred.


        '
      operationId: dataEventSummaries
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create_data_event_summaries_request'
      responses:
        '200':
          description: successful
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: dd2f22f2-5ef0-460f-afc4-49319e2ba1d0
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
      summary: Create event summaries
      tags:
      - Data Events
  /export/cancel/{job_identifier}:
    post:
      description: You can cancel your job
      operationId: Cancel data export
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - description: job_identifier
        in: path
        name: job_identifier
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                successful:
                  value:
                    download_expires_at: ''
                    download_url: ''
                    job_identifier: c9drnr4m95b4ekpo
                    status: canceled
              schema:
                oneOf:
                - $ref: '#/components/schemas/data_export'
                - type: object
          description: successful
      summary: Cancel content data export
      tags:
      - Data Export
  /export/content/data:
    post:
      description: "To create your export job, you need to send a `POST` request to\
        \ the export endpoint `https://api.intercom.io/export/content/data`.\n\nThe\
        \ only parameters you need to provide are the range of dates that you want\
        \ exported.\n\n>\U0001F6A7 Limit of one active job\n>\n> You can only have\
        \ one active job per workspace. You will receive a HTTP status code of 429\
        \ with the message Exceeded rate limit of 1 pending message data export jobs\
        \ if you attempt to create a second concurrent job.\n\n>\u2757\uFE0F Updated_at\
        \ not included\n>\n> It should be noted that the timeframe only includes messages\
        \ sent during the time period and not messages that were only updated during\
        \ this period. For example, if a message was updated yesterday but sent two\
        \ days ago, you would need to set the created_at_after date before the message\
        \ was sent to include that in your retrieval job.\n\n>\U0001F4D8 Date ranges\
        \ are inclusive\n>\n> Requesting data for 2018-06-01 until 2018-06-30 will\
        \ get all data for those days including those specified - e.g. 2018-06-01\
        \ 00:00:00 until 2018-06-30 23:59:99.\n"
      operationId: create data export
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      requestBody:
        content:
          application/json:
            examples:
              successful:
                summary: successful
                value:
                  created_at_after: 1683868843
                  created_at_before: 1683886843
            schema:
              $ref: '#/components/schemas/create_data_exports_request'
      responses:
        '200':
          content:
            application/json:
              examples:
                successful:
                  value:
                    download_expires_at: ''
                    download_url: ''
                    job_identifier: pse61dal22ohjitj
                    status: pending
              schema:
                oneOf:
                - $ref: '#/components/schemas/data_export'
                - type: object
          description: successful
      summary: Create content data export
      tags:
      - Data Export
  /export/content/data/{job_identifier}:
    get:
      description: "You can view the status of your job by sending a `GET` request\
        \ to the URL\n`https://api.intercom.io/export/content/data/{job_identifier}`\
        \ - the `{job_identifier}` is the value returned in the response when you\
        \ first created the export job. More on it can be seen in the Export Job Model.\n\
        \n> \U0001F6A7 Jobs expire after two days\n> All jobs that have completed\
        \ processing (and are thus available to download from the provided URL) will\
        \ have an expiry limit of two days from when the export ob completed. After\
        \ this, the data will no longer be available.\n"
      operationId: get data export
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - description: job_identifier
        in: path
        name: job_identifier
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                successful:
                  value:
                    download_expires_at: ''
                    download_url: ''
                    job_identifier: kxh2bd1826ycmfp6
                    status: pending
              schema:
                oneOf:
                - $ref: '#/components/schemas/data_export'
                - type: object
          description: successful
      summary: Show content data export
      tags:
      - Data Export
  /help_center/collections:
    get:
      description: "You can fetch a list of all collections by making a GET request\
        \ to `https://api.intercom.io/help_center/collections`.\n\n> \U0001F4D8 How\
        \ are the collections sorted and ordered?\n>\n> Collections will be returned\
        \ in descending order on the `updated_at` attribute. This means if you need\
        \ to iterate through results then we'll show the most recently updated collections\
        \ first.\n"
      operationId: listAllCollections
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      responses:
        '200':
          content:
            application/json:
              examples:
                Successful:
                  value:
                    data:
                    - created_at: 1683886489
                      description: english collection description
                      icon: bookmark
                      id: '83761'
                      name: English collection title
                      order: 15
                      type: collection
                      updated_at: 1683886489
                      url: http://help-center.test/myapp-50/collection-15
                      workspace_id: this_is_an_id50_that_should_be_at_least_4
                    pages:
                      page: 1
                      per_page: 20
                      total_pages: 1
                      type: pages
                    total_count: 1
                    type: list
              schema:
                oneOf:
                - $ref: '#/components/schemas/collection_list'
                - type: object
          description: Successful
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: bc2fd8b8-c381-4569-958c-0029c5d6f679
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
      summary: List all collections
      tags:
      - Help Center
    post:
      description: You can create a new collection by making a POST request to `https://api.intercom.io/help_center/collections.`
      operationId: createCollection
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      requestBody:
        content:
          application/json:
            examples:
              bad_request:
                summary: Bad Request
                value:
                  description: Missing required parameter
              collection_created:
                summary: collection created
                value:
                  name: Thanks for everything
            schema:
              $ref: '#/components/schemas/create_collection_request'
      responses:
        '200':
          content:
            application/json:
              examples:
                collection created:
                  value:
                    created_at: 1683886491
                    description: null
                    icon: book-bookmark
                    id: '83767'
                    name: Thanks for everything
                    order: 1
                    type: collection
                    updated_at: 1683886491
                    url: http://help-center.test/myapp-54/
                    workspace_id: this_is_an_id54_that_should_be_at_least_4
              schema:
                oneOf:
                - $ref: '#/components/schemas/collection'
                - type: object
          description: collection created
        '400':
          content:
            application/json:
              examples:
                Bad Request:
                  value:
                    errors:
                    - code: parameter_not_found
                      message: Name is a required parameter.
                    request_id: 71e9b4e7-4edc-4924-9d5c-02a5cfc3b1a3
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Bad Request
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: 038a68d1-78e3-43c1-ac0f-47cc3e02184a
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
      summary: Create a collection
      tags:
      - Help Center
  /help_center/collections/{id}:
    delete:
      description: You can delete a single collection by making a DELETE request to
        `https://api.intercom.io/collections/<id>`.
      operationId: deleteCollection
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - description: The unique identifier for the collection which is given by Intercom.
        example: 123
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              examples:
                successful:
                  value:
                    deleted: true
                    id: '83784'
                    object: collection
              schema:
                oneOf:
                - $ref: '#/components/schemas/deleted_collection_object'
                - type: object
          description: successful
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: bbf63242-3874-4379-ad43-1b46f76151c6
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
        '404':
          content:
            application/json:
              examples:
                collection Not Found:
                  value:
                    errors:
                    - code: not_found
                      message: Resource Not Found
                    request_id: a8c9ea69-00fd-49e4-be60-7b7b48009fd7
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: collection Not Found
      summary: Delete a collection
      tags:
      - Help Center
    get:
      description: You can fetch the details of a single collection by making a GET
        request to `https://api.intercom.io/help_center/collections/<id>`.
      operationId: retrieveCollection
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - description: The unique identifier for the collection which is given by Intercom.
        example: 123
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              examples:
                Collection found:
                  value:
                    created_at: 1683886493
                    description: english collection description
                    icon: bookmark
                    id: '83772'
                    name: English collection title
                    order: 20
                    type: collection
                    updated_at: 1683886493
                    url: http://help-center.test/myapp-60/collection-20
                    workspace_id: this_is_an_id60_that_should_be_at_least_4
              schema:
                oneOf:
                - $ref: '#/components/schemas/collection'
                - type: object
          description: Collection found
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: b964cd76-f5a7-4481-990e-cf7f5e7ab2a3
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
        '404':
          content:
            application/json:
              examples:
                Collection not found:
                  value:
                    errors:
                    - code: not_found
                      message: Resource Not Found
                    request_id: c2a89868-751d-43fa-b8ec-a122e5993fb9
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Collection not found
      summary: Retrieve a collection
      tags:
      - Help Center
    put:
      description: You can update the details of a single collection by making a PUT
        request to `https://api.intercom.io/collections/<id>`.
      operationId: updateCollection
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - description: The unique identifier for the collection which is given by Intercom.
        example: 123
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            examples:
              collection_not_found:
                summary: Collection Not Found
                value:
                  name: Update collection name
              successful:
                summary: successful
                value:
                  name: Update collection name
            schema:
              $ref: '#/components/schemas/update_collection_request'
      responses:
        '200':
          content:
            application/json:
              examples:
                successful:
                  value:
                    created_at: 1683886495
                    description: english collection description
                    icon: bookmark
                    id: '83778'
                    name: Update collection name
                    order: 23
                    type: collection
                    updated_at: 1683886495
                    url: http://help-center.test/myapp-66/collection-23
                    workspace_id: this_is_an_id66_that_should_be_at_least_4
              schema:
                oneOf:
                - $ref: '#/components/schemas/collection'
                - type: object
          description: successful
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: c2bff208-aa1d-4e72-a3b3-1323b0a79af1
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
        '404':
          content:
            application/json:
              examples:
                Collection Not Found:
                  value:
                    errors:
                    - code: not_found
                      message: Resource Not Found
                    request_id: 44fef2ea-fd55-4916-9e1f-c9be259bcd96
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Collection Not Found
      summary: Update a collection
      tags:
      - Help Center
  /help_center/sections:
    get:
      description: "You can fetch a list of all sections by making a GET request to\
        \ `https://api.intercom.io/help_center/sections`.\n> \U0001F4D8 How are the\
        \ sections sorted and ordered?\n>\n> Sections will be returned in descending\
        \ order on the `updated_at` attribute. This means if you need to iterate through\
        \ results then we'll show the most recently updated sections first.\n"
      operationId: listAllSections
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      responses:
        '200':
          content:
            application/json:
              examples:
                Successful:
                  value:
                    data:
                    - created_at: 1683886498
                      id: '83791'
                      name: English section title
                      order: 15
                      parent_id: 83790
                      type: section
                      updated_at: 1683886498
                      url: http://help-center.test/myapp-78/section-15
                      workspace_id: this_is_an_id78_that_should_be_at_least_4
                    pages:
                      page: 1
                      per_page: 20
                      total_pages: 1
                      type: pages
                    total_count: 1
                    type: list
              schema:
                oneOf:
                - $ref: '#/components/schemas/section_list'
                - type: object
          description: Successful
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: 75bcc7f3-3b33-4e4a-a92e-b7092470d04a
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
      summary: List all sections
      tags:
      - Help Center
    post:
      description: You can create a new section by making a POST request to `https://api.intercom.io/help_center/sections.`
      operationId: createSection
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      requestBody:
        content:
          application/json:
            examples:
              bad_request:
                summary: Bad Request
                value:
                  name: Missing required parameter
              section_created:
                summary: section created
                value:
                  name: Thanks for everything
                  parent_id: 83794
            schema:
              $ref: '#/components/schemas/create_section_request'
      responses:
        '200':
          content:
            application/json:
              examples:
                section created:
                  value:
                    created_at: 1683886500
                    id: '83796'
                    name: Thanks for everything
                    order: 1
                    parent_id: '83794'
                    type: section
                    updated_at: 1683886500
                    url: http://help-center.test/myapp-82/
                    workspace_id: this_is_an_id82_that_should_be_at_least_4
              schema:
                oneOf:
                - $ref: '#/components/schemas/section'
                - type: object
          description: section created
        '400':
          content:
            application/json:
              examples:
                Bad Request:
                  value:
                    created_at: 1683886501
                    id: '83799'
                    name: Missing required parameter
                    order: 1
                    parent_id: home
                    type: section
                    updated_at: 1683886501
                    url: http://help-center.test/myapp-84/
                    workspace_id: this_is_an_id84_that_should_be_at_least_4
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Bad Request
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: 43cac576-57e9-455a-9f50-7f61a58c7b73
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
      summary: Create a section
      tags:
      - Help Center
  /help_center/sections/{id}:
    delete:
      description: You can delete a single section by making a DELETE request to `https://api.intercom.io/sections/<id>`.
      operationId: deleteSection
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - description: The unique identifier for the section which is given by Intercom.
        example: 123
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              examples:
                successful:
                  value:
                    deleted: true
                    id: '83815'
                    object: section
              schema:
                oneOf:
                - $ref: '#/components/schemas/deleted_section_object'
                - type: object
          description: successful
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: 716b51a1-41e1-4beb-bc6b-905848c815a9
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
        '404':
          content:
            application/json:
              examples:
                section Not Found:
                  value:
                    errors:
                    - code: not_found
                      message: Resource Not Found
                    request_id: f7e9bfc0-4620-46b2-8bca-be8cbcc2d6ad
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: section Not Found
      summary: Delete a section
      tags:
      - Help Center
    get:
      description: You can fetch the details of a single section by making a GET request
        to `https://api.intercom.io/help_center/sections/<id>`.
      operationId: retrieveSection
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - description: The unique identifier for the section which is given by Intercom.
        example: 123
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              examples:
                Section found:
                  value:
                    created_at: 1683886501
                    id: '83803'
                    name: English section title
                    order: 20
                    parent_id: 83802
                    type: section
                    updated_at: 1683886501
                    url: http://help-center.test/myapp-88/section-20
                    workspace_id: this_is_an_id88_that_should_be_at_least_4
              schema:
                oneOf:
                - $ref: '#/components/schemas/section'
                - type: object
          description: Section found
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: 8fb1595b-0f3e-4d6d-87e4-c1536f21f230
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
        '404':
          content:
            application/json:
              examples:
                Section not found:
                  value:
                    errors:
                    - code: not_found
                      message: Resource Not Found
                    request_id: 8791243a-61eb-40ec-ab40-7bd23ae8f1a7
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Section not found
      summary: Retrieve a section
      tags:
      - Help Center
    put:
      description: You can update the details of a single section by making a PUT
        request to `https://api.intercom.io/sections/<id>`.
      operationId: updateSection
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - description: The unique identifier for the section which is given by Intercom.
        example: 123
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            examples:
              section_not_found:
                summary: Section Not Found
                value:
                  name: Update section name
                  parent_id: 83810
              successful:
                summary: successful
                value:
                  name: Update section name
                  parent_id: 83808
            schema:
              $ref: '#/components/schemas/update_section_request'
      responses:
        '200':
          content:
            application/json:
              examples:
                successful:
                  value:
                    created_at: 1683886503
                    id: '83809'
                    name: Update section name
                    order: 23
                    parent_id: '83808'
                    type: section
                    updated_at: 1683886504
                    url: http://help-center.test/myapp-94/section-23
                    workspace_id: this_is_an_id94_that_should_be_at_least_4
              schema:
                oneOf:
                - $ref: '#/components/schemas/section'
                - type: object
          description: successful
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: ccc32bb7-97dc-40ef-8291-f3e5eaa6f275
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
        '404':
          content:
            application/json:
              examples:
                Section Not Found:
                  value:
                    errors:
                    - code: not_found
                      message: Resource Not Found
                    request_id: 9e034b52-e299-4768-b1bc-7029094e08d0
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Section Not Found
      summary: Update a section
      tags:
      - Help Center
  /me:
    get:
      description: "\nYou can view the currently authorised admin along with the embedded\
        \ app object (a \"workspace\" in legacy terminology).\n\n> \U0001F6A7 Single\
        \ Sign On\n>\n> If you are building a custom \"Log in with Intercom\" flow\
        \ for your site, and you call the `/me` endpoint to identify the logged-in\
        \ user, you should not accept any sign-ins from users with unverified email\
        \ addresses as it poses a potential impersonation security risk.\n"
      operationId: identifyAdmin
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      responses:
        '200':
          content:
            application/json:
              examples:
                Successful response:
                  value:
                    app:
                      created_at: 1683886464
                      id_code: this_is_an_id1_that_should_be_at_least_40
                      identity_verification: false
                      name: MyApp 1
                      region: US
                      secure: false
                      timezone: America/Los_Angeles
                      type: app
                    avatar:
                      image_url: https://static.intercomassets.com/assets/default-avatars/admins/128.png
                      type: avatar
                    email: admin1@email.com
                    email_verified: true
                    has_inbox_seat: true
                    id: '991266214'
                    name: Ciaran1 Lee
                    type: admin
              schema:
                oneOf:
                - $ref: '#/components/schemas/admin_with_app'
                - type: object
          description: Successful response
      summary: Identify an admin
      tags:
      - Admins
  /messages:
    post:
      description: "You can create a message that has been initiated by an admin.\
        \ The conversation can be either an in-app message or an email.\n\n> \U0001F6A7\
        \ Sending for visitors\n>\n> There can be a short delay between when a contact\
        \ is created and when a contact becomes available to be messaged through the\
        \ API. A 404 Not Found error will be returned in this case.\n\nThis will return\
        \ the Message model that has been created.\n\n> \U0001F6A7 Retrieving Associated\
        \ Conversations\n>\n> As this is a message, there will be no conversation\
        \ present until the contact responds. Once they do, you will have to search\
        \ for a contact's conversations with the id of the message.\n"
      operationId: createMessage
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      requestBody:
        content:
          application/json:
            examples:
              admin_message_created:
                summary: admin message created
                value:
                  body: heyy
                  from:
                    id: '991266524'
                    type: admin
                  message_type: conversation
                  to:
                    id: 645e132e05a7e7570bfa4cd0
                    type: user
              lead_message_created:
                summary: lead message created
                value:
                  body: heyy
                  from:
                    id: 645e132d05a7e7570bfa4ccf
                    type: lead
                  referer: https://twitter.com/bob
              no_body_supplied_for_email_message:
                summary: No body supplied for email message
                value:
                  body: null
                  from:
                    id: '991266527'
                    type: admin
                  message_type: email
                  subject: heyy
                  to:
                    id: 645e133105a7e7570bfa4cd3
                    type: user
              no_body_supplied_for_message:
                summary: No body supplied for message
                value:
                  body: null
                  from:
                    id: '991266525'
                    type: admin
                  message_type: inapp
                  subject: heyy
                  to:
                    id: 645e132f05a7e7570bfa4cd1
                    type: user
              no_subject_supplied_for_email_message:
                summary: No subject supplied for email message
                value:
                  body: hey there
                  from:
                    id: '991266526'
                    type: admin
                  message_type: email
                  to:
                    type: user
                    user_id: '70'
              user_message_created:
                summary: user message created
                value:
                  body: heyy
                  from:
                    id: 645e132b05a7e7570bfa4cce
                    type: user
                  referer: https://twitter.com/bob
            schema:
              $ref: '#/components/schemas/create_message_request'
      responses:
        '200':
          content:
            application/json:
              examples:
                admin message created:
                  value:
                    body: heyy
                    created_at: 1683886895
                    id: '458089'
                    message_type: inapp
                    owner:
                      away_mode_enabled: false
                      away_mode_reassign: false
                      email: admin252@email.com
                      id: '991266524'
                      name: Ciaran252 Lee
                      type: admin
                    subject: heyy
                    type: admin_message
                lead message created:
                  value:
                    body: heyy
                    conversation_id: '695342'
                    created_at: 1683886893
                    id: '403918142'
                    message_type: inapp
                    type: user_message
                user message created:
                  value:
                    body: heyy
                    conversation_id: '695341'
                    created_at: 1683886892
                    id: '403918141'
                    message_type: inapp
                    type: user_message
              schema:
                oneOf:
                - $ref: '#/components/schemas/message'
                - type: object
          description: admin message created
        '400':
          content:
            application/json:
              examples:
                No body supplied for email message:
                  value:
                    errors:
                    - code: parameter_invalid
                      message: Body is required
                    request_id: f66621c7-f100-4e71-a7cf-d20074bec450
                    type: error.list
                No body supplied for message:
                  value:
                    errors:
                    - code: parameter_invalid
                      message: Body is required
                    request_id: 40016fba-2910-4f9c-98c9-c5dd9def41cb
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: No body supplied for email message
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: 9f3b0d7a-cab2-4f6a-87f4-f760c809bf0c
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
        '403':
          content:
            application/json:
              examples:
                API plan restricted:
                  value:
                    errors:
                    - code: api_plan_restricted
                      message: Active subscription needed.
                    request_id: 7c1134f9-0db5-405d-bffb-26cb01333031
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: API plan restricted
        '422':
          content:
            application/json:
              examples:
                No subject supplied for email message:
                  value:
                    errors:
                    - code: parameter_not_found
                      message: No subject supplied for email message
                    request_id: c35b746b-5306-49d4-ba59-6dc71c28d3c1
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: No subject supplied for email message
      summary: Create a message
      tags:
      - Messages
  /news/news_items:
    get:
      description: You can fetch a list of all news items
      operationId: listNewsItems
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      responses:
        '200':
          content:
            application/json:
              examples:
                successful:
                  value:
                    data:
                    - body: <p>Hello there,</p>
                      cover_image_url: null
                      created_at: 1683886899
                      deliver_silently: false
                      id: '386447'
                      labels: []
                      newsfeed_assignments: []
                      reactions:
                      - null
                      - null
                      - null
                      - null
                      sender_id: 991266532
                      state: draft
                      title: We have news
                      type: news-item
                      updated_at: 1683886899
                      workspace_id: this_is_an_id445_that_should_be_at_least_
                    - body: <p>Hello there,</p>
                      cover_image_url: null
                      created_at: 1683886899
                      deliver_silently: false
                      id: '386448'
                      labels: []
                      newsfeed_assignments: []
                      reactions:
                      - null
                      - null
                      - null
                      - null
                      sender_id: 991266534
                      state: draft
                      title: We have news
                      type: news-item
                      updated_at: 1683886899
                      workspace_id: this_is_an_id445_that_should_be_at_least_
                    pages:
                      page: 1
                      per_page: 10
                      total_pages: 1
                      type: pages
                    total_count: 2
                    type: list
              schema:
                oneOf:
                - $ref: '#/components/schemas/paginated_response'
                - type: object
          description: successful
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: 2fbd985e-f124-4a68-bd46-6d09505aaadd
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
      summary: List all news items
      tags:
      - News
    post:
      description: You can create a news item
      operationId: createNewsItem
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      requestBody:
        content:
          application/json:
            examples:
              successful:
                summary: successful
                value:
                  body: <p>New costumes in store for this spooky season</p>
                  deliver_silently: true
                  labels:
                  - Product
                  - Update
                  - New
                  newsfeed_assignments:
                  - newsfeed_id: 391494
                    published_at: 1664638214
                  reactions:
                  - "\U0001F606"
                  - "\U0001F605"
                  sender_id: 991266541
                  state: live
                  title: Halloween is here!
            schema:
              $ref: '#/components/schemas/news_item_request'
      responses:
        '200':
          content:
            application/json:
              examples:
                successful:
                  value:
                    body: <p>New costumes in store for this spooky season</p>
                    cover_image_url: null
                    created_at: 1683886903
                    deliver_silently: true
                    id: '386451'
                    labels:
                    - New
                    - Product
                    - Update
                    newsfeed_assignments:
                    - newsfeed_id: 391494
                      published_at: 1664638214
                    reactions:
                    - "\U0001F606"
                    - "\U0001F605"
                    sender_id: 991266541
                    state: live
                    title: Halloween is here!
                    type: news-item
                    updated_at: 1683886903
                    workspace_id: this_is_an_id449_that_should_be_at_least_
              schema:
                oneOf:
                - $ref: '#/components/schemas/news_item'
                - type: object
          description: successful
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: 58bc1356-2987-4217-9fab-42aa7ebd4474
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
      summary: Create a news item
      tags:
      - News
  /news/news_items/{id}:
    delete:
      description: You can delete a single news item.
      operationId: deleteNewsItem
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - description: The unique identifier for the news item which is given by Intercom.
        example: 123
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              examples:
                successful:
                  value:
                    deleted: true
                    id: '386458'
                    object: news-item
              schema:
                oneOf:
                - $ref: '#/components/schemas/deleted_object'
                - type: object
          description: successful
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: cd323871-97dd-4d78-bde7-42c56221758c
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
        '404':
          content:
            application/json:
              examples:
                News Item Not Found:
                  value:
                    errors:
                    - code: not_found
                      message: Resource Not Found
                    request_id: f2e329e0-2724-4f49-a3d1-424f858f1866
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: News Item Not Found
      summary: Delete a news item
      tags:
      - News
    get:
      description: You can fetch the details of a single news item.
      operationId: retrieveNewsItem
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - description: The unique identifier for the news item which is given by Intercom.
        example: 123
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              examples:
                successful:
                  value:
                    body: <p>Hello there,</p>
                    cover_image_url: null
                    created_at: 1683886905
                    deliver_silently: false
                    id: '386452'
                    labels: []
                    newsfeed_assignments:
                    - newsfeed_id: 391496
                      published_at: 1683886905
                    reactions:
                    - null
                    - null
                    - null
                    - null
                    sender_id: 991266544
                    state: live
                    title: We have news
                    type: news-item
                    updated_at: 1683886905
                    workspace_id: this_is_an_id453_that_should_be_at_least_
              schema:
                oneOf:
                - $ref: '#/components/schemas/news_item'
                - type: object
          description: successful
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: 28e9debc-dd5b-4844-9fa9-725200381bd9
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
        '404':
          content:
            application/json:
              examples:
                News Item Not Found:
                  value:
                    errors:
                    - code: not_found
                      message: Resource Not Found
                    request_id: d1056a7d-84f5-49b1-a6eb-4ab7d80d48cd
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: News Item Not Found
      summary: Retrieve a news item
      tags:
      - News
    put:
      operationId: updateNewsItem
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - description: The unique identifier for the news item which is given by Intercom.
        example: 123
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            examples:
              news_item_not_found:
                summary: News Item Not Found
                value:
                  body: <p>New gifts in store for the jolly season</p>
                  reactions:
                  - "\U0001F61D"
                  - "\U0001F602"
                  sender_id: 991266555
                  title: Christmas is here!
              successful:
                summary: successful
                value:
                  body: <p>New gifts in store for the jolly season</p>
                  reactions:
                  - "\U0001F61D"
                  - "\U0001F602"
                  sender_id: 991266552
                  title: Christmas is here!
            schema:
              $ref: '#/components/schemas/news_item_request'
      responses:
        '200':
          content:
            application/json:
              examples:
                successful:
                  value:
                    body: <p>New gifts in store for the jolly season</p>
                    cover_image_url: null
                    created_at: 1683886907
                    deliver_silently: false
                    id: '386455'
                    labels: []
                    newsfeed_assignments: []
                    reactions:
                    - "\U0001F61D"
                    - "\U0001F602"
                    sender_id: 991266552
                    state: live
                    title: Christmas is here!
                    type: news-item
                    updated_at: 1683886908
                    workspace_id: this_is_an_id459_that_should_be_at_least_
              schema:
                oneOf:
                - $ref: '#/components/schemas/news_item'
                - type: object
          description: successful
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: a9a4b8da-64b9-457d-bc97-a968a0952b6c
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
        '404':
          content:
            application/json:
              examples:
                News Item Not Found:
                  value:
                    errors:
                    - code: not_found
                      message: Resource Not Found
                    request_id: df1dcd92-950b-4ea6-bf53-946a01032102
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: News Item Not Found
      summary: Update a news item
      tags:
      - News
  /news/newsfeeds:
    get:
      description: You can fetch a list of all newsfeeds
      operationId: listNewsfeeds
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      responses:
        '200':
          content:
            application/json:
              examples:
                successful:
                  value:
                    data:
                    - created_at: 1683886914
                      id: '391509'
                      name: Visitor Feed
                      type: newsfeed
                      updated_at: 1683886914
                    - created_at: 1683886914
                      id: '391510'
                      name: Visitor Feed
                      type: newsfeed
                      updated_at: 1683886914
                    pages:
                      page: 1
                      per_page: 10
                      total_pages: 1
                      type: pages
                    total_count: 2
                    type: list
              schema:
                oneOf:
                - $ref: '#/components/schemas/paginated_response'
                - type: object
          description: successful
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: febc79bb-f27b-4dd4-a11b-8b0a5f1b6c1d
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
      summary: List all newsfeeds
      tags:
      - News
  /news/newsfeeds/{id}:
    get:
      description: You can fetch the details of a single newsfeed
      operationId: retrieveNewsfeed
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - description: The unique identifier for the news feed item which is given by
          Intercom.
        example: '123'
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                successful:
                  value:
                    created_at: 1683886916
                    id: '391513'
                    name: Visitor Feed
                    type: newsfeed
                    updated_at: 1683886916
              schema:
                oneOf:
                - $ref: '#/components/schemas/newsfeed'
                - type: object
          description: successful
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: 1b310958-28d1-44e6-bdc2-aea3e7573e59
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
      summary: Retrieve a newsfeed
      tags:
      - News
  /news/newsfeeds/{id}/items:
    get:
      description: You can fetch a list of all news items that are live on a given
        newsfeed
      operationId: listLiveNewsfeedItems
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - description: The unique identifier for the news feed item which is given by
          Intercom.
        example: '123'
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                successful:
                  value:
                    data: []
                    pages:
                      page: 1
                      per_page: 20
                      total_pages: 0
                      type: pages
                    total_count: 0
                    type: list
              schema:
                oneOf:
                - $ref: '#/components/schemas/paginated_response'
                - type: object
          description: successful
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: 6c3fb5cd-6662-49e0-93c7-789976e38e6f
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
      summary: List all live newsfeed items
      tags:
      - News
  /notes/{id}:
    get:
      description: You can fetch the details of a single note.
      operationId: retrieveNote
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - description: The unique identifier of a given note
        example: 1
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              examples:
                Note found:
                  value:
                    author:
                      away_mode_enabled: false
                      away_mode_reassign: false
                      email: admin299@email.com
                      id: '991266571'
                      name: Ciaran299 Lee
                      type: admin
                    body: <p>This is a note.</p>
                    contact:
                      id: 645e134905a7e7570bfa4cde
                      type: contact
                    created_at: 1683195720
                    id: '393530'
                    type: note
              schema:
                oneOf:
                - $ref: '#/components/schemas/note'
                - type: object
          description: Note found
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: b51b74e4-9fd2-403a-85ff-914397d4dfde
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
        '404':
          content:
            application/json:
              examples:
                Note not found:
                  value:
                    errors:
                    - code: not_found
                      message: Resource Not Found
                    request_id: a9e9069a-64ee-4858-9e60-86fc03535729
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Note not found
      summary: Retrieve a note
      tags:
      - Notes
  /phone_call_redirects:
    post:
      description: 'You can use the API to deflect phone calls to the Intercom Messenger.

        Calling this endpoint will send an SMS with a link to the Messenger to the
        phone number specified.


        If custom attributes are specified, they will be added to the user or lead''s
        custom data attributes.

        '
      operationId: createPhoneSwitch
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      requestBody:
        content:
          application/json:
            examples:
              bad_request_-_exception_sending_sms:
                summary: bad request - exception sending sms
                value:
                  custom_attributes:
                    issue_type: Billing
                    priority: High
                  phone: '+353832345678'
              bad_request_-_invalid_number:
                summary: bad request - invalid number
                value:
                  custom_attributes:
                    issue_type: Billing
                    priority: High
                  phone: '+353832345678'
              successful:
                summary: successful
                value:
                  custom_attributes:
                    issue_type: Billing
                    priority: High
                  phone: '+353832345678'
              unprocessable_entity:
                summary: unprocessable entity
                value:
                  custom_attributes:
                    issue_type: Billing
                    priority: High
                  phone: '+40241100100'
            schema:
              $ref: '#/components/schemas/create_phone_switch_request'
      responses:
        '200':
          content:
            application/json:
              examples:
                successful:
                  value:
                    type: phone_call_redirect
                    url: http://via.intercom.io/msgr/11c8092e-988f-4143-bbdd-a545878c28bc
              schema:
                oneOf:
                - $ref: '#/components/schemas/phone_switch'
                - type: object
          description: successful
        '400':
          content:
            application/json:
              examples:
                bad request - exception sending sms:
                  value:
                    error_key: sms_failed
                    message: SMS was not sent due to an unknown error
                bad request - invalid number:
                  value:
                    error_key: invalid_phone_number
                    message: Invalid phone number
          description: bad request - invalid number
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: 7ea108d1-a75d-467c-9ec1-786f4631f6d4
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
        '422':
          content:
            application/json:
              examples:
                unprocessable entity:
                  value:
                    error_key: some_error
          description: unprocessable entity
      summary: Create a phone Switch
      tags:
      - Switch
  /segments:
    get:
      description: You can fetch a list of all segments.
      operationId: listSegments
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - description: It includes the count of contacts that belong to each segment.
        example: true
        in: query
        name: include_count
        required: false
        schema:
          type: boolean
      responses:
        '200':
          content:
            application/json:
              examples:
                Successful response:
                  value:
                    segments:
                    - created_at: 1683886928
                      id: 645e135005a7e7570bfa4ce6
                      name: Jane segment
                      person_type: user
                      type: segment
                      updated_at: 1683886928
                    - created_at: 1683886928
                      id: 645e135005a7e7570bfa4ce5
                      name: John segment
                      person_type: user
                      type: segment
                      updated_at: 1683886928
                    type: segment.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/segment_list'
                - type: object
          description: Successful response
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: 58ad8f82-dad9-4d09-bb07-43f1c57d54ef
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
      summary: List all segments
      tags:
      - Segments
  /segments/{id}:
    get:
      description: You can fetch the details of a single segment.
      operationId: retrieveSegment
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - description: The unique identified of a given segment.
        example: '123'
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                Successful response:
                  value:
                    created_at: 1683886929
                    id: 645e135105a7e7570bfa4ce9
                    name: John segment
                    person_type: user
                    type: segment
                    updated_at: 1683886929
              schema:
                oneOf:
                - $ref: '#/components/schemas/segment'
                - type: object
          description: Successful response
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: 1616860e-0b75-4131-b880-97839c0893b2
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
        '404':
          content:
            application/json:
              examples:
                Segment not found:
                  value:
                    errors:
                    - code: not_found
                      message: Resource Not Found
                    request_id: f430bafd-cd0e-43ca-8210-62135a66722b
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Segment not found
      summary: Retrieve a segment
      tags:
      - Segments
  /subscription_types:
    get:
      description: You can list all subscription types. A list of subscription type
        objects will be returned.
      operationId: listSubscriptionTypes
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      responses:
        '200':
          content:
            application/json:
              examples:
                Successful:
                  value:
                    data:
                    - consent_type: opt_out
                      content_types:
                      - email
                      default_translation:
                        description: Lorem ipsum dolor sit amet
                        locale: en
                        name: Newsletters
                      id: '428869'
                      state: live
                      translations:
                      - description: Lorem ipsum dolor sit amet
                        locale: en
                        name: Newsletters
                      type: subscription
                    type: list
              schema:
                oneOf:
                - $ref: '#/components/schemas/subscription_type_list'
                - type: object
          description: Successful
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: c954d983-ff38-410f-a633-33595297ba19
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
      summary: List subscription types
      tags:
      - Subscription Types
  /tags:
    get:
      description: 'You can fetch a list of all tags for a given workspace.


        '
      operationId: listTags
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      responses:
        '200':
          content:
            application/json:
              examples:
                successful:
                  value:
                    data:
                    - id: '309795'
                      name: Manual tag 1
                      type: tag
                    type: list
              schema:
                oneOf:
                - $ref: '#/components/schemas/tag_list'
                - type: object
          description: successful
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: cf8280d9-e3d6-4a1d-a074-1cfbbcaa6a44
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
      summary: List all tags
      tags:
      - Tags
    post:
      description: "You can use this endpoint to perform the following operations:\n\
        \n  **1. Create a new tag:** You can create a new tag by passing in the tag\
        \ name as specified in \"Create or Update Tag Request Payload\" described\
        \ below.\n\n  **2. Update an existing tag:** You can update an existing tag\
        \ by passing the id of the tag as specified in \"Create or Update Tag Request\
        \ Payload\" described below.\n\n  **3. Tag Companies:** You can tag single\
        \ company or a list of companies. You can tag a company by passing in the\
        \ tag name and the company details as specified in \"Tag Company Request Payload\"\
        \ described below. Also, if the tag doesn't exist then a new one will be created\
        \ automatically.\n\n  **4. Untag Companies:** You can untag a single company\
        \ or a list of companies. You can untag a company by passing in the tag id\
        \ and the company details as specified in \"Untag Company Request Payload\"\
        \ described below.\n\n  **5. Tag Multiple Users:** You can tag a list of users.\
        \ You can tag the users by passing in the tag name and the user details as\
        \ specified in \"Tag Users Request Payload\" described below.\n\nEach operation\
        \ will return a tag object.\n"
      operationId: createTag
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      requestBody:
        content:
          application/json:
            examples:
              action_successful:
                summary: Action successful
                value:
                  name: test
              company_not_found:
                summary: Company not found
                value:
                  companies:
                  - company_id: '123'
                  name: test
              invalid_parameters:
                summary: Invalid parameters
                value:
                  test: invalid
              user_not_found:
                summary: User  not found
                value:
                  name: test
                  users:
                  - id: '123'
            schema:
              oneOf:
              - $ref: '#/components/schemas/create_or_update_tag_request'
              - $ref: '#/components/schemas/tag_company_request'
              - $ref: '#/components/schemas/untag_company_request'
              - $ref: '#/components/schemas/tag_multiple_users_request'
      responses:
        '200':
          content:
            application/json:
              examples:
                Action successful:
                  value:
                    id: '309798'
                    name: test
                    type: tag
              schema:
                oneOf:
                - $ref: '#/components/schemas/tag'
                - type: object
          description: Action successful
        '400':
          content:
            application/json:
              examples:
                Invalid parameters:
                  value:
                    errors:
                    - code: parameter_invalid
                      message: invalid tag parameters
                    request_id: 8584a076-9f74-4e24-8b96-97afb6d81187
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Invalid parameters
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: 9334aa8b-e7bb-4695-91f1-2c8c5a6329ee
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
        '404':
          content:
            application/json:
              examples:
                Company not found:
                  value:
                    errors:
                    - code: company_not_found
                      message: Company Not Found
                    request_id: ea5e2e28-88b4-4f38-a8d3-7553e9c8b5c2
                    type: error.list
                User  not found:
                  value:
                    errors:
                    - code: not_found
                      message: User Not Found
                    request_id: 78827a79-e59d-4591-a0f7-23a111734719
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: User  not found
      summary: Create or update a tag, Tag or untag companies, Tag contacts
      tags:
      - Tags
  /tags/{id}:
    delete:
      description: You can delete the details of tags that are on the workspace by
        passing in the id.
      operationId: deleteTag
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - description: The unique identifier of a given tag
        example: '123'
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful
        '400':
          content:
            application/json:
              examples:
                Tag has dependent objects:
                  value:
                    errors:
                    - code: tag_has_dependent_objects
                      message: 'Unable to delete Tag with dependent objects. Segments:
                        Seg 1.'
                    request_id: 5e6a3f0d-4d50-45d6-a009-dd8bfc84f364
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Tag has dependent objects
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: f209e13d-ecff-4e73-b065-fba67ffb3310
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
        '404':
          content:
            application/json:
              examples:
                Resource not found:
                  value:
                    errors:
                    - code: not_found
                      message: Resource Not Found
                    request_id: 14095040-5b54-461a-9e4e-d154695853dd
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Resource not found
      summary: Delete tag
      tags:
      - Tags
    get:
      description: 'You can fetch the details of tags that are on the workspace by
        their id.

        This will return a tag object.

        '
      operationId: findTag
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - description: The unique identifier of a given tag
        example: '123'
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                Tag found:
                  value:
                    id: '309806'
                    name: Manual tag
                    type: tag
              schema:
                oneOf:
                - $ref: '#/components/schemas/tag'
                - type: object
          description: Tag found
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: f417082f-94a3-42ca-8dff-bdc214368447
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
        '404':
          content:
            application/json:
              examples:
                Tag not found:
                  value:
                    errors:
                    - code: not_found
                      message: Resource Not Found
                    request_id: 8fab7a0c-5bd8-465f-93ab-2039c36c0106
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Tag not found
      summary: Find a specific tag
      tags:
      - Tags
  /teams:
    get:
      description: This will return a list of team objects for the App.
      operationId: listTeams
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      responses:
        '200':
          content:
            application/json:
              examples:
                successful:
                  value:
                    teams: []
                    type: team.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/team_list'
                - type: object
          description: successful
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: d59ec96f-42bb-4e5e-99da-10de98edb1e6
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
      summary: List all teams
      tags:
      - Teams
  /teams/{id}:
    get:
      description: You can fetch the details of a single team, containing an array
        of admins that belong to this team.
      operationId: retrieveTeam
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - description: The unique identifier of a given team.
        example: '123'
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                successful:
                  value:
                    admin_ids: []
                    id: '991266615'
                    name: team 1
                    type: team
              schema:
                oneOf:
                - $ref: '#/components/schemas/team'
                - type: object
          description: successful
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: b6fe7b0b-d261-443f-bfd6-234020bcf835
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
        '404':
          content:
            application/json:
              examples:
                Team not found:
                  value:
                    errors:
                    - code: team_not_found
                      message: Team not found
                    request_id: 3270706c-bfa3-49da-8eed-c5f49af6da7c
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Team not found
      summary: Retrieve a team
      tags:
      - Teams
  /ticket_types:
    get:
      description: You can get a list of all ticket types for a workspace.
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      responses:
        '200':
          content:
            application/json:
              examples:
                successful:
                  value:
                    data:
                    - archived: false
                      created_at: 1683886964
                      description: Bug Report Template
                      icon: "\U0001F39F\uFE0F"
                      id: '744646'
                      is_internal: false
                      name: Bug Report
                      ticket_type_attributes:
                        data:
                        - archived: false
                          created_at: 1683886964
                          data_type: string
                          default: false
                          description: description
                          id: '157424'
                          input_options: null
                          name: name
                          order: 0
                          required_to_create: false
                          required_to_create_for_contacts: false
                          ticket_type_id: 744646
                          type: ticket_type_attribute
                          updated_at: 1683886964
                          visible_on_create: false
                          visible_to_contacts: false
                          workspace_id: this_is_an_id559_that_should_be_at_least_
                        type: list
                      type: ticket_type
                      updated_at: 1683886964
                      workspace_id: this_is_an_id559_that_should_be_at_least_
                    type: list
              schema:
                oneOf:
                - $ref: '#/components/schemas/ticket_type_list'
                - type: object
          description: successful
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: b66d2d76-8653-4200-8fe2-8c0d50329f91
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
      summary: List all ticket types
      tags:
      - Ticket Types
    post:
      description: "You can create a new ticket type.\n> \U0001F4D8 Creating ticket\
        \ types.\n>\n> Every ticket type will be created with two default attributes:\
        \ _default_title_ and _default_description_.\n> For the `icon` propery, use\
        \ an emoji from [Twemoji Cheatsheet](https://twemoji-cheatsheet.vercel.app/)\n"
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      requestBody:
        content:
          application/json:
            examples:
              ticket_type_created:
                summary: Ticket type created
                value:
                  description: Customer Report Template
                  icon: "\U0001F39F\uFE0F"
                  name: Customer Issue
            schema:
              $ref: '#/components/schemas/create_ticket_type_request'
      responses:
        '200':
          content:
            application/json:
              examples:
                Ticket type created:
                  value:
                    archived: false
                    created_at: 1683886966
                    description: Customer Report Template
                    icon: "\U0001F39F\uFE0F"
                    id: '744649'
                    is_internal: false
                    name: Customer Issue
                    ticket_type_attributes:
                      data: []
                      type: list
                    type: ticket_type
                    updated_at: 1683886966
                    workspace_id: this_is_an_id563_that_should_be_at_least_
              schema:
                oneOf:
                - $ref: '#/components/schemas/ticket_type'
                - type: object
          description: Ticket type created
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: 04ffe2db-1f87-444c-a15c-eb1ceae0adc1
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
      summary: Create a ticket type
      tags:
      - Ticket Types
  /ticket_types/{id}:
    get:
      description: You can fetch the details of a single ticket type.
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - description: The unique identifier for the ticket type which is given by Intercom.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                Ticket type found:
                  value:
                    archived: false
                    created_at: 1683886967
                    description: Bug Report Template
                    icon: "\U0001F39F\uFE0F"
                    id: '744651'
                    is_internal: false
                    name: Bug Report
                    ticket_type_attributes:
                      data:
                      - archived: false
                        created_at: 1683886967
                        data_type: string
                        default: false
                        description: description
                        id: '157428'
                        input_options: null
                        name: name
                        order: 0
                        required_to_create: false
                        required_to_create_for_contacts: false
                        ticket_type_id: 744651
                        type: ticket_type_attribute
                        updated_at: 1683886967
                        visible_on_create: false
                        visible_to_contacts: false
                        workspace_id: this_is_an_id567_that_should_be_at_least_
                      type: list
                    type: ticket_type
                    updated_at: 1683886967
                    workspace_id: this_is_an_id567_that_should_be_at_least_
              schema:
                oneOf:
                - $ref: '#/components/schemas/ticket_type'
                - type: object
          description: Ticket type found
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: e9d2a12b-1dc9-482a-b0ae-20eaaa2bb2ec
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
      summary: Retrieve a ticket type
      tags:
      - Ticket Types
    put:
      description: "\nYou can update a ticket type.\n\n> \U0001F4D8 Updating a ticket\
        \ type.\n>\n> For the `icon` propery, use an emoji from [Twemoji Cheatsheet](https://twemoji-cheatsheet.vercel.app/)\n"
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - description: The unique identifier for the ticket type which is given by Intercom.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            examples:
              ticket_type_updated:
                summary: Ticket type updated
                value:
                  name: Bug Report 2
            schema:
              $ref: '#/components/schemas/update_ticket_type_request'
      responses:
        '200':
          content:
            application/json:
              examples:
                Ticket type updated:
                  value:
                    archived: false
                    created_at: 1683886969
                    description: Bug Report Template
                    icon: "\U0001F39F\uFE0F"
                    id: '744653'
                    is_internal: false
                    name: Bug Report 2
                    ticket_type_attributes:
                      data:
                      - archived: false
                        created_at: 1683886969
                        data_type: string
                        default: false
                        description: description
                        id: '157430'
                        input_options: null
                        name: name
                        order: 0
                        required_to_create: false
                        required_to_create_for_contacts: false
                        ticket_type_id: 744653
                        type: ticket_type_attribute
                        updated_at: 1683886969
                        visible_on_create: false
                        visible_to_contacts: false
                        workspace_id: this_is_an_id571_that_should_be_at_least_
                      type: list
                    type: ticket_type
                    updated_at: 1683886970
                    workspace_id: this_is_an_id571_that_should_be_at_least_
              schema:
                oneOf:
                - $ref: '#/components/schemas/ticket_type'
                - type: object
          description: Ticket type updated
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: f427579a-7430-4cb4-84c4-2d8f8064bcc2
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
      summary: Update a ticket type
      tags:
      - Ticket Types
  /ticket_types/{ticket_type_id}/attributes:
    post:
      description: You can create a new attribute for a ticket type.
      operationId: createTicketTypeAttribute
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - description: The unique identifier for the ticket type which is given by Intercom.
        in: path
        name: ticket_type_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            examples:
              ticket_type_attribute_created:
                summary: Ticket Type Attribute created
                value:
                  data_type: string
                  description: Attribute Description
                  name: Attribute Title
                  required_to_create: false
            schema:
              $ref: '#/components/schemas/create_ticket_type_attribute_request'
      responses:
        '200':
          content:
            application/json:
              examples:
                Ticket Type Attribute created:
                  value:
                    archived: false
                    created_at: 1683886962
                    data_type: string
                    default: false
                    description: Attribute Description
                    id: '157422'
                    input_options:
                      multiline: false
                    name: Attribute Title
                    order: 0
                    required_to_create: false
                    required_to_create_for_contacts: false
                    ticket_type_id: 744642
                    type: ticket_type_attribute
                    updated_at: 1683886962
                    visible_on_create: true
                    visible_to_contacts: true
                    workspace_id: this_is_an_id551_that_should_be_at_least_
              schema:
                oneOf:
                - $ref: '#/components/schemas/ticket_type_attribute'
                - type: object
          description: Ticket Type Attribute created
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: f5d7ecba-87e0-495f-931b-411ffbd7f55d
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
      summary: Create a new attribute for a ticket type
      tags:
      - Ticket Type Attributes
  /ticket_types/{ticket_type_id}/attributes/{id}:
    put:
      description: You can update an existing attribute for a ticket type.
      operationId: updateTicketTypeAttribute
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - description: The unique identifier for the ticket type which is given by Intercom.
        in: path
        name: ticket_type_id
        required: true
        schema:
          type: string
      - description: The unique identifier for the ticket type attribute which is
          given by Intercom.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            examples:
              ticket_type_attribute_updated:
                summary: Ticket Type Attribute updated
                value:
                  description: New Attribute Description
            schema:
              $ref: '#/components/schemas/update_ticket_type_attribute_request'
      responses:
        '200':
          content:
            application/json:
              examples:
                Ticket Type Attribute updated:
                  value:
                    archived: false
                    created_at: 1683886963
                    data_type: string
                    default: false
                    description: New Attribute Description
                    id: '157423'
                    name: name
                    order: 0
                    required_to_create: false
                    required_to_create_for_contacts: false
                    ticket_type_id: 744644
                    type: ticket_type_attribute
                    updated_at: 1683886963
                    visible_on_create: false
                    visible_to_contacts: false
                    workspace_id: this_is_an_id555_that_should_be_at_least_
              schema:
                oneOf:
                - $ref: '#/components/schemas/ticket_type_attribute'
                - type: object
          description: Ticket Type Attribute updated
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: 1fcfdf39-54ff-4ff1-a309-d4733ce0dcce
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
      summary: Update an existing attribute for a ticket type
      tags:
      - Ticket Type Attributes
  /tickets:
    post:
      description: You can create a new ticket.
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      requestBody:
        content:
          application/json:
            examples:
              successful_response:
                summary: Successful response
                value:
                  contacts:
                  - id: 645e138105a7e7570bfa4d19
                  ticket_attributes:
                    description: there is a problem
                    title: example
                  ticket_type_id: 744657
            schema:
              $ref: '#/components/schemas/create_ticket_request'
      responses:
        '200':
          content:
            application/json:
              examples:
                Successful response:
                  value:
                    admin_assignee_id: '0'
                    contacts:
                      contacts:
                      - id: 645e138105a7e7570bfa4d19
                        role: user
                      type: contact.list
                    created_at: 1683886978
                    id: '695346'
                    team_assignee_id: '0'
                    ticket_attributes:
                      description: there is a problem
                      title: example
                    ticket_parts:
                      ticket_parts:
                      - attachments: []
                        author:
                          email: operator+this_is_an_id579_that_should_be_at_least_@intercom.io
                          id: '991266650'
                          name: Operator
                          type: bot
                        created_at: 1683886978
                        id: '138260'
                        part_type: ticket_state_updated_by_admin
                        previous_ticket_state: submitted
                        redacted: false
                        ticket_state: submitted
                        type: ticket_part
                        updated_at: 1683886978
                      total_count: 1
                      type: ticket_part.list
                    ticket_state: submitted
                    ticket_type:
                      archived: false
                      created_at: 1683886976
                      description: my ticket type description is awesome.
                      icon: "\U0001F981"
                      id: '744657'
                      is_internal: false
                      name: my-ticket-type-3
                      ticket_type_attributes:
                        data:
                        - archived: false
                          created_at: 1683886976
                          data_type: string
                          default: false
                          description: ola
                          id: '157436'
                          input_options: null
                          name: title
                          order: 0
                          required_to_create: true
                          required_to_create_for_contacts: false
                          ticket_type_id: 744657
                          type: ticket_type_attribute
                          updated_at: 1683886976
                          visible_on_create: true
                          visible_to_contacts: false
                          workspace_id: this_is_an_id579_that_should_be_at_least_
                        - archived: false
                          created_at: 1683886977
                          data_type: string
                          default: false
                          description: ola
                          id: '157437'
                          input_options: null
                          name: description
                          order: 0
                          required_to_create: true
                          required_to_create_for_contacts: false
                          ticket_type_id: 744657
                          type: ticket_type_attribute
                          updated_at: 1683886977
                          visible_on_create: true
                          visible_to_contacts: false
                          workspace_id: this_is_an_id579_that_should_be_at_least_
                        type: list
                      type: ticket_type
                      updated_at: 1683886976
                      workspace_id: this_is_an_id579_that_should_be_at_least_
                    type: ticket
                    updated_at: 1683886976
              schema:
                oneOf:
                - $ref: '#/components/schemas/ticket'
                - type: object
          description: Successful response
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: c12608bf-cc39-494d-a822-981eeb4ff8d3
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
      summary: Create a ticket
      tags:
      - Tickets
  /tickets/{id}:
    get:
      description: You can fetch the details of a single ticket.
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - description: The unique identifier for the ticket which is given by Intercom.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                Ticket found:
                  value:
                    admin_assignee_id: '0'
                    contacts:
                      contacts:
                      - id: 645e139105a7e7570bfa4d1d
                        role: lead
                      type: contact.list
                    created_at: 1683886993
                    id: '695350'
                    team_assignee_id: '0'
                    ticket_attributes:
                      description: null
                      title: attribute_value
                    ticket_parts:
                      ticket_parts:
                      - attachments: []
                        author:
                          email: admin408@email.com
                          id: '991266691'
                          name: Ciaran408 Lee
                          type: admin
                        created_at: 1683886994
                        id: '138268'
                        part_type: ticket_state_updated_by_admin
                        previous_ticket_state: submitted
                        redacted: false
                        ticket_state: submitted
                        type: ticket_part
                        updated_at: 1683886994
                      total_count: 1
                      type: ticket_part.list
                    ticket_state: submitted
                    ticket_type:
                      archived: false
                      created_at: 1683886992
                      description: my ticket type description is awesome.
                      icon: "\U0001F981"
                      id: '744663'
                      is_internal: false
                      name: my-ticket-type-9
                      ticket_type_attributes:
                        data:
                        - archived: false
                          created_at: 1683886993
                          data_type: string
                          default: false
                          description: ola
                          id: '157452'
                          input_options: null
                          name: title
                          order: 0
                          required_to_create: true
                          required_to_create_for_contacts: false
                          ticket_type_id: 744663
                          type: ticket_type_attribute
                          updated_at: 1683886993
                          visible_on_create: true
                          visible_to_contacts: false
                          workspace_id: this_is_an_id591_that_should_be_at_least_
                        - archived: false
                          created_at: 1683886993
                          data_type: string
                          default: false
                          description: ola
                          id: '157453'
                          input_options: null
                          name: description
                          order: 0
                          required_to_create: true
                          required_to_create_for_contacts: false
                          ticket_type_id: 744663
                          type: ticket_type_attribute
                          updated_at: 1683886993
                          visible_on_create: true
                          visible_to_contacts: false
                          workspace_id: this_is_an_id591_that_should_be_at_least_
                        type: list
                      type: ticket_type
                      updated_at: 1683886992
                      workspace_id: this_is_an_id591_that_should_be_at_least_
                    type: ticket
                    updated_at: 1683886992
              schema:
                oneOf:
                - $ref: '#/components/schemas/ticket'
                - type: object
          description: Ticket found
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: db18806c-5659-4a44-9125-b07c74d3d56d
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
      summary: Retrieve a ticket
      tags:
      - Tickets
    put:
      description: You can update a ticket.
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - description: The unique identifier for the ticket which is given by Intercom
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            examples:
              admin_not_found:
                summary: Admin not found
                value:
                  assignment:
                    admin_id: '123'
                    assignee_id: '991266672'
                  state: in_progress
                  ticket_attributes:
                    description: there is a problem
                    title: example
              assignee_not_found:
                summary: Assignee not found
                value:
                  assignment:
                    admin_id: '991266678'
                    assignee_id: '456'
                  state: in_progress
                  ticket_attributes:
                    description: there is a problem
                    title: example
              successful_response:
                summary: Successful response
                value:
                  assignment:
                    admin_id: '991266662'
                    assignee_id: '991266664'
                  state: in_progress
                  ticket_attributes:
                    description: there is a problem
                    title: example
            schema:
              $ref: '#/components/schemas/update_ticket_request'
      responses:
        '200':
          content:
            application/json:
              examples:
                Successful response:
                  value:
                    admin_assignee_id: '991266664'
                    contacts:
                      contacts:
                      - id: 645e138505a7e7570bfa4d1a
                        role: lead
                      type: contact.list
                    created_at: 1683886981
                    id: '695347'
                    team_assignee_id: '0'
                    ticket_attributes:
                      description: there is a problem
                      title: example
                    ticket_parts:
                      ticket_parts:
                      - attachments: []
                        author:
                          email: admin382@email.com
                          id: '991266662'
                          name: Ciaran382 Lee
                          type: admin
                        created_at: 1683886981
                        id: '138261'
                        part_type: ticket_state_updated_by_admin
                        previous_ticket_state: submitted
                        redacted: false
                        ticket_state: submitted
                        type: ticket_part
                        updated_at: 1683886981
                      - attachments: []
                        author:
                          email: operator+this_is_an_id583_that_should_be_at_least_@intercom.io
                          id: '991266663'
                          name: Operator
                          type: bot
                        created_at: 1683886983
                        id: '138262'
                        part_type: ticket_attribute_updated_by_admin
                        redacted: false
                        type: ticket_part
                        updated_at: 1683886983
                      - attachments: []
                        author:
                          email: operator+this_is_an_id583_that_should_be_at_least_@intercom.io
                          id: '991266663'
                          name: Operator
                          type: bot
                        created_at: 1683886983
                        id: '138263'
                        part_type: ticket_attribute_updated_by_admin
                        redacted: false
                        type: ticket_part
                        updated_at: 1683886983
                      - attachments: []
                        author:
                          email: operator+this_is_an_id583_that_should_be_at_least_@intercom.io
                          id: '991266663'
                          name: Operator
                          type: bot
                        created_at: 1683886983
                        id: '138264'
                        part_type: ticket_state_updated_by_admin
                        previous_ticket_state: submitted
                        redacted: false
                        ticket_state: in_progress
                        type: ticket_part
                        updated_at: 1683886983
                      - assigned_to:
                          id: '991266664'
                          type: admin
                        attachments: []
                        author:
                          email: admin382@email.com
                          id: '991266662'
                          name: Ciaran382 Lee
                          type: admin
                        created_at: 1683886984
                        id: '138265'
                        part_type: assignment
                        redacted: false
                        type: ticket_part
                        updated_at: 1683886984
                      total_count: 5
                      type: ticket_part.list
                    ticket_state: in_progress
                    ticket_type:
                      archived: false
                      created_at: 1683886980
                      description: my ticket type description is awesome.
                      icon: "\U0001F981"
                      id: '744659'
                      is_internal: false
                      name: my-ticket-type-5
                      ticket_type_attributes:
                        data:
                        - archived: false
                          created_at: 1683886980
                          data_type: string
                          default: false
                          description: ola
                          id: '157441'
                          input_options: null
                          name: title
                          order: 0
                          required_to_create: true
                          required_to_create_for_contacts: false
                          ticket_type_id: 744659
                          type: ticket_type_attribute
                          updated_at: 1683886980
                          visible_on_create: true
                          visible_to_contacts: false
                          workspace_id: this_is_an_id583_that_should_be_at_least_
                        - archived: false
                          created_at: 1683886980
                          data_type: string
                          default: false
                          description: ola
                          id: '157442'
                          input_options: null
                          name: description
                          order: 0
                          required_to_create: true
                          required_to_create_for_contacts: false
                          ticket_type_id: 744659
                          type: ticket_type_attribute
                          updated_at: 1683886980
                          visible_on_create: true
                          visible_to_contacts: false
                          workspace_id: this_is_an_id583_that_should_be_at_least_
                        type: list
                      type: ticket_type
                      updated_at: 1683886980
                      workspace_id: this_is_an_id583_that_should_be_at_least_
                    type: ticket
                    updated_at: 1683886980
              schema:
                oneOf:
                - $ref: '#/components/schemas/ticket'
                - type: object
          description: Successful response
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: addeafe4-ee30-4d84-8d56-7e56c0f1e0fe
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
        '404':
          content:
            application/json:
              examples:
                Admin not found:
                  value:
                    errors:
                    - code: assignee_not_found
                      message: Assignee not found
                    request_id: 00034590-4796-454f-a627-5434861e3389
                    type: error.list
                Assignee not found:
                  value:
                    errors:
                    - code: assignee_not_found
                      message: Assignee not found
                    request_id: e54f3f54-c8a9-40bd-976e-d9c34a052596
                    type: error.list
          description: Assignee not found
      summary: Update a ticket
      tags:
      - Tickets
  /tickets/{ticket_id}/reply:
    parameters:
    - description: ticket_id
      in: path
      name: ticket_id
      required: true
      schema:
        type: string
    post:
      description: "You can create a new ticket reply. Only note is supported as a\
        \ ticket reply type at the moment.\n> \U0001F4D8 Creating ticket notes.\n\
        >\n> All tickets have the same internal notes functionality as conversations\
        \ so teammates can discuss and resolve the customer request internally.\n"
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - description: The unique identifier for the ticket which is given by Intercom
        in: path
        name: ticket_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            examples:
              successful_response:
                summary: Successful response
                value:
                  admin_id: 991266637
                  body: This is a body
                  message_type: note
            schema:
              $ref: '#/components/schemas/create_ticket_reply_request'
      responses:
        '200':
          content:
            application/json:
              examples:
                Successful response:
                  value:
                    attachments: []
                    author:
                      email: admin360@email.com
                      id: '991266637'
                      name: Ciaran360 Lee
                      type: admin
                    body: <p>This is a body</p>
                    created_at: 1683886973
                    id: '138258'
                    part_type: note
                    redacted: false
                    type: ticket_part
                    updated_at: 1683886973
              schema:
                oneOf:
                - $ref: '#/components/schemas/ticket_note'
                - type: object
          description: Successful response
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: ee0b1f58-f25e-441e-b63a-f210d029ff6d
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
      summary: Create a ticket reply
      tags:
      - Tickets
  /visitors:
    get:
      description: You can fetch the details of a single visitor.
      operationId: retrieveVisitorWithUserId
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - description: The user_id of the Visitor you want to retrieve.
        in: query
        name: user_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                successful:
                  value:
                    anonymous: true
                    app_id: this_is_an_id603_that_should_be_at_least_
                    avatar:
                      image_url: null
                      type: avatar
                    companies:
                      companies: []
                      type: company.list
                    created_at: 1683887077
                    custom_attributes: {}
                    do_not_track: null
                    email: ''
                    has_hard_bounced: false
                    id: 645e13e505a7e7570bfa4e0c
                    last_request_at: null
                    location_data: {}
                    marked_email_as_spam: false
                    name: null
                    owner_id: null
                    phone: null
                    pseudonym: null
                    referrer: null
                    remote_created_at: 1683887077
                    segments:
                      segments: []
                      type: segment.list
                    session_count: 0
                    signed_up_at: 1683887077
                    social_profiles:
                      social_profiles: []
                      type: social_profile.list
                    tags:
                      tags: []
                      type: tag.list
                    type: visitor
                    unsubscribed_from_emails: false
                    updated_at: 1683887077
                    user_id: 3ecf64d0-9ed1-4e9f-88e1-da7d6e6782f3
                    utm_campaign: null
                    utm_content: null
                    utm_medium: null
                    utm_source: null
                    utm_term: null
              schema:
                oneOf:
                - $ref: '#/components/schemas/visitor'
                - type: object
          description: successful
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: 54492ca7-caa3-49ea-8bc5-d570d596723b
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
        '404':
          content:
            application/json:
              examples:
                Visitor not found:
                  value:
                    errors:
                    - code: not_found
                      message: Visitor Not Found
                    request_id: 8999943b-f286-42c6-bc3b-34c699bd60db
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Visitor not found
      summary: Retrieve a visitor with User ID
      tags:
      - Visitors
    put:
      description: 'Sending a PUT request to `/visitors` will result in an update
        of an existing Visitor.


        **Option 1.** You can update a visitor by passing in the `user_id` of the
        visitor in the Request body.


        **Option 2.** You can update a visitor by passing in the `id` of the visitor
        in the Request body.

        '
      operationId: updateVisitor
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      requestBody:
        content:
          application/json:
            examples:
              successful:
                summary: successful
                value:
                  id: 645e13e305a7e7570bfa4e09
                  name: Gareth Bale
              visitor_not_found:
                summary: visitor Not Found
                value:
                  name: Christian Fail
                  user_id: fail
            schema:
              $ref: '#/components/schemas/update_visitor_request'
      responses:
        '200':
          content:
            application/json:
              examples:
                successful:
                  value:
                    anonymous: true
                    app_id: this_is_an_id597_that_should_be_at_least_
                    avatar:
                      image_url: https://static.intercomassets.com/app/pseudonym_avatars_2019/violet-plane.png
                      type: avatar
                    companies:
                      companies: []
                      type: company.list
                    created_at: 1683887075
                    custom_attributes: {}
                    do_not_track: null
                    email: ''
                    has_hard_bounced: false
                    id: 645e13e305a7e7570bfa4e09
                    last_request_at: null
                    location_data: {}
                    marked_email_as_spam: false
                    name: Gareth Bale
                    owner_id: null
                    phone: null
                    pseudonym: Violet Plane
                    referrer: null
                    remote_created_at: 1683887075
                    segments:
                      segments: []
                      type: segment.list
                    session_count: 0
                    signed_up_at: 1683887075
                    social_profiles:
                      social_profiles: []
                      type: social_profile.list
                    tags:
                      tags: []
                      type: tag.list
                    type: visitor
                    unsubscribed_from_emails: false
                    updated_at: 1683887075
                    user_id: 3ecf64d0-9ed1-4e9f-88e1-da7d6e6782f3
                    utm_campaign: null
                    utm_content: null
                    utm_medium: null
                    utm_source: null
                    utm_term: null
              schema:
                oneOf:
                - $ref: '#/components/schemas/visitor'
                - type: object
          description: successful
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: a1f12991-a3cf-4c51-bdc0-577943d1dbf6
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
        '404':
          content:
            application/json:
              examples:
                visitor Not Found:
                  value:
                    errors:
                    - code: not_found
                      message: Visitor Not Found
                    request_id: 2c9e2795-293e-4577-a6b4-81d15ecd5b41
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: visitor Not Found
      summary: Update a visitor
      tags:
      - Visitors
  /visitors/convert:
    post:
      description: "You can merge a Visitor to a Contact of role type `lead` or `user`.\n\
        \n> \U0001F4D8 What happens upon a visitor being converted?\n>\n> If the User\
        \ exists, then the Visitor will be merged into it, the Visitor deleted and\
        \ the User returned. If the User does not exist, the Visitor will be converted\
        \ to a User, with the User identifiers replacing it's Visitor identifiers.\n"
      operationId: convertVisitor
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      requestBody:
        content:
          application/json:
            examples:
              successful:
                summary: successful
                value:
                  contact:
                    email: ''
                  type: user
                  visitor:
                    user_id: 3ecf64d0-9ed1-4e9f-88e1-da7d6e6782f3
            schema:
              $ref: '#/components/schemas/convert_visitor_request'
      responses:
        '200':
          content:
            application/json:
              examples:
                successful:
                  value:
                    anonymous: true
                    app_id: this_is_an_id621_that_should_be_at_least_
                    avatar:
                      image_url: https://static.intercomassets.com/app/pseudonym_avatars_2019/indigo-lightning.png
                      type: avatar
                    companies:
                      companies: []
                      type: company.list
                    created_at: 1683887084
                    custom_attributes: {}
                    do_not_track: null
                    email: ''
                    has_hard_bounced: false
                    id: 645e13ec05a7e7570bfa4e15
                    last_request_at: null
                    location_data: {}
                    marked_email_as_spam: false
                    name: null
                    owner_id: null
                    phone: null
                    pseudonym: Indigo Lightning
                    referrer: null
                    remote_created_at: 1683887085
                    segments:
                      segments: []
                      type: segment.list
                    session_count: 0
                    signed_up_at: 1683887085
                    social_profiles:
                      social_profiles: []
                      type: social_profile.list
                    tags:
                      tags: []
                      type: tag.list
                    type: visitor
                    unsubscribed_from_emails: false
                    updated_at: 1683887085
                    user_id: 3ecf64d0-9ed1-4e9f-88e1-da7d6e6782f3
                    utm_campaign: null
                    utm_content: null
                    utm_medium: null
                    utm_source: null
                    utm_term: null
              schema:
                oneOf:
                - $ref: '#/components/schemas/contact'
                - type: object
          description: successful
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: 3525c961-a7d7-4c41-a980-1e40170d257a
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
      summary: Convert a visitor
      tags:
      - Visitors
  /visitors/{id}:
    delete:
      description: You can delete a single visitor.
      operationId: deleteVisitor
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - description: Id provided by Intercom.
        example: 5e1c4c1c-7b1e-4b5d-8c1c-5e1c4c1c7b1e
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                successful:
                  value:
                    anonymous: true
                    app_id: this_is_an_id615_that_should_be_at_least_
                    avatar:
                      image_url: null
                      type: avatar
                    companies:
                      companies: []
                      type: company.list
                    created_at: 1683887082
                    custom_attributes: {}
                    do_not_track: null
                    email: ''
                    has_hard_bounced: false
                    id: 645e13ea05a7e7570bfa4e12
                    last_request_at: null
                    location_data: {}
                    marked_email_as_spam: false
                    name: null
                    owner_id: null
                    phone: null
                    pseudonym: null
                    referrer: null
                    remote_created_at: 1683887082
                    segments:
                      segments: []
                      type: segment.list
                    session_count: 0
                    signed_up_at: 1683887082
                    social_profiles:
                      social_profiles: []
                      type: social_profile.list
                    tags:
                      tags: []
                      type: tag.list
                    type: visitor
                    unsubscribed_from_emails: false
                    updated_at: 1683887083
                    user_id: 3ecf64d0-9ed1-4e9f-88e1-da7d6e6782f3
                    utm_campaign: null
                    utm_content: null
                    utm_medium: null
                    utm_source: null
                    utm_term: null
              schema:
                oneOf:
                - $ref: '#/components/schemas/visitor_deleted_object'
                - type: object
          description: successful
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: 553fafcd-dbb7-4f99-b124-010fa02ea896
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
        '404':
          content:
            application/json:
              examples:
                Visitor Not Found:
                  value:
                    errors:
                    - code: not_found
                      message: User Not Found
                    request_id: 8d80cbba-7dcb-4702-b752-4a36c590ada5
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Visitor Not Found
      summary: Delete a visitor
      tags:
      - Visitors
    get:
      description: You can fetch the details of a single visitor.
      operationId: retrieveVisitor
      parameters:
      - in: header
        name: Intercom-Version
        schema:
          $ref: '#/components/schemas/intercom_version'
      - description: Id provided by Intercom.
        example: 5e1c4c1c-7b1e-4b5d-8c1c-5e1c4c1c7b1e
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                successful:
                  value:
                    anonymous: true
                    app_id: this_is_an_id609_that_should_be_at_least_
                    avatar:
                      image_url: null
                      type: avatar
                    companies:
                      companies: []
                      type: company.list
                    created_at: 1683887079
                    custom_attributes: {}
                    do_not_track: null
                    email: ''
                    has_hard_bounced: false
                    id: 645e13e705a7e7570bfa4e0f
                    last_request_at: null
                    location_data: {}
                    marked_email_as_spam: false
                    name: null
                    owner_id: null
                    phone: null
                    pseudonym: null
                    referrer: null
                    remote_created_at: 1683887079
                    segments:
                      segments: []
                      type: segment.list
                    session_count: 0
                    signed_up_at: 1683887079
                    social_profiles:
                      social_profiles: []
                      type: social_profile.list
                    tags:
                      tags: []
                      type: tag.list
                    type: visitor
                    unsubscribed_from_emails: false
                    updated_at: 1683887079
                    user_id: 3ecf64d0-9ed1-4e9f-88e1-da7d6e6782f3
                    utm_campaign: null
                    utm_content: null
                    utm_medium: null
                    utm_source: null
                    utm_term: null
              schema:
                oneOf:
                - $ref: '#/components/schemas/visitor'
                - type: object
          description: successful
        '401':
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    errors:
                    - code: unauthorized
                      message: Access Token Invalid
                    request_id: 54e8534f-a1f2-4153-935a-07773426fdb3
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Unauthorized
        '404':
          content:
            application/json:
              examples:
                Visitor not found:
                  value:
                    errors:
                    - code: not_found
                      message: Visitor Not Found
                    request_id: 5b48b901-43b4-4454-b748-5b780f84f68c
                    type: error.list
              schema:
                oneOf:
                - $ref: '#/components/schemas/error'
                - type: object
          description: Visitor not found
      summary: Retrieve a visitor with ID
      tags:
      - Visitors
security:
- bearerAuth: []
servers:
- description: The production API server
  url: https://api.intercom.io
- description: The european API server
  url: https://api.eu.intercom.io
- description: The australian API server
  url: https://api.au.intercom.io
tags:
- description: Everything about your Admins
  name: Admins
- description: Everything about your Articles
  name: Articles
- description: Everything about your Companies
  name: Companies
- description: Everything about your contacts
  name: Contacts
- description: Everything about your Conversations
  externalDocs:
    description: What is a conversation?
    url: https://www.intercom.com/help/en/articles/4323904-what-is-a-conversation
  name: Conversations
- description: Everything about your Data Attributes
  name: Data Attributes
- description: Everything about your Data Events
  name: Data Events
- description: Everything about your Data Exports
  name: Data Export
- description: Everything about your Help Center
  name: Help Center
- description: Everything about your messages
  name: Messages
- description: Everything about your News
  externalDocs:
    description: News explained
    url: https://www.intercom.com/help/en/articles/6362251-news-explained
  name: News
- description: Everything about your Notes
  name: Notes
- description: Everything about your Segments
  name: Segments
- description: Everything about subscription types
  name: Subscription Types
- description: Everything about Switch
  externalDocs:
    description: 'Meet Switch: from on hold to messaging in just a few taps'
    url: https://www.intercom.com/switch
  name: Switch
- description: Everything about tags
  name: Tags
- description: Everything about your Teams
  name: Teams
- description: Everything about your ticket type attributes
  name: Ticket Type Attributes
- description: Everything about your ticket types
  name: Ticket Types
- description: Everything about your tickets
  name: Tickets
- description: Everything about your Visitors
  name: Visitors

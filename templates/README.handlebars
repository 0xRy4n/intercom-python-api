# Intercom Python API
<p style="text-align:center">
![Intercom Python API](https://i.imgur.com/rQooYPo.png)
</p>

This package provides a wrapper around the Intercom API in the form of a python client. It conforms to the OpenAPI specification files provided by Intercom.

This is an **unofficial** client and is in no way maintained by or directly affiliated to Intercom. 

This package was largely generated by the [OpenAPI Generator](https://openapi-generator.tech) project:

- API version: {{appVersion}}
- Package version: {{packageVersion}}
{{#unless hideGenerationTimestamp}}
- Build date: {{generatedDate}}
{{/unless}}
- Build package: {{generatorClass}}

Modifications to the Handlebars templates used to generate the client can be found in the `./templates` folder. The custom convienence interface can be found in the `./intercom_python_api/client.py` module.

{{#if infoUrl}}
For more information regarding the Intercom API, please visit [{{{infoUrl}}}]({{{infoUrl}}})
{{/if}}

## Requirements.

Python {{generatorLanguageVersion}}

## Installation & Usage
### pip install

If the python package is hosted on a repository, you can install directly using:

```sh
pip install git+https://{{gitHost}}/{{{gitUserId}}}/{{{gitRepoId}}}.git
```
(you may need to run `pip` with root permission: `sudo pip install git+https://{{gitHost}}/{{{gitUserId}}}/{{{gitRepoId}}}.git`)

Then import the package:
```python
import {{{packageName}}}
```

### Setuptools

Install via [Setuptools](http://pypi.python.org/pypi/setuptools).

```sh
python setup.py install --user
```
(or `sudo python setup.py install` to install the package for all users)

Then import the package:
```python
import {{{packageName}}}
```

## API Usage

### Parameters 
In order to avoid name collisions in parameter names provided in different locations, user inputs have been seperated into different dictionaries which can be passed in an API call:

- query_params
- path_params
- header_params
- cookie_params

### Endpoint Responses
All API calls / endpoint responses will a response object with three attributes:

- response: urllib3.HTTPResponse
- headers: typing.Union[Unset, TODO]
- body: typing.Union[Unset, Schema]

The body will of course contain the actual response payload from the API endpoint.

## Getting Started

Please follow the [installation procedure](#installation--usage) and then run the following:

{{> README_common }}